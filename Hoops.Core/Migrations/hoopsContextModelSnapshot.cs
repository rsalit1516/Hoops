// <auto-generated />
using System;
using Hoops.Core.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hoops.Core.Migrations
{
    [DbContext(typeof(hoopsContext))]
    partial class hoopsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hoops.Core.Entities.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CoachID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoachPhone")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 773, DateTimeKind.Local).AddTicks(2038));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PersonId")
                        .HasColumnName("PersonID")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnName("PlayerID")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnName("SeasonID")
                        .HasColumnType("int");

                    b.Property<string>("ShirtSize")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CoachId");

                    b.HasIndex("PersonId");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ColorID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 782, DateTimeKind.Local).AddTicks(2094));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<bool?>("Discontinued")
                        .HasColumnType("bit");

                    b.HasKey("ColorId");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Comments", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CommentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("ntext");

                    b.Property<string>("CommentType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedUser")
                        .HasColumnName("CreatedUSer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("LinkId")
                        .HasColumnName("LinkID")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompanyID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 786, DateTimeKind.Local).AddTicks(8624));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("EmailSender")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ImageName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TimeZone")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Content", b =>
                {
                    b.Property<int>("CntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cntID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Bold")
                        .HasColumnType("bit");

                    b.Property<string>("CntScreen")
                        .HasColumnName("cntScreen")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("CntSeq")
                        .HasColumnName("cntSeq")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 789, DateTimeKind.Local).AddTicks(1435));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FontColor")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FontSize")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool?>("Italic")
                        .HasColumnType("bit");

                    b.Property<string>("LineText")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("UnderLn")
                        .HasColumnType("bit");

                    b.HasKey("CntId");

                    b.ToTable("Content");
                });

            modelBuilder.Entity("Hoops.Core.Entities.ConversionErrors", b =>
                {
                    b.Property<string>("ErrorDescription")
                        .HasColumnName("Error Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectName")
                        .HasColumnName("Object Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ObjectType")
                        .HasColumnName("Object Type")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.ToTable("Conversion Errors");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 792, DateTimeKind.Local).AddTicks(9402));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("EmailPref")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PhonePref")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.Property<int?>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DirectorId");

                    b.ToTable("Director");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Division", b =>
                {
                    b.Property<int>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DivisionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoDirectorId")
                        .HasColumnName("CoDirectorID")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 795, DateTimeKind.Local).AddTicks(3317));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("DirectorId")
                        .HasColumnName("DirectorID")
                        .HasColumnType("int");

                    b.Property<string>("DivisionDescription")
                        .HasColumnName("DivisionDescription")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DraftDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DraftTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DraftVenue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Gender2")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("MaxDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("MaxDate2")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("MinDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("MinDate2")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("SeasonId")
                        .HasColumnName("SeasonID")
                        .HasColumnType("int");

                    b.Property<bool>("Stats")
                        .HasColumnType("bit");

                    b.HasKey("DivisionId");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Dtproperties", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<byte[]>("Lvalue")
                        .HasColumnName("lvalue")
                        .HasColumnType("image");

                    b.Property<int?>("Objectid")
                        .HasColumnName("objectid")
                        .HasColumnType("int");

                    b.Property<string>("Property")
                        .IsRequired()
                        .HasColumnName("property")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("Uvalue")
                        .HasColumnName("uvalue")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Value")
                        .HasColumnName("value")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Version")
                        .HasColumnName("version")
                        .HasColumnType("int");

                    b.ToTable("dtproperties");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Household", b =>
                {
                    b.Property<int>("HouseId")
                        .HasColumnName("HouseID")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 803, DateTimeKind.Local).AddTicks(5496));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("EmailList")
                        .HasColumnType("bit");

                    b.Property<bool?>("FeeWaived")
                        .HasColumnType("bit");

                    b.Property<int?>("Guardian")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("SportsCard")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("Teamid")
                        .HasColumnName("TEMID")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("HouseId");

                    b.HasIndex("Phone", "Email", "HouseId")
                        .HasName("idx_DCh_2775_2774_Household");

                    b.ToTable("Household");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Location", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Hoops.Core.Entities.PayErrorLog", b =>
                {
                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 805, DateTimeKind.Local).AddTicks(2034));

                    b.Property<string>("ErrorMsg")
                        .HasColumnName("ErrorMSG")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("HouseId")
                        .HasColumnName("HouseID")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnName("SeasonID")
                        .HasColumnType("int");

                    b.ToTable("PayErrorLog");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ad")
                        .HasColumnName("AD")
                        .HasColumnType("bit");

                    b.Property<bool?>("AsstCoach")
                        .HasColumnType("bit");

                    b.Property<bool?>("Bc")
                        .HasColumnName("BC")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("BoardMember")
                        .HasColumnType("bit");

                    b.Property<bool?>("BoardOfficer")
                        .HasColumnType("bit");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool?>("Coach")
                        .HasColumnType("bit");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 809, DateTimeKind.Local).AddTicks(3037));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Electrician")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Equipment")
                        .HasColumnType("bit");

                    b.Property<bool?>("FeeWaived")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("GiftedLevelsUp")
                        .HasColumnName("GiftedLevelsUP")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("LatestRating")
                        .HasColumnType("int");

                    b.Property<string>("LatestSeason")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("LatestShirtSize")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("MainHouseId")
                        .HasColumnName("MainHouseID")
                        .HasColumnType("int");

                    b.Property<bool?>("Parent")
                        .HasColumnType("bit");

                    b.Property<bool?>("Player")
                        .HasColumnType("bit");

                    b.Property<bool?>("Printing")
                        .HasColumnType("bit");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("SignUps")
                        .HasColumnType("bit");

                    b.Property<bool?>("Sponsor")
                        .HasColumnType("bit");

                    b.Property<bool?>("Suspended")
                        .HasColumnType("bit");

                    b.Property<bool?>("TeeShirts")
                        .HasColumnType("bit");

                    b.Property<int?>("Tempid")
                        .HasColumnName("TEMPID")
                        .HasColumnType("int");

                    b.Property<bool?>("TryOuts")
                        .HasColumnType("bit");

                    b.Property<string>("Workphone")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("PersonId");

                    b.HasIndex("Coach")
                        .HasName("idx_DCh_12521_12520_People");

                    b.HasIndex("MainHouseId")
                        .HasName("idx_DCh_75612_75611_People");

                    b.HasIndex("FirstName", "LastName")
                        .HasName("idx_DCh_14287_14286_People");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PlayerID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ad")
                        .HasColumnName("AD")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BalanceOwed")
                        .HasColumnType("money");

                    b.Property<string>("CheckMemo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Coach")
                        .HasColumnType("int");

                    b.Property<int?>("CoachId")
                        .HasColumnName("CoachID")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 821, DateTimeKind.Local).AddTicks(197));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DivisionId")
                        .HasColumnName("DivisionID")
                        .HasColumnType("int");

                    b.Property<string>("DraftId")
                        .HasColumnName("DraftID")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("DraftNotes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("FamilyDisc")
                        .HasColumnType("bit");

                    b.Property<string>("NoteDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("OutOfTown")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PayType")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int?>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.Property<bool?>("PlaysDown")
                        .HasColumnType("bit");

                    b.Property<bool?>("PlaysUp")
                        .HasColumnType("bit");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("RefundBatchId")
                        .HasColumnName("RefundBatchID")
                        .HasColumnType("int");

                    b.Property<bool?>("Rollover")
                        .HasColumnType("bit");

                    b.Property<bool?>("Scholarship")
                        .HasColumnType("bit");

                    b.Property<int?>("SeasonId")
                        .HasColumnName("SeasonID")
                        .HasColumnType("int");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnName("ShoppingCartID")
                        .HasColumnType("int");

                    b.Property<int?>("Sponsor")
                        .HasColumnType("int");

                    b.Property<int?>("SponsorId")
                        .HasColumnName("SponsorID")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnName("TeamID")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("DivisionId")
                        .HasName("idx_DCh_488836_488835_Players");

                    b.HasIndex("PersonId")
                        .HasName("idx_DCh_75619_75618_Players");

                    b.HasIndex("PlayerId")
                        .HasName("idx_DCh_2451_2450_Players");

                    b.HasIndex("TeamId")
                        .HasName("idx_DCh_12817_12816_Players");

                    b.HasIndex("Coach", "Sponsor", "SeasonId")
                        .HasName("idx_DCh_98394_98393_Players");

                    b.HasIndex("SeasonId", "PayType", "Sponsor")
                        .HasName("idx_DCh_8781_8780_Players");

                    b.HasIndex("PlayerId", "DivisionId", "Coach", "Sponsor", "SeasonId")
                        .HasName("idx_DCh_25_24_Players");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Role", b =>
                {
                    b.Property<decimal>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("AccessType")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 822, DateTimeKind.Local).AddTicks(5738));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ScreenName")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SchDivisions", b =>
                {
                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("DivisionNumber")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.ToTable("SchDivisions");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SchExceptions", b =>
                {
                    b.Property<string>("AddOrRemove")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime>("ExceptionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ExceptionNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExceptionTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("ExceptionTimeAllDay")
                        .HasColumnType("bit");

                    b.Property<int>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.ToTable("SchExceptions");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SchGameTimes", b =>
                {
                    b.Property<DateTime>("GameStartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<short>("MilitaryTime")
                        .HasColumnType("smallint");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<int>("TeamNumber")
                        .HasColumnType("int");

                    b.Property<byte>("WeekDay")
                        .HasColumnType("tinyint");

                    b.ToTable("SchGameTimes");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SchGames", b =>
                {
                    b.Property<int>("SchGames1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SchGames")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("GameComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GameNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("GameTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("HomeTeamForfeited")
                        .HasColumnType("bit");

                    b.Property<int>("HomeTeamNumber")
                        .HasColumnType("int");

                    b.Property<short>("HomeTeamScore")
                        .HasColumnType("smallint");

                    b.Property<int>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Overtime")
                        .HasColumnType("bit");

                    b.Property<bool>("Rainout")
                        .HasColumnType("bit");

                    b.Property<string>("ScheduleComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<bool>("VisitingTeamForfeited")
                        .HasColumnType("bit");

                    b.Property<int>("VisitingTeamNumber")
                        .HasColumnType("int");

                    b.Property<short>("VisitingTeamScore")
                        .HasColumnType("smallint");

                    b.HasKey("SchGames1");

                    b.ToTable("SchGames");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SchLocations", b =>
                {
                    b.Property<int>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.ToTable("SchLocations");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SchOptions", b =>
                {
                    b.Property<bool>("CheckAllSchedules")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckForGameConflicts")
                        .HasColumnType("bit");

                    b.Property<byte>("ComputeMethod")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ComputeOption")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DisplaceOption")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DivisionOption")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<short>("GamesPerTeam")
                        .HasColumnType("smallint");

                    b.Property<short>("MaxGamesDay")
                        .HasColumnType("smallint");

                    b.Property<short>("MaxGamesWeek")
                        .HasColumnType("smallint");

                    b.Property<short>("MinDaysBetweenGames")
                        .HasColumnType("smallint");

                    b.Property<int?>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<byte>("ScheduleOption")
                        .HasColumnType("tinyint");

                    b.Property<short>("TimesInsideDivision")
                        .HasColumnType("smallint");

                    b.Property<short>("TimesOutsideDivision")
                        .HasColumnType("smallint");

                    b.ToTable("SchOptions");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SchTeams", b =>
                {
                    b.Property<int>("DivisionNumber")
                        .HasColumnType("int");

                    b.Property<int>("HomeLocation")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<short>("ScheduleTeamNumber")
                        .HasColumnType("smallint");

                    b.Property<int>("TeamNumber")
                        .HasColumnType("int");

                    b.ToTable("SchTeams");
                });

            modelBuilder.Entity("Hoops.Core.Entities.ScheduleDivTeam", b =>
                {
                    b.Property<int>("ScheduleDivTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DivisionNumber")
                        .HasColumnType("int");

                    b.Property<int?>("HomeLocation")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleTeamNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("TeamNumber")
                        .HasColumnType("int");

                    b.HasKey("ScheduleDivTeamId");

                    b.HasIndex("ScheduleNumber", "TeamNumber")
                        .HasName("IX_ScheduleDivTeams");

                    b.ToTable("SchedueDivTeam");
                });

            modelBuilder.Entity("Hoops.Core.Entities.ScheduleGame", b =>
                {
                    b.Property<int>("ScheduleGamesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GameDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GameNumber")
                        .HasColumnType("int");

                    b.Property<string>("GameTime")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("HomeForfeited")
                        .HasColumnType("bit");

                    b.Property<int?>("HomeTeamNumber")
                        .HasColumnType("int");

                    b.Property<int?>("HomeTeamScore")
                        .HasColumnType("int");

                    b.Property<int?>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<bool?>("VisitingForfeited")
                        .HasColumnType("bit");

                    b.Property<int?>("VisitingTeamNumber")
                        .HasColumnType("int");

                    b.Property<int?>("VisitingTeamScore")
                        .HasColumnType("int");

                    b.HasKey("ScheduleGamesId");

                    b.HasIndex("SeasonId", "DivisionId", "GameNumber")
                        .HasName("IX_ScheduleGames");

                    b.HasIndex("GameNumber", "LocationNumber", "GameDate", "GameTime", "VisitingTeamNumber", "HomeTeamNumber", "VisitingTeamScore", "HomeTeamScore", "ScheduleNumber", "SeasonId")
                        .HasName("idx_DCh_20078_20077_ScheduleGames");

                    b.HasIndex("ScheduleNumber", "GameNumber", "LocationNumber", "GameDate", "GameTime", "VisitingTeamNumber", "HomeTeamNumber", "VisitingTeamScore", "HomeTeamScore", "VisitingForfeited", "HomeForfeited", "SeasonId", "DivisionId")
                        .HasName("idx_DCh_1924_1923_ScheduleGames");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Hoops.Core.Entities.ScheduleGamesStats", b =>
                {
                    b.Property<bool>("Dnp")
                        .HasColumnName("DNP")
                        .HasColumnType("bit");

                    b.Property<int>("GameNumber")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<int>("RowId")
                        .HasColumnName("RowID")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnName("SeasonID")
                        .HasColumnType("int");

                    b.Property<int>("TeamNumber")
                        .HasColumnType("int");

                    b.ToTable("ScheduleGamesStats");
                });

            modelBuilder.Entity("Hoops.Core.Entities.ScheduleLocation", b =>
                {
                    b.Property<int>("LocationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("LocationNumber");

                    b.ToTable("ScheduleLocations");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SchedulePlayoff", b =>
                {
                    b.Property<int>("SchedulePlayoffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descr")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GameDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("GameNumber")
                        .HasColumnType("int");

                    b.Property<string>("GameTime")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("HomeTeam")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("HomeTeamScore")
                        .HasColumnType("int");

                    b.Property<int?>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<string>("VisitingTeam")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("VisitingTeamScore")
                        .HasColumnType("int");

                    b.HasKey("SchedulePlayoffId");

                    b.ToTable("SchedulePlayoffs");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Season", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SeasonID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConvenienceFee")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 835, DateTimeKind.Local).AddTicks(8434));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("CurrentSchedule")
                        .HasColumnType("bit");

                    b.Property<bool?>("CurrentSeason")
                        .HasColumnType("bit");

                    b.Property<bool?>("CurrentSignUps")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("NewSchoolYear")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ParticipationFee")
                        .HasColumnType("money");

                    b.Property<string>("SeaDesc")
                        .HasColumnName("Sea_Desc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("SignUpsDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SignUpsEnd")
                        .HasColumnName("SignUpsEND")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("SponsorFee")
                        .HasColumnType("money");

                    b.Property<bool?>("TestSeason")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("SeasonId");

                    b.ToTable("Season");
                });

            modelBuilder.Entity("Hoops.Core.Entities.ShoppingCart", b =>
                {
                    b.Property<int>("CartId")
                        .HasColumnName("CartID")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 837, DateTimeKind.Local).AddTicks(7544));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("HouseId")
                        .HasColumnName("HouseID")
                        .HasColumnType("int");

                    b.Property<string>("PayerEmail")
                        .HasColumnName("Payer_Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PayerId")
                        .HasColumnName("Payer_ID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("PaymentFee")
                        .HasColumnName("Payment_Fee")
                        .HasColumnType("money");

                    b.Property<decimal?>("PaymentGross")
                        .HasColumnName("Payment_Gross")
                        .HasColumnType("money");

                    b.Property<string>("PaymentStatus")
                        .HasColumnName("Payment_status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SeasonId")
                        .HasColumnName("SeasonID")
                        .HasColumnType("int");

                    b.Property<string>("TxnId")
                        .HasColumnName("Txn_ID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SpecialUserQuery", b =>
                {
                    b.Property<DateTime?>("GameDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HomeTeamName")
                        .HasColumnName("Home.TeamName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short?>("HomeTeamScheduleTeamNumber")
                        .HasColumnName("Home Team.ScheduleTeamNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("ScheduleName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VisitingTeamName")
                        .HasColumnName("Visiting.TeamName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short?>("VisitingTeamScheduleTeamNumber")
                        .HasColumnName("Visiting Team.ScheduleTeamNumber")
                        .HasColumnType("smallint");

                    b.ToTable("Special User Query");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Sponsor", b =>
                {
                    b.Property<int>("SponsorId")
                        .HasColumnName("SponsorID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AdExpiration")
                        .HasColumnType("date");

                    b.Property<string>("AddressDelete")
                        .HasColumnName("AddressDELETE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CityDelete")
                        .HasColumnName("CityDELETE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Color1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Color1Id")
                        .HasColumnName("Color1ID")
                        .HasColumnType("int");

                    b.Property<string>("Color2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Color2Id")
                        .HasColumnName("Color2ID")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("ContactNameDelete")
                        .HasColumnName("ContactNameDELETE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 851, DateTimeKind.Local).AddTicks(2415));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Emaildelete")
                        .HasColumnName("EMAILDELETE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("FeeId")
                        .HasColumnName("FeeID")
                        .HasColumnType("money");

                    b.Property<int?>("HouseId")
                        .HasColumnName("HouseID")
                        .HasColumnType("int");

                    b.Property<bool?>("MailCheck")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneDelete")
                        .HasColumnName("PhoneDELETE")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("SeasonId")
                        .HasColumnName("SeasonID")
                        .HasColumnType("int");

                    b.Property<string>("ShirtName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ShirtSize")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnName("ShoppingCartID")
                        .HasColumnType("int");

                    b.Property<bool?>("ShowAd")
                        .HasColumnType("bit");

                    b.Property<decimal?>("SpoAmount")
                        .HasColumnType("money");

                    b.Property<string>("SpoNameDelete")
                        .HasColumnName("SpoNameDELETE")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("SponsorProfileId")
                        .HasColumnName("SponsorProfileID")
                        .HasColumnType("int");

                    b.Property<string>("StateDelete")
                        .HasColumnName("StateDELETE")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("TypeOfBussDelete")
                        .HasColumnName("TypeOfBussDELETE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Urldelete")
                        .HasColumnName("URLDELETE")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ZipDelete")
                        .HasColumnName("ZipDELETE")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("SponsorId");

                    b.ToTable("Sponsor");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SponsorFee", b =>
                {
                    b.Property<int>("SponsorFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 840, DateTimeKind.Local).AddTicks(6008));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("FeeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SponsorFeeId");

                    b.ToTable("SponsorFee");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SponsorPayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PaymentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 842, DateTimeKind.Local).AddTicks(6107));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Memo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ShoppingCartId")
                        .HasColumnName("ShoppingCartID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("SponsorProfileId")
                        .HasColumnName("SponsorProfileID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("TransactionNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("PaymentId");

                    b.ToTable("SponsorPayment");
                });

            modelBuilder.Entity("Hoops.Core.Entities.SponsorProfile", b =>
                {
                    b.Property<int>("SponsorProfileId")
                        .HasColumnName("SponsorProfileID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AdExpiration")
                        .HasColumnType("date");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 844, DateTimeKind.Local).AddTicks(9421));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("HouseId")
                        .HasColumnName("HouseID")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<bool?>("ShowAd")
                        .HasColumnType("bit");

                    b.Property<string>("SpoName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("TypeOfBuss")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Url")
                        .HasColumnName("URL")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("SponsorProfileId");

                    b.ToTable("SponsorProfile");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TeamID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssCoachId")
                        .HasColumnName("AssCoachID")
                        .HasColumnType("int");

                    b.Property<int?>("CoachId")
                        .HasColumnName("CoachID")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 856, DateTimeKind.Local).AddTicks(6501));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("DivisionId")
                        .HasColumnName("DivisionID")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnName("SeasonID")
                        .HasColumnType("int");

                    b.Property<int?>("SponsorId")
                        .HasColumnName("SponsorID")
                        .HasColumnType("int");

                    b.Property<string>("TeamColor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TeamColorId")
                        .HasColumnName("TeamColorID")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TeamNumber")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("TeamId");

                    b.HasIndex("ColorId");

                    b.HasIndex("DivisionId")
                        .HasName("idx_DCh_12814_12813_Teams");

                    b.HasIndex("TeamId")
                        .HasName("idx_DCh_615_614_Teams");

                    b.HasIndex("DivisionId", "TeamName", "TeamColorId", "TeamNumber", "SeasonId")
                        .HasName("idx_DCh_376_375_Teams");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("Hoops.Core.Entities.TeamRosters", b =>
                {
                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Grade")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TeamId")
                        .HasColumnName("TeamID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.ToTable("TeamRosters");
                });

            modelBuilder.Entity("Hoops.Core.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 858, DateTimeKind.Local).AddTicks(7218));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("HouseId")
                        .HasColumnName("HouseID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Pword")
                        .HasColumnName("PWord")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.Property<int?>("ValidationCode")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserId")
                        .HasName("idx_DCh_369_368_Users");

                    b.HasIndex("UserName")
                        .HasName("idx_DCh_4811_4810_Users");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserName = "TestUser",
                            UserType = 0
                        });
                });

            modelBuilder.Entity("Hoops.Core.Entities.Version", b =>
                {
                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<float>("Version1")
                        .HasColumnName("Version")
                        .HasColumnType("real");

                    b.ToTable("Version");
                });

            modelBuilder.Entity("Hoops.Core.Entities.WebContent", b =>
                {
                    b.Property<int>("WebContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("ContentSequence")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 926, DateTimeKind.Local).AddTicks(5317));

                    b.Property<int?>("CreatedUser")
                        .HasColumnType("int");

                    b.Property<string>("DateAndTime")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<string>("Page")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("WebContentTypeId")
                        .HasColumnType("int");

                    b.HasKey("WebContentId");

                    b.HasIndex("WebContentTypeId");

                    b.ToTable("WebContent");
                });

            modelBuilder.Entity("Hoops.Core.Entities.WebContentType", b =>
                {
                    b.Property<int>("WebContentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 6, 15, 13, 14, 25, 927, DateTimeKind.Local).AddTicks(4378));

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebContentTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("WebContentTypeId");

                    b.ToTable("WebContentType");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Coach", b =>
                {
                    b.HasOne("Hoops.Core.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Player", b =>
                {
                    b.HasOne("Hoops.Core.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("Hoops.Core.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("Hoops.Core.Entities.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId");

                    b.HasOne("Hoops.Core.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("Hoops.Core.Entities.Team", b =>
                {
                    b.HasOne("Hoops.Core.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");
                });

            modelBuilder.Entity("Hoops.Core.Entities.WebContent", b =>
                {
                    b.HasOne("Hoops.Core.Entities.WebContentType", "WebContentType")
                        .WithMany()
                        .HasForeignKey("WebContentTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
