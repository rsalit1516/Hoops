name: Deploy Azure Functions

on:
  push:
    branches:
      - develop
      - main
      - master

permissions:
  id-token: write
  contents: read

env:
  DOTNET_VERSION: 9.0.x
  FUNCTIONS_PROJECT: src/Hoops.Functions/Hoops.Functions.csproj
  PUBLISH_DIR: publish

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore
        run: dotnet restore Hoops.sln

      - name: Build
        run: dotnet build Hoops.sln -c Release --no-restore

      - name: Test (fast)
        run: dotnet test Hoops.sln -c Release --no-build --filter "TestCategory!=Slow" --nologo

      - name: Publish Functions (self-contained linux-x64)
        run: |
          dotnet publish ${{ env.FUNCTIONS_PROJECT }} \
            -c Release \
            -o ${{ env.PUBLISH_DIR }} \
            -r linux-x64 \
            --self-contained true \
            /p:PublishSingleFile=false

      - name: Archive package
        run: |
          cd ${{ env.PUBLISH_DIR }}
          zip -r ../functions.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: functions
          path: functions.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: functions

      - name: Validate Azure secrets presence
        run: |
          set -e
          [ -n "${{ secrets.AZURE_CLIENT_ID }}" ] && echo "AZURE_CLIENT_ID: set" || (echo "AZURE_CLIENT_ID: MISSING" && exit 1)
          [ -n "${{ secrets.AZURE_TENANT_ID }}" ] && echo "AZURE_TENANT_ID: set" || (echo "AZURE_TENANT_ID: MISSING" && exit 1)
          [ -n "${{ secrets.AZURE_SUBSCRIPTION_ID }}" ] && echo "AZURE_SUBSCRIPTION_ID: set" || (echo "AZURE_SUBSCRIPTION_ID: MISSING" && exit 1)
          [ -n "${{ secrets.AZURE_CLIENT_SECRET }}" ] && echo "AZURE_CLIENT_SECRET: set" || (echo "AZURE_CLIENT_SECRET: MISSING" && exit 1)

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Select Function App by branch
        id: selectapp
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "app_name=hoops-functions-dev" >> $GITHUB_OUTPUT
            echo "resource_group=csbc-dev" >> $GITHUB_OUTPUT
          else
            echo "app_name=hoops-functions-prod" >> $GITHUB_OUTPUT
            echo "resource_group=csbc-prod" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Azure Functions (zipDeploy)
        uses: azure/functions-action@v1
        with:
          app-name: ${{ steps.selectapp.outputs.app_name }}
          package: functions.zip

      - name: Configure Function App Settings
        run: |
          az functionapp config appsettings set \
            --name ${{ steps.selectapp.outputs.app_name }} \
            --resource-group ${{ steps.selectapp.outputs.resource_group }} \
            --settings \
              "FUNCTIONS_WORKER_RUNTIME=dotnet-isolated" \
              "FUNCTIONS_EXTENSION_VERSION=~4" \
              "AzureWebJobsFeatureFlags=EnableOpenApi" \
              "CompanySettings__DefaultCompanyId=1" \
              "KeyVaultUri=https://hoops-dev-kv.vault.azure.net/" \
              "ConnectionStrings__hoopsContext=${{ secrets.HOOPS_CONNECTION_STRING }}"

      - name: Verify discovered functions
        id: verify_functions
        run: |
          funcs=$(az functionapp function list \
            --name ${{ steps.selectapp.outputs.app_name }} \
            --resource-group ${{ steps.selectapp.outputs.resource_group }} \
            -o tsv --query "[].name")
          echo "Functions discovered:" $funcs
          if [ -z "$funcs" ]; then
            echo "No functions discovered by the host. Check runtime logs (Log stream) for startup errors." >&2
            exit 1
          fi

      - name: Configure CORS
        run: |
          az functionapp cors add \
            --name ${{ steps.selectapp.outputs.app_name }} \
            --resource-group ${{ steps.selectapp.outputs.resource_group }} \
            --allowed-origins \
              "https://thankful-pond-090ec730f.4.azurestaticapps.net" \
              "http://localhost:4200" \
              "https://localhost:4200"

      - name: Enable CORS credentials support
        run: |
          az resource update \
            --resource-group ${{ steps.selectapp.outputs.resource_group }} \
            --resource-type Microsoft.Web/sites/config \
            --name "${{ steps.selectapp.outputs.app_name }}/web" \
            --set properties.cors.supportsCredentials=true

      - name: Show current CORS settings
        run: |
          az resource show \
            --resource-group ${{ steps.selectapp.outputs.resource_group }} \
            --resource-type Microsoft.Web/sites/config \
            --name "${{ steps.selectapp.outputs.app_name }}/web" \
            --query "properties.cors" -o jsonc

      - name: Enable Managed Identity and Grant Key Vault Access
        run: |
          # Enable system-assigned managed identity
          az functionapp identity assign \
            --name ${{ steps.selectapp.outputs.app_name }} \
            --resource-group ${{ steps.selectapp.outputs.resource_group }}

          # Get the principal ID of the managed identity 
          PRINCIPAL_ID=$(az functionapp identity show \
            --name ${{ steps.selectapp.outputs.app_name }} \
            --resource-group ${{ steps.selectapp.outputs.resource_group }} \
            --query principalId -o tsv)

          # Grant Key Vault access
          az keyvault set-policy \
            --name hoops-dev-kv \
            --object-id $PRINCIPAL_ID \
            --secret-permissions get list
