// <auto-generated />
using System;
using Hoops.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hoops.Infrastructure.Migrations
{
    [DbContext(typeof(hoopsContext))]
    [Migration("20250725133215_FixLocationIdentity")]
    partial class FixLocationIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hoops.Core.Models.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CoachID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoachId"));

                    b.Property<string>("CoachPhone")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 630, DateTimeKind.Local).AddTicks(5464));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PeopleID")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PeopleID");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("PlayerID");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int")
                        .HasColumnName("SeasonID");

                    b.Property<string>("ShirtSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CoachId");

                    b.HasIndex("PeopleID");

                    b.HasIndex("SeasonId");

                    b.ToTable("Coach", null, t =>
                        {
                            t.Property("PeopleID")
                                .HasColumnName("PeopleID1");
                        });
                });

            modelBuilder.Entity("Hoops.Core.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("ColorName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 640, DateTimeKind.Local).AddTicks(7348));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<bool?>("Discontinued")
                        .HasColumnType("bit");

                    b.HasKey("ColorId");

                    b.ToTable("Colors", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"));

                    b.Property<string>("Comment1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<string>("CommentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUSer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LinkID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.HasIndex("LinkID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Hoops.Core.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 642, DateTimeKind.Local).AddTicks(3073));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmailSender")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TimeZone")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 643, DateTimeKind.Local).AddTicks(7277));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EmailPref")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PeopleID");

                    b.Property<string>("PhonePref")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.Property<int?>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DirectorId");

                    b.ToTable("Directors", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.Division", b =>
                {
                    b.Property<int>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DivisionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DivisionId"));

                    b.Property<int?>("CoDirectorId")
                        .HasColumnType("int")
                        .HasColumnName("CoDirectorID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 647, DateTimeKind.Local).AddTicks(647));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DirectorId")
                        .HasColumnType("int")
                        .HasColumnName("DirectorID");

                    b.Property<string>("DivisionDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Div_Desc");

                    b.Property<DateTime?>("DraftDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DraftTime")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DraftVenue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Gender2")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("MaxDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("MaxDate2")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("MinDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("MinDate2")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int")
                        .HasColumnName("SeasonID");

                    b.Property<bool>("Stats")
                        .HasColumnType("bit");

                    b.HasKey("DivisionId");

                    b.HasIndex("CoDirectorId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Divisions", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.Household", b =>
                {
                    b.Property<int>("HouseId")
                        .HasColumnType("int")
                        .HasColumnName("HouseID");

                    b.Property<string>("Address1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 660, DateTimeKind.Local).AddTicks(3155));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("EmailList")
                        .HasColumnType("bit");

                    b.Property<bool?>("FeeWaived")
                        .HasColumnType("bit");

                    b.Property<int?>("Guardian")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("SportsCard")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TEMID");

                    b.Property<string>("Zip")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("HouseId");

                    b.HasIndex("Phone", "Email", "HouseId")
                        .HasDatabaseName("idx_DCh_2775_2774_Household");

                    b.ToTable("Households", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.Location", b =>
                {
                    b.Property<int>("LocationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationNumber");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationNumber"));

                    b.Property<string>("LocationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LocationNumber");

                    b.ToTable("ScheduleLocations", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PeopleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<bool?>("Ad")
                        .HasColumnType("bit")
                        .HasColumnName("AD");

                    b.Property<bool?>("AsstCoach")
                        .HasColumnType("bit");

                    b.Property<bool?>("Bc")
                        .HasColumnType("bit")
                        .HasColumnName("BC");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("BoardMember")
                        .HasColumnType("bit");

                    b.Property<bool?>("BoardOfficer")
                        .HasColumnType("bit");

                    b.Property<string>("Cellphone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool?>("Coach")
                        .HasColumnType("bit");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 664, DateTimeKind.Local).AddTicks(387));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("Electrician")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Equipment")
                        .HasColumnType("bit");

                    b.Property<bool?>("FeeWaived")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("GiftedLevelsUp")
                        .HasColumnType("int")
                        .HasColumnName("GiftedLevelsUP");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int")
                        .HasColumnName("MainHouseID");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LatestRating")
                        .HasColumnType("int");

                    b.Property<string>("LatestSeason")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LatestShirtSize")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("Parent")
                        .HasColumnType("bit");

                    b.Property<bool?>("Player")
                        .HasColumnType("bit");

                    b.Property<bool?>("Printing")
                        .HasColumnType("bit");

                    b.Property<string>("SchoolName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("SignUps")
                        .HasColumnType("bit");

                    b.Property<bool?>("Sponsor")
                        .HasColumnType("bit");

                    b.Property<bool?>("Suspended")
                        .HasColumnType("bit");

                    b.Property<bool?>("TeeShirts")
                        .HasColumnType("bit");

                    b.Property<int?>("TempId")
                        .HasColumnType("int")
                        .HasColumnName("TEMPID");

                    b.Property<bool?>("TryOuts")
                        .HasColumnType("bit");

                    b.Property<string>("Workphone")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("PersonId");

                    b.HasIndex("Coach")
                        .HasDatabaseName("idx_DCh_12521_12520_People");

                    b.HasIndex("HouseId")
                        .HasDatabaseName("idx_DCh_75612_75611_People");

                    b.HasIndex("FirstName", "LastName")
                        .HasDatabaseName("idx_DCh_14287_14286_People");

                    b.ToTable("People", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlayerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<bool?>("Ad")
                        .HasColumnType("bit")
                        .HasColumnName("AD");

                    b.Property<decimal?>("BalanceOwed")
                        .HasColumnType("money");

                    b.Property<string>("CheckMemo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Coach")
                        .HasColumnType("int");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int")
                        .HasColumnName("CoachID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 674, DateTimeKind.Local).AddTicks(541));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DivisionID")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int")
                        .HasColumnName("DivisionID");

                    b.Property<string>("DraftId")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("DraftID");

                    b.Property<string>("DraftNotes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("FamilyDisc")
                        .HasColumnType("bit");

                    b.Property<string>("NoteDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("OutOfTown")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PayType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("PeopleID")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PeopleID");

                    b.Property<bool?>("PlaysDown")
                        .HasColumnType("bit");

                    b.Property<bool?>("PlaysUp")
                        .HasColumnType("bit");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("RefundBatchId")
                        .HasColumnType("int")
                        .HasColumnName("RefundBatchID");

                    b.Property<bool?>("Rollover")
                        .HasColumnType("bit");

                    b.Property<bool?>("Scholarship")
                        .HasColumnType("bit");

                    b.Property<int?>("SeasonID")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int")
                        .HasColumnName("SeasonID");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("int")
                        .HasColumnName("ShoppingCartID");

                    b.Property<int?>("Sponsor")
                        .HasColumnType("int");

                    b.Property<int?>("SponsorId")
                        .HasColumnType("int")
                        .HasColumnName("SponsorID");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    b.HasKey("PlayerId");

                    b.HasIndex("DivisionID");

                    b.HasIndex("DivisionId")
                        .HasDatabaseName("idx_DCh_488836_488835_Players");

                    b.HasIndex("PeopleID");

                    b.HasIndex("PersonId")
                        .HasDatabaseName("idx_DCh_75619_75618_Players");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("idx_DCh_2451_2450_Players");

                    b.HasIndex("SeasonID");

                    b.HasIndex("TeamID");

                    b.HasIndex("TeamId")
                        .HasDatabaseName("idx_DCh_12817_12816_Players");

                    b.HasIndex("Coach", "Sponsor", "SeasonId")
                        .HasDatabaseName("idx_DCh_98394_98393_Players");

                    b.HasIndex("SeasonId", "PayType", "Sponsor")
                        .HasDatabaseName("idx_DCh_8781_8780_Players");

                    b.HasIndex("PlayerId", "DivisionId", "Coach", "Sponsor", "SeasonId")
                        .HasDatabaseName("idx_DCh_25_24_Players");

                    b.ToTable("Player", null, t =>
                        {
                            t.Property("DivisionID")
                                .HasColumnName("DivisionID1");

                            t.Property("PeopleID")
                                .HasColumnName("PeopleID1");

                            t.Property("SeasonID")
                                .HasColumnName("SeasonID1");

                            t.Property("TeamID")
                                .HasColumnName("TeamID1");
                        });
                });

            modelBuilder.Entity("Hoops.Core.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RollsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("AccessType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 675, DateTimeKind.Local).AddTicks(5900));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("ScreenName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("RoleId");

                    b.ToTable("Rolls", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.ScheduleDivTeam", b =>
                {
                    b.Property<int>("ScheduleDivTeamsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleDivTeamsId"));

                    b.Property<int>("DivisionNumber")
                        .HasColumnType("int");

                    b.Property<int>("HomeLocation")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleTeamNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("TeamNumber")
                        .HasColumnType("int");

                    b.HasKey("ScheduleDivTeamsId");

                    b.HasIndex("SeasonId");

                    b.HasIndex("ScheduleNumber", "TeamNumber")
                        .HasDatabaseName("IX_ScheduleDivTeams");

                    b.ToTable("ScheduleDivTeams", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.ScheduleGame", b =>
                {
                    b.Property<int>("ScheduleGamesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleGamesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleGamesId"));

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int")
                        .HasColumnName("DivisionID");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GameNumber")
                        .HasColumnType("int");

                    b.Property<string>("GameTime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("HomeForfeited")
                        .HasColumnType("bit");

                    b.Property<int?>("HomeTeamNumber")
                        .HasColumnType("int");

                    b.Property<int?>("HomeTeamScore")
                        .HasColumnType("int");

                    b.Property<int?>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int")
                        .HasColumnName("SeasonID");

                    b.Property<bool?>("VisitingForfeited")
                        .HasColumnType("bit");

                    b.Property<int?>("VisitingTeamNumber")
                        .HasColumnType("int");

                    b.Property<int?>("VisitingTeamScore")
                        .HasColumnType("int");

                    b.HasKey("ScheduleGamesId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("HomeTeamNumber");

                    b.HasIndex("LocationNumber");

                    b.HasIndex("VisitingTeamNumber");

                    b.HasIndex("SeasonId", "DivisionId", "GameNumber")
                        .HasDatabaseName("IX_ScheduleGames");

                    b.HasIndex("GameNumber", "LocationNumber", "GameDate", "GameTime", "VisitingTeamNumber", "HomeTeamNumber", "VisitingTeamScore", "HomeTeamScore", "ScheduleNumber", "SeasonId")
                        .HasDatabaseName("idx_DCh_20078_20077_ScheduleGames");

                    b.HasIndex("ScheduleNumber", "GameNumber", "LocationNumber", "GameDate", "GameTime", "VisitingTeamNumber", "HomeTeamNumber", "VisitingTeamScore", "HomeTeamScore", "VisitingForfeited", "HomeForfeited", "SeasonId", "DivisionId")
                        .HasDatabaseName("idx_DCh_1924_1923_ScheduleGames");

                    b.ToTable("ScheduleGames", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.SchedulePlayoff", b =>
                {
                    b.Property<int>("ScheduleNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleNumber"));

                    b.Property<string>("Descr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameNumber")
                        .HasColumnType("int");

                    b.Property<string>("GameTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomeTeamScore")
                        .HasColumnType("int");

                    b.Property<int?>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<string>("VisitingTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VisitingTeamScore")
                        .HasColumnType("int");

                    b.HasKey("ScheduleNumber");

                    b.ToTable("SchedulePlayoffs");
                });

            modelBuilder.Entity("Hoops.Core.Models.Season", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SeasonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeasonId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<decimal?>("ConvenienceFee")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 699, DateTimeKind.Local).AddTicks(2000));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("CurrentSchedule")
                        .HasColumnType("bit");

                    b.Property<bool?>("CurrentSeason")
                        .HasColumnType("bit");

                    b.Property<bool?>("CurrentSignUps")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Sea_Desc");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("NewSchoolYear")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ParticipationFee")
                        .HasColumnType("money");

                    b.Property<DateTime?>("SignUpsDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("SignUpsEnd")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("SignUpsEND");

                    b.Property<decimal?>("SponsorFee")
                        .HasColumnType("money");

                    b.Property<bool?>("TestSeason")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("SeasonId");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("IX_Seasons_CompanyId");

                    b.HasIndex("CurrentSeason")
                        .HasDatabaseName("IX_Seasons_CurrentSeason");

                    b.HasIndex("FromDate", "ToDate")
                        .HasDatabaseName("IX_Seasons_DateRange");

                    b.HasIndex("SignUpsDate", "SignUpsEnd")
                        .HasDatabaseName("IX_Seasons_SignUpDates");

                    b.ToTable("Seasons", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.Sponsor", b =>
                {
                    b.Property<int>("SponsorId")
                        .HasColumnType("int")
                        .HasColumnName("SponsorID");

                    b.Property<DateTime?>("AdExpiration")
                        .HasColumnType("date");

                    b.Property<string>("Color1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Color1Id")
                        .HasColumnType("int")
                        .HasColumnName("Color1ID");

                    b.Property<string>("Color2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Color2Id")
                        .HasColumnType("int")
                        .HasColumnName("Color2ID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 710, DateTimeKind.Local).AddTicks(3966));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("FeeId")
                        .HasColumnType("money")
                        .HasColumnName("FeeID");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int")
                        .HasColumnName("HouseID");

                    b.Property<bool?>("MailCheck")
                        .HasColumnType("bit");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int")
                        .HasColumnName("SeasonID");

                    b.Property<string>("ShirtName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShirtSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("int")
                        .HasColumnName("ShoppingCartID");

                    b.Property<decimal?>("SpoAmount")
                        .HasColumnType("money");

                    b.Property<int>("SponsorProfileId")
                        .HasColumnType("int")
                        .HasColumnName("SponsorProfileID");

                    b.HasKey("SponsorId");

                    b.HasIndex("SeasonId");

                    b.HasIndex("SponsorProfileId");

                    b.ToTable("Sponsors", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.SponsorFee", b =>
                {
                    b.Property<int>("SponsorFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SponsorFeeId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 701, DateTimeKind.Local).AddTicks(1912));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FeeName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("SponsorFeeId");

                    b.ToTable("SponsorFee", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.SponsorPayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 703, DateTimeKind.Local).AddTicks(2271));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Memo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ShoppingCartId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ShoppingCartID");

                    b.Property<int?>("SponsorProfileID")
                        .HasColumnType("int");

                    b.Property<int>("SponsorProfileId")
                        .HasColumnType("int")
                        .HasColumnName("SponsorProfileID");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("TransactionNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PaymentId");

                    b.HasIndex("SponsorProfileID");

                    b.ToTable("SponsorPayment", null, t =>
                        {
                            t.Property("SponsorProfileID")
                                .HasColumnName("SponsorProfileID1");
                        });
                });

            modelBuilder.Entity("Hoops.Core.Models.SponsorProfile", b =>
                {
                    b.Property<int>("SponsorProfileId")
                        .HasColumnType("int")
                        .HasColumnName("SponsorProfileID");

                    b.Property<DateTime?>("AdExpiration")
                        .HasColumnType("date");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 707, DateTimeKind.Local).AddTicks(1756));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int")
                        .HasColumnName("HouseID");

                    b.Property<string>("Phone")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<bool?>("ShowAd")
                        .HasColumnType("bit");

                    b.Property<string>("SpoName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("TypeOfBuss")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Url")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("URL");

                    b.Property<string>("Zip")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("SponsorProfileId");

                    b.ToTable("SponsorProfile", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<int?>("AssCoachId")
                        .HasColumnType("int")
                        .HasColumnName("AssCoachID");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int")
                        .HasColumnName("CoachID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 714, DateTimeKind.Local).AddTicks(4967));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int")
                        .HasColumnName("DivisionID");

                    b.Property<int?>("Round1")
                        .HasColumnType("int");

                    b.Property<int?>("Round2")
                        .HasColumnType("int");

                    b.Property<int?>("Round3")
                        .HasColumnType("int");

                    b.Property<int?>("Round4")
                        .HasColumnType("int");

                    b.Property<int?>("Round5")
                        .HasColumnType("int");

                    b.Property<int?>("Round6")
                        .HasColumnType("int");

                    b.Property<int?>("Round7")
                        .HasColumnType("int");

                    b.Property<int?>("Round8")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int")
                        .HasColumnName("SeasonID");

                    b.Property<int?>("SponsorId")
                        .HasColumnType("int")
                        .HasColumnName("SponsorID");

                    b.Property<string>("TeamColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TeamColorId")
                        .HasColumnType("int")
                        .HasColumnName("TeamColorID");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamNumber")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("TeamId");

                    b.HasIndex("AssCoachId");

                    b.HasIndex("CoachId");

                    b.HasIndex("DivisionId")
                        .HasDatabaseName("idx_DCh_12814_12813_Teams");

                    b.HasIndex("SeasonId");

                    b.HasIndex("SponsorId");

                    b.HasIndex("TeamColorId");

                    b.HasIndex("TeamId")
                        .HasDatabaseName("idx_DCh_615_614_Teams");

                    b.HasIndex("DivisionId", "TeamName", "TeamColorId", "TeamNumber", "SeasonId")
                        .HasDatabaseName("idx_DCh_376_375_Teams");

                    b.ToTable("Teams", (string)null);
                });

            modelBuilder.Entity("Hoops.Core.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 730, DateTimeKind.Local).AddTicks(4659));

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HouseId")
                        .HasColumnType("int")
                        .HasColumnName("HouseID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassWord")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PeopleID");

                    b.Property<string>("Pword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PWord");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.Property<int?>("ValidationCode")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("idx_DCh_369_368_Users");

                    b.HasIndex("UserName")
                        .HasDatabaseName("idx_DCh_4811_4810_Users");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            HouseId = 0,
                            UserName = "TestUser",
                            UserType = 0
                        });
                });

            modelBuilder.Entity("Hoops.Core.Models.VwCoach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoachId"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoachPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Housephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<string>("ShirtSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoachId");

                    b.ToTable("VwCoaches");
                });

            modelBuilder.Entity("Hoops.Core.Models.VwDirector", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorId"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmailPref")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhonePref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneSelected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DirectorId");

                    b.ToTable("VwDirectors");
                });

            modelBuilder.Entity("Hoops.Core.Models.WebContent", b =>
                {
                    b.Property<int>("WebContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebContentId"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("ContentSequence")
                        .HasColumnType("int");

                    b.Property<string>("DateAndTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2025, 7, 25, 9, 32, 13, 728, DateTimeKind.Local).AddTicks(3171));

                    b.Property<int?>("ModifiedUser")
                        .HasColumnType("int");

                    b.Property<string>("Page")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WebContentTypeId")
                        .HasColumnType("int");

                    b.HasKey("WebContentId");

                    b.ToTable("WebContent");
                });

            modelBuilder.Entity("Hoops.Core.Models.WebContentType", b =>
                {
                    b.Property<int>("WebContentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebContentTypeId"));

                    b.Property<string>("WebContentTypeDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WebContentTypeId");

                    b.ToTable("WebContentType");
                });

            modelBuilder.Entity("Hoops.Core.Models.Coach", b =>
                {
                    b.HasOne("Hoops.Core.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PeopleID");

                    b.HasOne("Hoops.Core.Models.Season", null)
                        .WithMany("Coaches")
                        .HasForeignKey("SeasonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Hoops.Core.Models.Comment", b =>
                {
                    b.HasOne("Hoops.Core.Models.Person", "Person")
                        .WithMany("Comments")
                        .HasForeignKey("LinkID");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Hoops.Core.Models.Division", b =>
                {
                    b.HasOne("Hoops.Core.Models.Person", "CoDirector")
                        .WithMany()
                        .HasForeignKey("CoDirectorId")
                        .HasConstraintName("FK_Divisions_CoDirectors");

                    b.HasOne("Hoops.Core.Models.Person", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .HasConstraintName("FK_Divisions_Directors");

                    b.HasOne("Hoops.Core.Models.Season", "Season")
                        .WithMany("Divisions")
                        .HasForeignKey("SeasonId")
                        .HasConstraintName("FK_Divisions_Seasons");

                    b.Navigation("CoDirector");

                    b.Navigation("Director");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("Hoops.Core.Models.Person", b =>
                {
                    b.HasOne("Hoops.Core.Models.Household", "Household")
                        .WithMany("People")
                        .HasForeignKey("HouseId")
                        .HasConstraintName("FK_People_Households");

                    b.Navigation("Household");
                });

            modelBuilder.Entity("Hoops.Core.Models.Player", b =>
                {
                    b.HasOne("Hoops.Core.Models.Division", "Division")
                        .WithMany("Players")
                        .HasForeignKey("DivisionID");

                    b.HasOne("Hoops.Core.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PeopleID");

                    b.HasOne("Hoops.Core.Models.Season", "Season")
                        .WithMany("Players")
                        .HasForeignKey("SeasonID");

                    b.HasOne("Hoops.Core.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamID");

                    b.Navigation("Division");

                    b.Navigation("Person");

                    b.Navigation("Season");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hoops.Core.Models.ScheduleDivTeam", b =>
                {
                    b.HasOne("Hoops.Core.Models.Season", null)
                        .WithMany("ScheduleDivTeams")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hoops.Core.Models.ScheduleGame", b =>
                {
                    b.HasOne("Hoops.Core.Models.Division", "Division")
                        .WithMany("ScheduleGames")
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("FK_ScheduleGames_Division");

                    b.HasOne("Hoops.Core.Models.Team", "HomeTeam")
                        .WithMany("HomeGames")
                        .HasForeignKey("HomeTeamNumber")
                        .HasConstraintName("FK_ScheduleGames_HomeTeam");

                    b.HasOne("Hoops.Core.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationNumber")
                        .HasConstraintName("FK_ScheduleGames_Location");

                    b.HasOne("Hoops.Core.Models.Season", "Season")
                        .WithMany("ScheduleGames")
                        .HasForeignKey("SeasonId")
                        .HasConstraintName("FK_ScheduleGames_Season");

                    b.HasOne("Hoops.Core.Models.Team", "VisitingTeam")
                        .WithMany("VisitingGames")
                        .HasForeignKey("VisitingTeamNumber")
                        .HasConstraintName("FK_ScheduleGames_VisitingTeam");

                    b.Navigation("Division");

                    b.Navigation("HomeTeam");

                    b.Navigation("Location");

                    b.Navigation("Season");

                    b.Navigation("VisitingTeam");
                });

            modelBuilder.Entity("Hoops.Core.Models.Sponsor", b =>
                {
                    b.HasOne("Hoops.Core.Models.Season", null)
                        .WithMany("Sponsors")
                        .HasForeignKey("SeasonId");

                    b.HasOne("Hoops.Core.Models.SponsorProfile", null)
                        .WithMany("Sponsors")
                        .HasForeignKey("SponsorProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hoops.Core.Models.SponsorPayment", b =>
                {
                    b.HasOne("Hoops.Core.Models.SponsorProfile", "SponsorProfile")
                        .WithMany()
                        .HasForeignKey("SponsorProfileID");

                    b.Navigation("SponsorProfile");
                });

            modelBuilder.Entity("Hoops.Core.Models.Team", b =>
                {
                    b.HasOne("Hoops.Core.Models.Coach", "AssistantCoach")
                        .WithMany()
                        .HasForeignKey("AssCoachId")
                        .HasConstraintName("FK_Teams_AssistantCoaches");

                    b.HasOne("Hoops.Core.Models.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .HasConstraintName("FK_Teams_Coaches");

                    b.HasOne("Hoops.Core.Models.Division", "Division")
                        .WithMany("Teams")
                        .HasForeignKey("DivisionId")
                        .IsRequired()
                        .HasConstraintName("FK_Teams_Divisions");

                    b.HasOne("Hoops.Core.Models.Season", "Season")
                        .WithMany("Teams")
                        .HasForeignKey("SeasonId")
                        .HasConstraintName("FK_Teams_Seasons");

                    b.HasOne("Hoops.Core.Models.Sponsor", "Sponsor")
                        .WithMany()
                        .HasForeignKey("SponsorId")
                        .HasConstraintName("FK_Teams_Sponsors");

                    b.HasOne("Hoops.Core.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("TeamColorId")
                        .IsRequired()
                        .HasConstraintName("FK_Teams_Colors");

                    b.Navigation("AssistantCoach");

                    b.Navigation("Coach");

                    b.Navigation("Color");

                    b.Navigation("Division");

                    b.Navigation("Season");

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("Hoops.Core.Models.Division", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("ScheduleGames");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hoops.Core.Models.Household", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("Hoops.Core.Models.Person", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Hoops.Core.Models.Season", b =>
                {
                    b.Navigation("Coaches");

                    b.Navigation("Divisions");

                    b.Navigation("Players");

                    b.Navigation("ScheduleDivTeams");

                    b.Navigation("ScheduleGames");

                    b.Navigation("Sponsors");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hoops.Core.Models.SponsorProfile", b =>
                {
                    b.Navigation("Sponsors");
                });

            modelBuilder.Entity("Hoops.Core.Models.Team", b =>
                {
                    b.Navigation("HomeGames");

                    b.Navigation("Players");

                    b.Navigation("VisitingGames");
                });
#pragma warning restore 612, 618
        }
    }
}
