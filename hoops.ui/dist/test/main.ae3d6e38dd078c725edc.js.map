{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/admin/admin-games/admin-games-routing.module.ts","./src/app/admin/admin-games/admin-games.module.ts","./src/app/admin/admin-games/components/admin-game-detail/admin-game-detail.component.ts","./src/app/admin/admin-games/components/admin-game-detail/admin-game-detail.component.html","./src/app/admin/admin-games/components/admin-games-list/admin-games-list.component.ts","./src/app/admin/admin-games/components/admin-games-list/admin-games-list.component.html","./src/app/admin/admin-games/containers/admin-games-shell/admin-games-shell.component.ts","./src/app/admin/admin-games/containers/admin-games-shell/admin-games-shell.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/components/admin-division-list/admin-division-list.component.ts","./src/app/admin/components/admin-division-list/admin-division-list.component.html","./src/app/admin/components/admin-season-list/admin-season-list.component.ts","./src/app/admin/components/admin-season-list/admin-season-list.component.html","./src/app/admin/components/admin-team-list/admin-team-list.component.ts","./src/app/admin/components/admin-team-list/admin-team-list.component.html","./src/app/admin/components/season-select/season-select.component.ts","./src/app/admin/components/season-select/season-select.component.html","./src/app/admin/containers/admin-division-shell/admin-division-shell.component.ts","./src/app/admin/containers/admin-division-shell/admin-division-shell.component.html","./src/app/admin/containers/admin-season-shell/admin-season-shell.component.ts","./src/app/admin/containers/admin-season-shell/admin-season-shell.component.html","./src/app/admin/containers/admin-shell/admin-shell.component.ts","./src/app/admin/containers/admin-shell/admin-shell.component.html","./src/app/admin/containers/season-setup/season-setup.component.ts","./src/app/admin/containers/season-setup/season-setup.component.html","./src/app/admin/content/components/content-edit/content-edit.component.ts","./src/app/admin/content/components/content-edit/content-edit.component.html","./src/app/admin/content/components/content-list-toolbar/content-list-toolbar.component.ts","./src/app/admin/content/components/content-list-toolbar/content-list-toolbar.component.html","./src/app/admin/content/components/content-list/contentList.component.ts","./src/app/admin/content/components/content-list/contentList.component.html","./src/app/admin/content/containers/content-shell/content-shell.component.ts","./src/app/admin/content/containers/content-shell/content-shell.component.html","./src/app/admin/content/content-routing.module.ts","./src/app/admin/content/content.module.ts","./src/app/admin/content/content.service.ts","./src/app/admin/content/state/content.actions.ts","./src/app/admin/content/state/content.effect.ts","./src/app/admin/content/state/content.reducer.ts","./src/app/admin/content/state/index.ts","./src/app/admin/dashboard/admin-dashboard.component.ts","./src/app/admin/dashboard/admin-dashboard.component.html","./src/app/admin/director/component/director-edit/director-edit.component.ts","./src/app/admin/director/component/director-edit/director-edit.component.html","./src/app/admin/director/component/director-list/director-list.component.ts","./src/app/admin/director/component/director-list/director-list.component.html","./src/app/admin/director/container/director-shell/director-shell.component.ts","./src/app/admin/director/container/director-shell/director-shell.component.html","./src/app/admin/director/director-routing.module.ts","./src/app/admin/director/director.module.ts","./src/app/admin/director/director.service.ts","./src/app/admin/director/state/director.actions.ts","./src/app/admin/director/state/director.reducer.ts","./src/app/admin/division-master/division-master.component.ts","./src/app/admin/division-master/division-master.component.html","./src/app/admin/division/divisionDetail.component.ts","./src/app/admin/division/divisionDetail.component.html","./src/app/admin/division/divisionList.component.ts","./src/app/admin/division/divisionList.component.html","./src/app/admin/import-schedule/import-schedule.component.ts","./src/app/admin/import-schedule/import-schedule.component.html","./src/app/admin/player/player-list.component.ts","./src/app/admin/player/player-list.component.html","./src/app/admin/registrations-and-payments/components/draft-info/draft-info.component.ts","./src/app/admin/registrations-and-payments/components/draft-info/draft-info.component.html","./src/app/admin/registrations-and-payments/components/drafted-players/drafted-players.component.ts","./src/app/admin/registrations-and-payments/components/drafted-players/drafted-players.component.html","./src/app/admin/registrations-and-payments/components/payments/payments.component.ts","./src/app/admin/registrations-and-payments/components/payments/payments.component.html","./src/app/admin/registrations-and-payments/components/player-info/player-info.component.ts","./src/app/admin/registrations-and-payments/components/player-info/player-info.component.html","./src/app/admin/registrations-and-payments/components/season-registrations/season-registrations.component.ts","./src/app/admin/registrations-and-payments/components/season-registrations/season-registrations.component.html","./src/app/admin/registrations-and-payments/registrations-and-payments.module.ts","./src/app/admin/season/seasonDetail.component.ts","./src/app/admin/season/seasonDetail.component.html","./src/app/admin/season/seasonList.component.ts","./src/app/admin/season/seasonList.component.html","./src/app/admin/sponsors/components/current-season-sponsors/current-season-sponsors.component.ts","./src/app/admin/sponsors/components/current-season-sponsors/current-season-sponsors.component.html","./src/app/admin/sponsors/components/sponsor-info/sponsor-info.component.ts","./src/app/admin/sponsors/components/sponsor-info/sponsor-info.component.html","./src/app/admin/sponsors/components/sponsor-list/sponsor-list.component.ts","./src/app/admin/sponsors/components/sponsor-list/sponsor-list.component.html","./src/app/admin/sponsors/containers/sponsor-shell/sponsor-shell.component.ts","./src/app/admin/sponsors/containers/sponsor-shell/sponsor-shell.component.html","./src/app/admin/sponsors/sponsors.module.ts","./src/app/admin/state/admin.actions.ts","./src/app/admin/state/admin.effects.ts","./src/app/admin/state/admin.reducer.ts","./src/app/admin/state/index.ts","./src/app/admin/team/teamList.component.ts","./src/app/admin/team/teamList.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.not-found.component.ts","./src/app/auth.service.ts","./src/app/auth/auth.guard.ts","./src/app/club-docs/csbc-club-docs.component.ts","./src/app/club-docs/csbc-club-docs.component.html","./src/app/club-docs/csbc-club-docs.module.ts","./src/app/compose-message.component.html","./src/app/compose-message.component.ts","./src/app/contacts/contacts.component.html","./src/app/contacts/contacts.component.ts","./src/app/core/core.module.ts","./src/app/core/material/material.module.ts","./src/app/csbc-dashboard/csbc-dashboard.component.ts","./src/app/csbc-dashboard/csbc-dashboard.component.html","./src/app/domain/content.ts","./src/app/domain/division.ts","./src/app/domain/game.ts","./src/app/domain/season.ts","./src/app/domain/team.ts","./src/app/domain/user.ts","./src/app/domain/webContentType.ts","./src/app/games.pipe.ts","./src/app/games/components/daily-schedule/daily-schedule.component.ts","./src/app/games/components/daily-schedule/daily-schedule.component.html","./src/app/games/components/game-card/game-card.component.html","./src/app/games/components/game-card/game-card.component.ts","./src/app/games/components/game-filter/game-filter.component.ts","./src/app/games/components/game-filter/game-filter.component.html","./src/app/games/components/game-score-dialog/game-score-dialog.component.ts","./src/app/games/components/game-score-dialog/game-score-dialog.component.html","./src/app/games/components/games-top-menu/games-top-menu.component.ts","./src/app/games/components/games-top-menu/games-top-menu.component.html","./src/app/games/components/schedule-card-view/schedule-card-view.component.ts","./src/app/games/components/schedule-card-view/schedule-card-view.component.html","./src/app/games/components/schedule/schedule.component.ts","./src/app/games/components/schedule/schedule.component.html","./src/app/games/components/scores/scores.component.ts","./src/app/games/components/scores/scores.component.html","./src/app/games/components/standings/standings.component.ts","./src/app/games/components/standings/standings.component.html","./src/app/games/containers/games-shell/games-shell.component.ts","./src/app/games/containers/games-shell/games-shell.component.html","./src/app/games/containers/schedule-shell/schedule-shell.component.ts","./src/app/games/containers/schedule-shell/schedule-shell.component.html","./src/app/games/containers/standings-shell/standings-shell.component.ts","./src/app/games/containers/standings-shell/standings-shell.component.html","./src/app/games/game-sort.pipe.ts","./src/app/games/game.service.ts","./src/app/games/games-routing.module.ts","./src/app/games/games.module.ts","./src/app/games/games.resolver.ts","./src/app/games/state/game.effects.ts","./src/app/games/state/games.actions.ts","./src/app/games/state/games.reducer.ts","./src/app/games/state/index.ts","./src/app/home/components/announcement/announcement.component.ts","./src/app/home/components/announcement/announcement.component.html","./src/app/home/components/announcements/announcements.component.ts","./src/app/home/components/announcements/announcements.component.html","./src/app/home/components/home-center/home-center.component.ts","./src/app/home/components/home-sidebar/home-sidebar.component.ts","./src/app/home/components/home-sidebar/home-sidebar.component.html","./src/app/home/components/meeting/meeting.component.ts","./src/app/home/components/meeting/meeting.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts","./src/app/home/state/home.actions.ts","./src/app/home/state/home.effects.ts","./src/app/home/state/home.reducer.ts","./src/app/home/state/index.ts","./src/app/login-routing.module.ts","./src/app/login.component.ts","./src/app/photos/csbc-photos.component.ts","./src/app/photos/csbc-photos.component.html","./src/app/reducers/index.ts","./src/app/rxjs-extensions.ts","./src/app/services/content.service.ts","./src/app/services/data.service.ts","./src/app/services/division.service.ts","./src/app/services/season.service.ts","./src/app/services/team.service.ts","./src/app/shared/constants.ts","./src/app/shared/csbc-card/csbc-card.component.ts","./src/app/shared/csbc-card/csbc-card.component.html","./src/app/shared/division-select/division-select.component.ts","./src/app/shared/division-select/division-select.component.html","./src/app/shared/login-dialog/login-dialog.component.ts","./src/app/shared/login-dialog/login-dialog.component.html","./src/app/shared/season-select/csbc-season-select.component.ts","./src/app/shared/season-select/csbc-season-select.component.html","./src/app/shared/shared.module.ts","./src/app/shared/sidenav-list/sidenav-list.component.ts","./src/app/shared/sidenav-list/sidenav-list.component.html","./src/app/shared/top-nav/top-nav.component.ts","./src/app/shared/top-nav/top-nav.component.html","./src/app/user/auth.service.ts","./src/app/user/login.component.ts","./src/app/user/login.component.html","./src/app/user/state/index.ts","./src/app/user/state/user.actions.ts","./src/app/user/state/user.reducer.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/user/user.module.ts","./src/environments/environment.prod.ts","./src/main.ts","/Users/richardsalit/source/repos-github/Hoops/hoops.ui/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B","file":"main.ae3d6e38dd078c725edc.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageNotFoundComponent } from 'app/app.not-found.component';\nimport { AdminGamesShellComponent } from './containers/admin-games-shell/admin-games-shell.component';\nimport { AuthGuard } from 'app/auth/auth.guard';\nimport { AdminGamesListComponent } from './components/admin-games-list/admin-games-list.component';\nimport { AdminGameDetailComponent } from './components/admin-game-detail/admin-game-detail.component';\n\nconst adminGamesRoutes: Routes = [\n  {\n    path: '',\n    component: AdminGamesShellComponent,\n    canActivate: [AuthGuard],\n\n    children: [\n      { path: '', component: AdminGamesListComponent },\n      { path: 'list', component: AdminGamesListComponent },\n      { path: 'detail', component: AdminGameDetailComponent },\n      { path: '**', component: PageNotFoundComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(adminGamesRoutes)],\n  exports: [RouterModule]\n})\nexport class AdminGamesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminGamesListComponent } from './components/admin-games-list/admin-games-list.component';\nimport { AdminGamesShellComponent } from './containers/admin-games-shell/admin-games-shell.component';\nimport { AdminGamesRoutingModule } from './admin-games-routing.module';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { CoreModule } from 'app/core/core.module';\n\n@NgModule({\n  declarations: [AdminGamesListComponent, AdminGamesShellComponent],\n  imports: [CommonModule, AdminGamesRoutingModule, CoreModule, SharedModule]\n})\n\n\nexport class AdminGamesModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'csbc-admin-game-detail',\n  templateUrl: './admin-game-detail.component.html',\n  styleUrls: ['./admin-game-detail.component.css']\n})\nexport class AdminGameDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-game-detail works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MediaObserver } from '@angular/flex-layout';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Game } from 'app/domain/game';\nimport * as fromGames from '../../../../games/state';\nimport * as gameActions from 'app/games/state/games.actions';\n@Component({\n  selector: 'csbc-admin-games-list',\n  templateUrl: './admin-games-list.component.html',\n  styleUrls: [\n    './admin-games-list.component.scss',\n    '../../../admin.component.scss',\n  ],\n})\nexport class AdminGamesListComponent implements OnInit {\n  dataSource!: MatTableDataSource<Game>;\n  games!: Game[];\n  displayedColumns!: string[];\n  flexMediaWatcher: any;\n  currentScreenWidth: any;\n  title = 'Game List - work in progress';\n  canEdit: boolean = false;\n\n  constructor(\n    private store: Store<fromGames.State>,\n    public dialog: MatDialog,\n    private media: MediaObserver\n  ) {\n    this.flexMediaWatcher = media.media$.subscribe((change) => {\n      if (change.mqAlias !== this.currentScreenWidth) {\n        this.currentScreenWidth = change.mqAlias;\n        this.setupTable();\n      }\n    });\n    this.displayedColumns = [\n      'gameDate',\n      'gameTime',\n      'locationName',\n      'homeTeamName',\n      'visitingTeamName',\n      'homeTeamScore',\n      'visitingTeamScore',\n    ];\n    console.log(this.games);\n    this.dataSource = new MatTableDataSource(this.games);\n  }\n\n  ngOnInit(): void {\n    this.setupTable();\n    this.store.select(fromGames.getCurrentSeason).subscribe((season) => {\n      this.store.dispatch(new gameActions.Load());\n    });\n  }\n  setupTable() {\n    this.displayedColumns = [\n      'gameDate',\n      'gameTime',\n      'locationName',\n      'homeTeamName',\n      'visitingTeamName',\n      'homeTeamScore',\n      'visitingTeamScore',\n    ];\n    if (this.currentScreenWidth === 'xs') {\n      // only display internalId on larger screens\n      //this.displayedColumns.shift(); // remove 'internalId'\n      this.displayedColumns = [\n        'gameDate',\n        'gameTime',\n        'locationName',\n        'homeTeamName',\n        'visitingTeamName',\n      ];\n    }\n    this.dataSource = new MatTableDataSource(this.games);\n  }\n  editGame(game: Game) {\n    // TODO: implement this method\n  }\n}\n","<h2>{{title}}</h2>\n<form formName=\"gameForm\">\n  <div id=\"panelGames\" flexLayout=\"row\">\n    <div>\n      <div class=\"table-wrapper\">\n        <mat-table #table id=\"grdSchedule\" [dataSource]=\"dataSource\">\n          <ng-container matColumnDef=\"gameDate\">\n            <th mat-header-cell *matHeaderCellDef>Date</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"date\">\n              {{ game.gameDate | date: 'M/d' }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"gameTime\">\n            <th mat-header-cell *matHeaderCellDef>Time</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"time\">\n              {{ game.gameTime | date: 'shortTime' }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"locationName\">\n            <th mat-header-cell *matHeaderCellDef>Location</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"location\">\n              {{ game.locationName }}\n            </td> </ng-container\n          ><ng-container matColumnDef=\"homeTeamName\">\n            <th mat-header-cell *matHeaderCellDef>Home</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.homeTeamName }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"visitingTeamName\">\n            <th mat-header-cell *matHeaderCellDef>Visitor</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.visitingTeamName }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"homeTeamScore\">\n            <th mat-header-cell *matHeaderCellDef>Home Score</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.homeTeamScore }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"visitingTeamScore\">\n            <th mat-header-cell *matHeaderCellDef>Visitor Score</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.visitingTeamScore }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"actions\" *ngIf=\"canEdit\">\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\n            <td mat-cell *matCellDef=\"let game\">\n              <button class=\"edit\" *ngIf=\"canEdit\" (click) = \"editGame(game)\" mat-icon-button><mat-icon>edit</mat-icon></button>\n            </td>\n          </ng-container>\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" ></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </mat-table>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport * as fromGames from '../../../../games/state';\nimport * as gameActions from '../../../../games/state/games.actions';\nimport { Store } from '@ngrx/store';\n\nimport * as adminActions from '../../../state/admin.actions';\nimport * as fromAdmin from '../../../state';\nimport * as fromUser from '../../../../user/state';\n\nimport { GameService } from 'app/games/game.service';\nimport { LoadSeasons } from './../../../state/admin.actions';\nimport { Season } from '../../../../domain/season';\nimport { Division } from '../../../../domain/division';\n\n@Component({\n  selector: 'csbc-admin-games-shell',\n  templateUrl: './admin-games-shell.component.html',\n  styleUrls: [\n    './admin-games-shell.component.scss',\n    '../../../admin.component.scss'\n  ]\n})\nexport class AdminGamesShellComponent implements OnInit {\n  seasons$ = this.store.select(fromAdmin.getSeasons);\n  divisions$ = this.store.select(fromAdmin.getSeasonDivisions);\n  constructor(\n    private store: Store<fromGames.State>,\n    private gameService: GameService\n  ) {}\n\n  ngOnInit(): void {\n    //    this.store.dispatch(new adminActions.LoadSeasons());\n\n    this.store.select(fromAdmin.getCurrentSeason).subscribe(season => {\n      console.log(season);\n\n//       this.store.dispatch(new gameActions.Load());\n      this.store.dispatch(new gameActions.LoadDivisions());\n//       this.store.dispatch(new gameActions.LoadTeams());\n    });\n  }\n  selectedSeason(season: Season) {\n    console.log(season);\n    this.store.dispatch(new gameActions.SetCurrentSeason(season));\n  }\n  clickedDivision(division: MouseEvent) {\n    // TODO: need to change the parameter\n    console.log(division);\n  }\n}\n","<div class=\"container\">\n  <div fxFlex=\"25\">\n    <csbc-season-select\n      [seasons$]=\"seasons$\"\n      (setSeason)=\"selectedSeason($event)\"\n    ></csbc-season-select>\n  </div>\n  <div fxFlex=\"25\">\n    <csbc-division-select\n      [divisions$]=\"divisions$\"\n      (click)=\"clickedDivision($event)\"\n    >\n    </csbc-division-select>\n  </div>\n  <div fxFlex=\"75\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AdminDashboardComponent } from './dashboard/admin-dashboard.component';\n\n// import { AuthGuard } from '../auth-guard.service';\nimport { AdminShellComponent } from './containers/admin-shell/admin-shell.component';\nimport { TeamListComponent } from './team/teamList.component';\nimport { AdminSeasonShellComponent } from './containers/admin-season-shell/admin-season-shell.component';\nimport { AdminDivisionShellComponent } from './containers/admin-division-shell/admin-division-shell.component';\nimport { PageNotFoundComponent } from 'app/app.not-found.component';\n\nimport { AuthGuard } from '../auth/auth.guard';\nimport { SeasonSetupComponent } from './containers/season-setup/season-setup.component';\n\nconst adminRoutes: Routes = [\n  {\n    path: '',\n    component: AdminShellComponent,\n    canActivate: [AuthGuard],\n\n    children: [\n      { path: '', component: AdminDashboardComponent },\n      { path: 'seasons', component: AdminSeasonShellComponent },\n      { path: 'division', component: AdminDivisionShellComponent },\n\n      { path: 'season-setup', component: SeasonSetupComponent },\n      {\n        path: 'content',\n        loadChildren: () =>\n          import('./content/content.module').then((mod) => mod.ContentModule),\n      },\n      { path: 'teams', component: TeamListComponent },\n      {\n        path: 'games',\n        loadChildren: () =>\n          import('./admin-games/admin-games.module').then(\n            (g) => g.AdminGamesModule\n          ),\n      },\n      { path: 'dashboard', component: AdminDashboardComponent },\n      {\n        path: 'director',\n        loadChildren: () =>\n          import('./director/director.module').then(m => m.DirectorModule),\n      },\n      {\n        path: 'registrations',\n        loadChildren: () =>\n          import(\n            './registrations-and-payments/registrations-and-payments.module'\n          ).then((m) => m.RegistrationsAndPaymentsModule),\n      },\n      { path: '**', component: PageNotFoundComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(adminRoutes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n","import { Component, OnInit, NgZone, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Store } from '@ngrx/store';\n\nimport * as fromContent from './content/state';\nimport * as contentActions from './content/state/content.actions';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n\nclass MenuItem {\n  routerLink: string;\n  description: string;\n}\nconst SMALL_WIDTH_BREAKPOINT = 720;\n@Component({\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\n\n\nexport class AdminComponent  implements OnInit {\n  @ViewChild(MatSidenav, {static: false}) sidenav: MatSidenav;\n\n  opened: true;\n  mode = 'side';\n  menuItems: MenuItem[];\n  private mediaMatcher: MediaQueryList = matchMedia(\n    `(max-width: ${SMALL_WIDTH_BREAKPOINT}px)`\n  );\n  options: FormGroup;\n\n  constructor(zone: NgZone, private router: Router, fb: FormBuilder,     private store: Store<fromContent.State>\n    ) {\n    this.options = fb.group({\n      bottom: 0,\n      fixed: false,\n      top: 0\n    });\n  }\n  ngOnInit() {\n    this.store.dispatch(new contentActions.Load());\n\n    // this.userService.isLoggedIn.subscribe(f => {\n    //   console.log(f);\n    //   this.isLoggedin = f;\n    //   this.router.navigate(['/login']);\n    // });\n\n    // this.user = this.userService.user;\n    // TODO: get user types!\n    this.menu();\n  }\n    menu() {\n    this.menuItems = new Array<MenuItem>();\n\n    this.menuItems.push({\n      routerLink: '/admin/seasons',\n      description: 'Seasons'\n    });\n    this.menuItems.push({\n      routerLink: '/admin/division',\n      description: 'Divisions'\n    });\n    this.menuItems.push({\n      routerLink: '/admin/content',\n      description: 'Front Page Content'\n    });\n  }\n}\n","<!-- <div class=\"row\">\n  <aside class=\"col-sm-2\">\n  </aside>\n  <div class=\"col-sm-10\">\n    <div class=\"row\">\n      <h3 class=\"pull-right\">ADMIN</h3>\n\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div> -->\n<div>Admin</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AdminComponent } from './admin.component';\nimport { AdminDashboardComponent } from './dashboard/admin-dashboard.component';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SeasonDetailComponent } from './season/seasonDetail.component';\nimport { SeasonListComponent } from './season/seasonList.component';\nimport { DivisionDetailComponent } from './division/divisionDetail.component';\nimport { DivisionListComponent } from './division/divisionList.component';\nimport { TeamListComponent } from './team/teamList.component';\nimport { PlayerListComponent } from './player/player-list.component';\n\nimport { DivisionMasterComponent } from './division-master/division-master.component';\n\nimport { CoreModule } from '../core/core.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AdminShellComponent } from './containers/admin-shell/admin-shell.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './state/admin.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AdminEffects } from './state/admin.effects';\nimport { AdminSeasonShellComponent } from './containers/admin-season-shell/admin-season-shell.component';\nimport { AdminSeasonListComponent } from './components/admin-season-list/admin-season-list.component';\nimport { AdminDivisionListComponent } from './components/admin-division-list/admin-division-list.component';\nimport { AdminTeamListComponent } from './components/admin-team-list/admin-team-list.component';\nimport { AdminDivisionShellComponent } from './containers/admin-division-shell/admin-division-shell.component';\nimport { ContentModule } from './content/content.module';\nimport { DirectorModule } from './director/director.module';\n\nimport { ImportScheduleComponent } from './import-schedule/import-schedule.component';\nimport { SeasonSelectComponent } from './components/season-select/season-select.component';\nimport { SeasonSetupComponent } from './containers/season-setup/season-setup.component';\nimport { RegistrationPaymentsComponent } from './registrations-and-payments/containers/registration-payments/registration-payments.component';\nimport { SeasonRegistrationsComponent } from './registrations-and-payments/components/season-registrations/season-registrations.component';\nimport { PaymentsComponent } from './registrations-and-payments/components/payments/payments.component';\nimport { AdminGamesModule } from './admin-games/admin-games.module';\nimport { RegistrationsAndPaymentsModule } from './registrations-and-payments/registrations-and-payments.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule,\n    CoreModule,\n    AdminRoutingModule,\n    ContentModule,\n    DirectorModule,\n    AdminGamesModule,\n    RegistrationsAndPaymentsModule,\n    StoreModule.forFeature('admin', reducer),\n    EffectsModule.forFeature([AdminEffects])\n  ],\n  declarations: [\n    AdminComponent,\n    AdminDashboardComponent,\n    SeasonDetailComponent,\n    SeasonListComponent,\n    DivisionDetailComponent,\n    DivisionListComponent,\n    TeamListComponent,\n    PlayerListComponent,\n    DivisionMasterComponent,\n    AdminShellComponent,\n    AdminSeasonShellComponent,\n    AdminSeasonListComponent,\n    AdminDivisionListComponent,\n    AdminTeamListComponent,\n    AdminDivisionShellComponent,\n    ImportScheduleComponent,\n    SeasonSelectComponent,\n    SeasonSetupComponent,\n    SeasonRegistrationsComponent,\n    PaymentsComponent,\n  ],\n  // exports: [SeasonSelectComponent]\n})\nexport class AdminModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'csbc-admin-division-list',\n  templateUrl: './admin-division-list.component.html',\n  styleUrls: [\n    './admin-division-list.component.scss',\n    '../../admin.component.scss'\n  ]\n})\nexport class AdminDivisionListComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<p>\n  admin-division-list works!\n</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Season } from 'app/domain/season';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromAdmin from '../../state';\nimport * as adminActions from '../../state/admin.actions';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'csbc-admin-season-list',\n  templateUrl: './admin-season-list.component.html',\n  styleUrls: [\n    './admin-season-list.component.scss',\n    '../../admin.component.scss'\n  ]\n})\nexport class AdminSeasonListComponent implements OnInit {\n  private _seasons: Season[] | undefined;\n  @Input() info: string | undefined;\n  get seasons() {\n    return this._seasons;\n  }\n  set seasons(seasons: Season[] | undefined) {\n    this._seasons = seasons;\n  }\n\n  dataSource = new MatTableDataSource();\n\n  displayColumns: string[];\n  constructor(private store: Store<fromAdmin.State>) {\n    this.displayColumns = [];\n  }\n\n  ngOnInit() {\n    this.setDisplayColumns();\n\n    this.store.dispatch(new adminActions.LoadSeasons());\n    this.store.select(fromAdmin.getSeasons).subscribe(seasons => {\n      this.seasons = seasons;\n      console.log(seasons);\n      this.dataSource.data = seasons;\n    });\n  }\n  setDisplayColumns() {\n    this.displayColumns.push('seasonId');\n    this.displayColumns.push('description');\n    this.displayColumns.push('fromDate');\n    this.displayColumns.push('toDate');\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\">\n  <div fxFlex=\"100\">\n    <div id=\"panelContent\">\n      <div class=\"table-wrapper\">\n        <table\n          mat-table\n          id=\"grdSchedule\"\n          [dataSource]=\"dataSource\"\n        >\n          <ng-container matColumnDef=\"seasonId\">\n            <th mat-header-cell *matHeaderCellDef>ID</th>\n            <td mat-cell *matCellDef=\"let season\">\n              {{ season.seasonId }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef>Description</th>\n            <td mat-cell *matCellDef=\"let season\">\n              {{ season.description }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"fromDate\">\n            <th mat-header-cell *matHeaderCellDef>From Date</th>\n            <td mat-cell *matCellDef=\"let season\">\n              {{ season.fromDate | date: 'shortDate' }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"toDate\">\n            <th mat-header-cell *matHeaderCellDef>To Date</th>\n            <td mat-cell *matCellDef=\"let season\">\n              {{ season.toDate | date: 'shortDate' }}\n            </td>\n          </ng-container>\n          <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'csbc-admin-team-list',\n  templateUrl: './admin-team-list.component.html',\n  styleUrls: ['./admin-team-list.component.css']\n})\nexport class AdminTeamListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  admin-team-list works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { pipe } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport * as fromAdmin from '../../state';\nimport { Observable } from 'rxjs';\nimport { Season } from 'app/domain/season';\nimport * as adminActions from '../../state/admin.actions';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'season-select',\n  templateUrl: './season-select.component.html',\n  styleUrls: ['./season-select.component.scss', '../../admin.component.scss']\n})\nexport class SeasonSelectComponent implements OnInit {\n  seasons$!: Observable<Season[]>;\n  selectForm!: FormGroup;\n  selected: Season | undefined;\n\n  constructor( private store: Store<fromAdmin.State>, private fb: FormBuilder\n    ) {}\n\n  ngOnInit() {\n    this.seasons$ = this.store\n      .pipe(select(fromAdmin.getSeasons));\n    this.selectForm = this.fb.group({\n      description: ''\n    });\n    this.seasons$.subscribe(seasons => {\n      if (seasons === undefined) {\n        this.selected = seasons[0];\n        // console.log(this.selected);\n        this.selectedSeason(this.selected);\n      }\n    });\n  }\n  selectedSeason(season: Season) {\n    // console.log(season);\n    this.store.dispatch(new adminActions.SetSelectedSeason(season));\n    this.store.dispatch(new adminActions.SetSelectedSeasonId(season.seasonId));\n  }\n}\n","<form fxFlex [formGroup]=\"selectForm\">\n  <mat-form-field>\n    <mat-label>Select Season</mat-label>\n    <mat-select formControlName=\"description\" [(ngModel)]=\"selected\">\n      <mat-option\n      *ngFor=\"let season of seasons$ | async\"\n      [value]=\"season\"\n      (click)=\"selectedSeason(season)\"\n    >\n      {{ season.description }}\n    </mat-option>\n    </mat-select>\n  </mat-form-field>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as fromAdmin from '../../state';\nimport * as adminActions from '../../state/admin.actions';\n\n@Component({\n  selector: 'csbc-admin-division-shell',\n  templateUrl: './admin-division-shell.component.html',\n  styleUrls: [\n    './admin-division-shell.component.scss',\n    '../../admin.component.scss'\n  ]\n})\nexport class AdminDivisionShellComponent implements OnInit {\n  constructor(private store: Store<fromAdmin.State>) {}\n\n  ngOnInit() {\n    this.store.dispatch(new adminActions.LoadSeasons());\n  }\n}\n","<div\n  fxLayout=\"row wrap\"\n  fxLayoutAlign=\"start\"\n  fxLayoutGap=\"10px\"\n  style=\"margin-top:20px;\"\n>\n  <div fxFlex=\"100\" style=\"margin-bottom:12px;\">\n    <season-select></season-select>\n  </div>\n\n  <div fxFlex=\"100\" style=\"margin-bottom:12px;\">\n    <csbc-division-list></csbc-division-list>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Season } from 'app/domain/season';\nimport { select, Store } from '@ngrx/store';\n\nimport * as fromAdmin from '../../state';\nimport * as adminActions from '../../state/admin.actions';\n\n\n@Component({\n  selector: 'csbc-admin-season-shell',\n  templateUrl: './admin-season-shell.component.html',\n  styleUrls: ['./admin-season-shell.component.scss']\n})\nexport class AdminSeasonShellComponent implements OnInit {\n  currentSeason$: Observable<Season>;\n  seasons$: Observable<Season[]>;\n  constructor(private store: Store<fromAdmin.State>) { }\n\n  ngOnInit() {\n    this.setStateSubscriptions();\n  }\n  setStateSubscriptions() {\n    // this.currentSeason$ = this.store.pipe(select(fromAdmin.getCurrentSeason));\n    this.seasons$ = this.store.pipe(select(fromAdmin.getSeasons));\n  }\n}\n","<div\n  fxLayout=\"row wrap\"\n  fxLayoutAlign=\"start\"\n  fxLayoutGap=\"10px\"\n  style=\"margin-top:20px;\"\n>\n  <div fxFlex=\"100\" style=\"margin-bottom:12px;\">\n    <csbc-admin-season-list\n    ></csbc-admin-season-list>\n  </div>\n  <!-- <div fxFlex=\"65\" style=\"margin-bottom:12px;\">Detail</div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as adminActions from '../../state/admin.actions';\nimport * as contentActions from '../../content/state/content.actions';\nimport * as fromAdmin from '../../state';\nimport * as fromUser from '../../../user/state';\n\n\n@Component({\n  selector: 'csbc-admin-shell',\n  templateUrl: './admin-shell.component.html',\n  styleUrls: ['./admin-shell.component.scss']\n})\nexport class AdminShellComponent implements OnInit {\n  events: string[] = [];\n  opened: boolean;\n\n  shouldRun = true;\n  \n  constructor(private store: Store<fromAdmin.State>) { }\n\n  ngOnInit() {\n    this.store.dispatch(new contentActions.Load());\n    this.store.dispatch(new adminActions.LoadSeasons);\n  }\n\n}\n","<!-- <div class=\"container\"> -->\n  <div class=\"row\" fxLayoutGap=\"10px\" style=\"margin-top:20px;\">\n  <div fxFlex.gt-md=\"10\" fxFlex.lt-md=\"25\" style=\"margin-bottom:12px;\">\n    <mat-sidenav-container class=\"admin-container\">\n      <mat-sidenav-content>\n        <mat-nav-list dense>\n          <a mat-list-item routerLink=\"/admin/dashboard\">Dashboard\n            <span class=\"pull-right hidden-xs showopacity glyphicon glyphicon-home\"></span>\n          </a>\n          <mat-divider></mat-divider>\n          <a mat-list-item routerLink=\"/admin/director\" routerLinkActive=\"active\">Directors</a>\n          <a mat-list-item routerLink=\"/admin/households\" routerLinkActive=\"active\">Households</a>\n          <a mat-list-item routerLink=\"/admin/people\" routerLinkActive=\"active\">People</a>\n          <a mat-list-item routerLink=\"/admin/colors\" routerLinkActive=\"active\">Uniform Colors</a>\n          <a mat-list-item routerLink=\"/admin/users\" routerLinkActive=\"active\">Users</a>\n          <mat-divider></mat-divider>\n          <a mat-list-item routerLink=\"/admin/seasons\" routerLinkActive=\"active\">Seasons</a>\n           <a mat-list-item routerLink=\"/admin/division\" >Divisions</a>\n           <a mat-list-item routerLink=\"/admin/games\" >Games</a>\n           <a mat-list-item routerLink=\"/admin/season-setup\" >Season Setup</a>\n          <!--<a mat-list-item routerLink=\"/admin/teams\" routerLinkActive=\"active\">Teams</a>\n          <a mat-list-item routerLink=\"/admin/games\" routerLinkActive=\"active\">Games</a> -->\n          <mat-divider></mat-divider>\n          <a mat-list-item routerLink=\"./content\" routerLinkActive=\"active\">Content</a>\n          <!-- <a mat-list-item routerLink=\"./director\" routerLinkActive=\"active\">Directors</a> -->\n        </mat-nav-list>\n        <!-- <p><button mat-button (click)=\"sidenav.toggle()\">sidenav.toggle()</button></p>\n    <p>Events:</p> -->\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </div>\n  <div fxFlex=\"75\" >\n    <router-outlet></router-outlet>\n  </div>\n</div>\n<!-- </div> -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'season-setup',\n  templateUrl: './season-setup.component.html',\n  styleUrls: ['./season-setup.component.scss', '../../admin.component.scss']\n})\nexport class SeasonSetupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"flex-container\" fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"margin-top:20px;\">\n  <div fxFlex=\"25\" fxFlex.lt-sm=\"40\" style=\"margin-bottom:12px;\">\n    Division\n  </div>\n  <div fxFlex=\"75\" >\n    Teams\n  </div >\n  <div fxFlex=\"50\">Players</div>\n  <div fxFlex=\"50\"></div>\n</div>\n\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  ViewChildren,\n  ElementRef,\n  Inject\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  FormArray,\n  Validators,\n  FormControlName\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import { Http, Response, Headers, RequestOptions } from '@angular/http';\n\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/merge';\nimport { Subscription } from 'rxjs';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\n\nimport { Content } from '../../../../domain/content';\nimport { ContentService } from '../../content.service';\nimport { pipe } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromContent from '../../state';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { WebContentType } from 'app/domain/webContentType';\n\n@Component({\n  selector: 'csbc-content-edit',\n  templateUrl: './content-edit.component.html',\n  styleUrls: ['./content-edit.component.scss']\n})\nexport class ContentEditComponent implements OnInit {\n  @ViewChildren(FormControlName, { read: ElementRef })\n  @Inject(MAT_DIALOG_DATA)\n  // formInputElements: ElementRef[];\n\n  // @Input()\n  content!: Content;\n  contentForm!: FormGroup;\n  errorMessage: string | undefined;\n  pageTitle: string | undefined;\n  hideId: boolean | undefined;\n  private baseUrl = 'api/webcontent';\n  selectedRecord$ = this.contentService.selectedContent$;\n  selectedContent!: Content;\n  contentTypes: WebContentType[] = [\n    {\n      webContentTypeId: 1,\n      webContentTypeDescription: 'Season Info'\n    },\n    {\n      webContentTypeId: 2,\n      webContentTypeDescription: 'Events'\n    },\n    {\n      webContentTypeId: 3,\n      webContentTypeDescription: 'Meeting Notice'\n    }\n  ];\n  selected!: WebContentType;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private store: Store<fromContent.State>,\n    // private http: Http,\n    private contentService: ContentService\n  ) {}\n\n  ngOnInit(): void {\n    this.contentForm = this.fb.group({\n      title: [\n        '',\n        [Validators.required, Validators.minLength(3), Validators.maxLength(50)]\n      ],\n      subTitle: '',\n      body: '',\n      location: '',\n      dateAndTime: '',\n      webContentId: '',\n      webContentTypeControl: null,\n      contentSequence: 1,\n      expirationDate: new Date()\n    });\n    this.pageTitle = 'Edit Web Content Messages';\n    this.hideId = true;\n    this.getContent();\n  }\n\n  update(): void {\n    this.contentForm.patchValue({\n      title: this.content.title,\n      subTitle: this.content.subTitle,\n      body: this.content.body,\n      dateAndTime: this.content.dateAndTime,\n      location: this.content.location,\n      expirationDate: this.content.expirationDate,\n      webContentTypeControl: this.content.webContentType,\n    });\n  }\n  getContent(): void {\n    this.store\n      .pipe(select(fromContent.getSelectedContent))\n      .subscribe(content => {\n        this.selectedContent = content;\n        this.onContentRetrieved(content);\n      });\n  }\n  onContentRetrieved(content: Content): void {\n    console.log(content);\n    if (this.contentForm) {\n      this.contentForm.reset();\n    }\n    \n    if (content.webContentId === 0) {\n      this.pageTitle = 'Add Content';\n    } else {\n      this.pageTitle = `Edit Content: ${content.title}`;\n    }\n\n    // // Update the data on the form\n    this.contentForm.patchValue({\n      title: content.title,\n      subTitle: content.subTitle,\n      body: content.body,\n      dateAndTime: content.dateAndTime,\n      location: content.location,\n      expirationDate: content.expirationDate,\n      webContentId: content.webContentId,\n      webContentTypeControl: content.webContentType\n    });\n    this.selected = content.webContentType;\n    console.log(this.selected);\n  }\n  saveContent() {\n    console.log(this.contentForm.value);\n    if (this.contentForm.dirty) {\n      this.contentService.saveContent(this.contentForm.value);\n      this.router.navigate(['/admin/content']);\n    }\n  }\n  getWebContentType(id: number): WebContentType {\n    let webContentType = new WebContentType();\n    console.log(id);\n    switch (id) {\n      case 1: {\n        webContentType.webContentTypeId = id;\n        webContentType.webContentTypeDescription = 'Season Info';\n        break;\n      }\n      case 2: {\n        webContentType.webContentTypeId = id;\n        webContentType.webContentTypeDescription = 'Season Info';\n        break;\n      }\n      case 3: {\n        webContentType.webContentTypeId = id;\n        webContentType.webContentTypeDescription = 'Meeting Notice';\n        break;\n      }\n      default: {\n        webContentType.webContentTypeId = id;\n        webContentType.webContentTypeDescription = 'Season Info';\n      }\n    }\n    return webContentType;\n  }\n  public hasError = (controlName: string, errorName: string) => {\n    return this.contentForm.controls[controlName].hasError(errorName);\n  };\n}\n","<section fxLayout=\"row\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\">\n  <mat-card fxFlex=\"98\">\n    <mat-card-title>{{ pageTitle }}</mat-card-title>\n    <form novalidate (ngSubmit)=\"saveContent()\" [formGroup]=\"contentForm\">\n      <mat-card-content>\n        <fieldset>\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Title\" formControlName=\"title\" />\n            <mat-hint>Not more then 50 characters long.</mat-hint>\n            <mat-error *ngIf=\"hasError('title', 'required')\"\n              >Name is required</mat-error\n            >\n            <mat-error *ngIf=\"hasError('title', 'maxlength')\"\n              >You have more than 50 characters</mat-error\n            >\n          </mat-form-field>\n\n          <mat-form-field class=\"full-width\">\n            <input\n              matInput\n              placeholder=\"Sub Title\"\n              formControlName=\"subTitle\"\n            />\n          </mat-form-field>\n          <mat-form-field class=\"full-width\">\n            <textarea\n              matInput\n              type=\"text\"\n              placeholder=\"Body\"\n              rows=\"4\"\n              formControlName=\"body\"\n            ></textarea>\n          </mat-form-field>\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"location\" formControlName=\"location\" />\n          </mat-form-field>\n          <mat-form-field class=\"full-width\">\n            <input\n              matInput\n              placeholder=\"Date and Time\"\n              formControlName=\"dateAndTime\"\n            />\n          </mat-form-field>\n          <mat-divider></mat-divider>\n          <mat-form-field type=\"date\" class=\"standard-field-width\">\n            <mat-label>Announcement Type:</mat-label>\n            <mat-select\n              [value]=\"selected\"\n              formControlName=\"webContentTypeControl\"\n            >\n              <mat-option\n                *ngFor=\"let webContentType of contentTypes\"\n                [value]=\"webContentType\"\n                >{{ webContentType.webContentTypeDescription }}</mat-option\n              >\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field class=\"sequenceWidth\">\n            <input\n              matInput\n              [matDatepicker]=\"picker\"\n              placeholder=\"Choose a date\"\n              formControlName=\"expirationDate\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n          <mat-form-field class=\"sequenceWidth\">\n            <input\n              matInput\n              placeholder=\"NoticeSequence\"\n              formControlName=\"contentSequence\"\n              type=\"number\"\n            />\n          </mat-form-field>\n          <input\n            id=\"webContentId\"\n            class=\"form-control\"\n            [hidden]=\"hideId\"\n            type=\"text\"\n            placeholder=\"\"\n            formControlName=\"webContentId\"\n          />\n        </fieldset>\n      </mat-card-content>\n      <mat-card-actions>\n        <div class=\"input-group-btn\">\n          <button\n            type=\"button\"\n            mat-raised-button\n            type=\"submit\"\n            [disabled]=\"!contentForm.valid\"\n            color=\"primary\"\n          >\n            Save\n          </button>\n          <!-- <button type=\"button\" mat-raised-button>Save and New</button> -->\n          <button\n            type=\"button\"\n            mat-raised-button\n            [routerLink]=\"['/admin/content']\"\n          >\n            Cancel\n          </button>\n        </div>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n</section>\n<!--\n    <div class=\"col-sm-4 col-sm-offset-3\">\n<div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n          <div class=\"panel-title\" formControlName=\"exampleTitle\">{{title}}</div>\n        </div>\n        <div class=\"panel-body\">\n          <h5 class=\"text-center text-info\">{{subTitle}}</h5>\n\n          <div class=\"text-center\"><strong><span>{{body}}</span></strong></div>\n          <div class=\"text-center\" [hidden]=\"!location\">Location: {{location}}</div>\n          <div class=\"text-center\" [hidden]=\"!dateAndTime\">Date/Time: {{dateAndTime}}</div>\n        </div>\n      </div>\n      </div>-->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport { Content } from '../../../../domain/content';\nimport { ContentService } from '../../content.service';\n\nimport * as fromContent from '../../state';\nimport * as contentActions from '../../state/content.actions';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'content-list-toolbar',\n  templateUrl: './content-list-toolbar.component.html',\n  styleUrls: ['./content-list-toolbar.component.scss']\n})\nexport class ContentListToolbarComponent implements OnInit {\n  filterForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private store: Store<fromContent.State>,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.filterForm = this.fb.group({\n      activeContent: true\n    });\n    this.store.dispatch(new contentActions.SetIsActiveOnly(true));\n    this.store.dispatch(new contentActions.SetActiveContent());\n  }\n  addContent() {\n    const content = new Content();\n    this.store.dispatch(new contentActions.SetSelectedContent(content));\n    this.router.navigate([\n      './admin/content/edit',\n      '../../../admin.component.scss'\n    ]);\n  }\n  filterContent() {\n    const isActive = this.filterForm.value.activeContent !== true;\n    this.store.dispatch(new contentActions.SetIsActiveOnly(isActive));\n    isActive\n      ? this.store.dispatch(new contentActions.SetActiveContent())\n      : this.store.dispatch(new contentActions.SetAllContent());\n  }\n}\n","<form [formGroup]=\"filterForm\">\n  <mat-toolbar>\n    <mat-toolbar-row\n      fxFlex\n      fxLayout=\"row\"\n      fxLayoutAlign=\"left\"\n      fxLayoutGap=\"4px\"\n    >\n      <div fxFlex=\"20%\">\n        <!-- <button mat-raised-button (click)=\"addContent()\"> -->\n          <button mat-raised-button  [routerLink]=\"['edit']\">\n          New\n        </button>\n      </div>\n      <!-- <span fxFlex=\"5%\"></span> -->\n      <div fxFlex=\"25%\" class=\"activeContentCheckbox\">\n        <mat-checkbox\n          value=\"checked\"\n          formControlName=\"activeContent\"\n          (click)=\"filterContent()\"\n          >Active only</mat-checkbox\n        >\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</form>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport { Content } from '../../../../domain/content';\nimport { ContentService } from '../../content.service';\nimport { ContentEditComponent } from '../content-edit/content-edit.component';\n\nimport * as fromContent from '../../state';\nimport * as contentActions from '../../state/content.actions';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { WebContent } from '../../../../domain/webContent';\n\n@Component({\n  selector: 'csbc-content-list',\n  templateUrl: './contentList.component.html',\n  styleUrls: ['./contentList.component.scss', '../../../admin.component.scss']\n})\nexport class ContentListComponent implements OnInit {\n  @Output() selectedContent = new EventEmitter<Content>();\n  contents$!: Observable<WebContent[]>;\n  errorMessage: string|undefined;\n  pageTitle: string|undefined;\n  public dialog!: MatDialog;\n  displayedColumns = ['title', 'expirationDate', 'dateAndTime', 'actions'];\n  dataSource!: MatTableDataSource<WebContent>;\n  constructor(\n    private _contentService: ContentService,\n    private router: Router,\n    private store: Store<fromContent.State>\n  ) {}\n\n  ngOnInit() {\n    this.pageTitle = 'Web Site Messages';\n\n    // this.store.select(fromContent.getIsActiveOnly).subscribe(isActive => {\n    //   if (isActive) {\n    //     this.store.dispatch(new contentActions.SetActiveContent());\n    //   } else {\n    //     this.store.dispatch(new contentActions.SetAllContent());\n    //   }\n    // });\n\n    this.store.select(fromContent.getfilteredList).subscribe(data => {\n      console.log(data);\n      this.dataSource = new MatTableDataSource(data);\n    });\n  }\n\n  onSelect(content: Content): void {\n    console.log(content);\n    //  this.selectedContent = content;\n  }\n\n  editContent(content: any) {\n    console.log(content);\n    this.store.dispatch(new contentActions.SetSelectedContent(content));\n    this.router.navigate(['./admin/content/edit']);\n    // this._contentService.selectedContent = content;\n  }\n  addContent() {\n    this.router.navigate(['./admin/content/edit']);\n  }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ContentEditComponent, {\n      height: '600px',\n      width: '700px'\n    });\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\">\n  <div fxFlex=\"100\">\n    <div id=\"panelContent\">\n      <content-list-toolbar></content-list-toolbar>\n      <div class=\"table-wrapper\">\n        <table mat-table id=\"grdSchedule\" [dataSource]=\"dataSource\">\n          <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef>Title</th>\n            <td mat-cell *matCellDef=\"let content\">\n              {{ content.title }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"dateAndTime\">\n            <th mat-header-cell *matHeaderCellDef>Date And Time</th>\n            <td mat-cell *matCellDef=\"let content\" class=\"time\">\n              {{ content.dateAndTime }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"expirationDate\">\n            <th mat-header-cell *matHeaderCellDef>Expiry Date</th>\n            <td mat-cell *matCellDef=\"let content\" class=\"date\">\n              {{ content.expirationDate | date: 'M/d/yy' }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let content\">\n              <button\n                class=\"edit\"\n                (click)=\"editContent(content)\"\n                mat-icon-button\n              >\n                <mat-icon>edit</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n      <!-- </div> -->\n    </div>\n  </div>\n  <!--<div class=\"col-md-6 col-sm-12 col-xs-12\">\n        <csbc-content-edit [content] = \"selectedContent\"></csbc-content-edit>\n    </div>-->\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Content } from 'app/domain/content';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ContentService } from '../../content.service';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport * as fromContent from '../../state';\nimport * as contentActions from '../../state/content.actions';\n\n@Component({\n  selector: 'csbc-content-shell',\n  templateUrl: './content-shell.component.html',\n  styleUrls: ['./content-shell.component.scss']\n})\nexport class ContentShellComponent implements OnInit {\n  @Input() content: Content;\n\n  contentForm: FormGroup;\n  title = 'Web Site Messages';\n\n  constructor(\n    private fb: FormBuilder,\n    private _contentService: ContentService,\n    private router: Router,\n    private store: Store<fromContent.State>\n  ) {\n\n    router.navigate(['./admin/content/list']);\n  }\n\n  ngOnInit(): void {\n    console.log('called content shell');\n    this.store.dispatch(new contentActions.Load());\n    this.contentForm = this.fb.group({\n      title: [\n        'Test',\n        [Validators.required, Validators.minLength(3), Validators.maxLength(50)]\n      ],\n      subTitle: '',\n      body: '',\n      location: '',\n      dateAndTime: '',\n      webContentTypeId: ''\n    });\n  }\n\n  update(): void {\n    this.contentForm.patchValue({\n      title: this.content.title,\n      subTitle: this.content.subTitle,\n      body: this.content.body\n    });\n  }\n\n  save() {}\n  selectedContent() {\n    console.log('call back to shell');\n    this.router.navigate(['edit']);\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\">\n  <div fxFlex=\"100\" class=\"content-wrapper\">\n    <!-- <div class=\"sectionTitle\">{{ title }}</div> -->\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContentShellComponent } from './containers/content-shell/content-shell.component';\nimport { ContentListComponent } from './components/content-list/contentList.component';\nimport { ContentEditComponent } from './components/content-edit/content-edit.component';\nimport { PageNotFoundComponent } from 'app/app.not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContentShellComponent,\n    children: [\n        { path: '', component:ContentListComponent },\n        { path: 'edit', component: ContentEditComponent },\n        { path: 'list', component: ContentListComponent },\n        { path: '**', component: PageNotFoundComponent }\n    ]\n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ContentRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ContentRoutingModule } from './content-routing.module';\nimport { ContentShellComponent } from './containers/content-shell/content-shell.component';\nimport { ContentListComponent } from './components/content-list/contentList.component';\nimport { ContentEditComponent } from './components/content-edit/content-edit.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { CoreModule } from 'app/core/core.module';\n\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './state/content.reducer';\nimport { ContentListToolbarComponent } from './components/content-list-toolbar/content-list-toolbar.component';\nimport { ContentEffects } from './state/content.effect';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ContentService } from './content.service';\n\n@NgModule({\n  imports: [\n  CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule,\n    CoreModule,\n    ContentRoutingModule,\n    StoreModule.forFeature('content', reducer),\n    EffectsModule.forFeature([ContentEffects])\n  ],\n  exports: [ContentRoutingModule],\n  declarations: [\n    ContentShellComponent,\n    ContentListComponent,\n    ContentEditComponent,\n    ContentListToolbarComponent\n  ],\n  providers: [ContentService]\n})\nexport class ContentModule {}\n","import { Injectable } from '@angular/core';\nimport { map, tap, shareReplay } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpResponse,\n  HttpParams,\n  HttpHeaders\n} from '@angular/common/http';\nimport '../../rxjs-extensions';\n\nimport * as moment from 'moment';\n\nimport { Content } from '../../domain/content';\nimport { DataService } from '../../services/data.service';\nimport { ConditionalExpr } from '@angular/compiler';\n\nimport * as fromContent from '../../admin/content/state';\nimport { Store } from '@ngrx/store';\nimport { WebContentType } from 'app/domain/webContentType';\nimport { WebContent } from '../../domain/webContent';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class ContentService {\n  // private baseUrl = 'http://svc.csbchoops.net/api/WebContent';\n  // baseUrl = this.data.webUrl;\n  baseUrl = this.data.dotNetCoreUrl;\n  getUrl = this.baseUrl + '/api/webcontent/getActiveWebContent';\n  postUrl = this.baseUrl + '/api/webcontent';\n  putUrl = this.baseUrl + '/api/webcontent';\n  private _selectedContent: any;\n  selectedContent$!: Observable<any>;\n  standardNotice = 1;\n\n  public get selectedContent(): any {\n    return this._selectedContent;\n  }\n  public set selectedContent(value: any) {\n    this._selectedContent = value;\n    this.selectedContent$ = of(value);\n    console.log(value);\n  }\n  content$ = this.http.get<WebContent[]>(this.getUrl).pipe(\n    // tap(data => console.log('All: ' + JSON.stringify(data))),\n    shareReplay(1),\n    catchError(this.data.handleError('getContents', []))\n  );\n\n  constructor(\n    private http: HttpClient,\n    public data: DataService,\n    private store: Store<fromContent.State>\n  ) {}\n\n  getContents(): Observable<WebContent[]> {\n    return this.http.get<WebContent[]>(this.getUrl).pipe(\n      tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.data.handleError('getContents', []))\n    );\n  }\n  getActiveContents(): Observable<WebContent[]> {\n    let filteredContent: WebContent[] = [];\n\n    this.store.select(fromContent.getContentList).subscribe(contents => {\n      console.log(contents);\n      if (contents !== undefined) {\n        const today = moment();\n        // console.log(today);\n        for (let i = 0; i < contents.length; i++) {\n          // const expirationDate = moment(contents[i].expirationDate);\n          // if (expirationDate >= today) {\n            console.log(contents[i]);\n            filteredContent.push(contents[i]);\n          // }\n        }\n      }\n    });\n    console.log(filteredContent);\n    return of(filteredContent);\n  }\n  getAllContents(): Observable<WebContent[]> {\n    let filteredContent: WebContent[] = [];\n    this.store.select(fromContent.getContentList).subscribe(contents => {\n      if (contents !== undefined) {\n        for (let i = 0; i < contents.length; i++) {\n          filteredContent.push(contents[i]);\n        }\n      }\n    });\n    return of(filteredContent);\n  }\n\n  getContent(webContentId: number) {\n    console.log(webContentId);\n    if (webContentId === 0) {\n      return of(this.initializeContent());\n      // return Observable.create((observer: any) => {\n      //     observer.next(this.initializeProduct());\n      //     observer.complete();\n      // });\n    }\n    return this.http.get(this.getUrl).pipe(\n      // map(this.extractData),\n      tap(data => console.log('getContent: ' + JSON.stringify(data))),\n      catchError(this.data.handleError('getContent', []))\n    );\n  }\n\n  // deleteContent(webContentId: number): Observable<Response> {\n  //   let headers = new Headers({ 'Content-Type': 'application/json' });\n  //   // To Do: add this back\n  //   let options = { params: new HttpParams() };\n\n  //   const url = `${this.baseUrl}/${webContentId}`;\n  //   return this.http\n  //     .delete(url, options)\n  //     .pipe(\n  //       tap(data => console.log('deleteContent: ' + JSON.stringify(data))),\n  //       catchError(this.data.handleError('deleteContent', []))\n  //     );\n  // }\n\n  saveContent(contentForm: any) {\n    console.log(contentForm);\n    let content = new Content();\n    // content.webContentType = this.getWebContentType(\n    //   contentForm.webContentType.Web\n    // );\n    content.webContentType = contentForm.webContentTypeControl;\n    content.webContentId =\n      contentForm.webContentId === null ? 0 : contentForm.webContentId;\n    console.log(content);\n    content.title = contentForm.title;\n    content.subTitle = contentForm.subTitle;\n    content.body = contentForm.body;\n    content.dateAndTime = contentForm.dateAndTime;\n    content.location = contentForm.location;\n    content.expirationDate = contentForm.expirationDate;\n    // content.webContentId = contentForm.webContentId;\n    console.log(content);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = { headers: new HttpParams() };\n\n    if (contentForm.webContentId === null) {\n      return this.createContent(content, options.headers);\n    } else {\n      return this.updateContent(content, options.headers);\n    }\n  }\n\n  private createContent(content: Content, options: HttpParams) {\n    // content.webContentId = this.standardNotice;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    console.log(content);\n    return this.http\n      .post(this.postUrl, content, httpOptions)\n      .subscribe(x => {});\n    // return this.http\n    //   .post(this.baseUrl, content) // , options)\n    //   .pipe(\n    //     map(this.extractData),\n    //     tap(data => console.log('createContent: ' + JSON.stringify(data))),\n    //     catchError(this.data.handleError('postContent', []))\n    //   );\n  }\n\n  private updateContent(content: Content, options: HttpParams) {\n    // const url = `${this.baseUrl}/${content.webContentId}`;\n    console.log(this.putUrl);\n    // content.webContentTypeId = 1;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    console.log(content);\n    return this.http.put(this.postUrl, content, httpOptions).subscribe(x => {});\n    // .pipe(\n    //  //  map(() => content),\n    //   tap(data => console.log('updateContent: ' + JSON.stringify(data))),\n    //   catchError(this.data.handleError('updateContent', []))\n    // );\n  }\n\n  private extractData(response: Response) {\n    let body = ''; // response.json();\n    console.log(response);\n    // console.log(body);\n    return body || {};\n  }\n\n  initializeContent(): Content {\n    return {\n      webContentId: 0,\n      companyId: 1,\n      title: '',\n      subTitle: '',\n      body: '',\n      dateAndTime: '',\n      location: '',\n      expirationDate: new Date(),\n      webContentTypeId: 1,\n      contentSequence: 1,\n      webContentType: new WebContentType()\n    };\n  }\n  getWebContentType(id: number): WebContentType {\n    let webContentType = new WebContentType();\n    console.log(id);\n    switch (id) {\n      case 1: {\n        webContentType.webContentTypeId = id;\n        webContentType.webContentTypeDescription = 'Season Info';\n        break;\n      }\n      case 2: {\n        webContentType.webContentTypeId = id;\n        webContentType.webContentTypeDescription = 'Season Info';\n        break;\n      }\n      case 3: {\n        webContentType.webContentTypeId = id;\n        webContentType.webContentTypeDescription = 'Meeting Notice';\n        break;\n      }\n      default: {\n        webContentType.webContentTypeId = id;\n        webContentType.webContentTypeDescription = 'Season Info';\n      }\n    }\n    return webContentType;\n  }\n}\n","/* NgRx */\nimport { Action } from '@ngrx/store';\nimport { Content } from 'app/domain/content';\nimport { WebContentType } from 'app/domain/webContentType';\nimport { WebContent } from '../../../domain/webContent';\n\nexport enum ContentActionTypes {\n  Load = '[Content] Load',\n  LoadSuccess = '[Content] Load Success',\n  LoadFail = '[Content] Load Fail',\n  SetSelectedContent = '[Content] Set Selected Content',\n  SetAllContent = '[Content] Show all content',\n  SetAllContentSuccess = '[Content] Show all content success',\n  SetAllContentFail = '[Content] Show all content faile',\n  SetActiveContent = '[Content] Show only active content',\n  SetActiveContentSuccess = '[Content] Show only active content success',\n  SetActiveContentFail = '[Content] Show only active content fail',\n  SetIsActiveOnly = '[Content] Set Is Active Content Only',\n  LoadContentTypeList = '[Content] Load Content Type List',\n  LoadContentTypeListSuccess = '[Content] Load Content Type List Success',\n  LoadContentTypeListFail = '[Content] Load Content Type List Fail',\n}\n\nexport class Load implements Action {\n  readonly type = ContentActionTypes.Load;\n}\nexport class LoadSuccess implements Action {\n  readonly type = ContentActionTypes.LoadSuccess;\n  constructor(public payload: WebContent[]) {}\n}\nexport class LoadFail implements Action {\n  readonly type = ContentActionTypes.LoadFail;\n  constructor(public payload: string) {}\n}\n\nexport class SetAllContent implements Action {\n  readonly type = ContentActionTypes.SetAllContent;\n}\nexport class SetAllContentSuccess implements Action {\n  readonly type = ContentActionTypes.SetAllContentSuccess;\n  constructor(public payload: WebContent[]) {}\n}\nexport class SetAllContentFail implements Action {\n  readonly type = ContentActionTypes.SetAllContentFail;\n  constructor(public payload: String) {}\n}\n\nexport class SetActiveContent implements Action {\n  readonly type = ContentActionTypes.SetActiveContent;\n}\nexport class SetActiveContentSuccess implements Action {\n  readonly type = ContentActionTypes.SetActiveContentSuccess;\n  constructor(public payload: WebContent[]) {}\n}\nexport class SetActiveContentFail implements Action {\n  readonly type = ContentActionTypes.SetActiveContentFail;\n  constructor(public payload: String) {}\n}\n\nexport class SetSelectedContent implements Action {\n  readonly type = ContentActionTypes.SetSelectedContent;\n  constructor(public payload: Content) {}\n}\nexport class SetIsActiveOnly implements Action {\n  readonly type = ContentActionTypes.SetIsActiveOnly;\n  constructor(public payload: boolean) {}\n}\nexport class LoadContentTypeList implements Action {\n  readonly type = ContentActionTypes.LoadContentTypeList;\n}\nexport class LoadContentTypeListSuccess implements Action {\n  readonly type = ContentActionTypes.LoadContentTypeListSuccess;\n  constructor(public payload: WebContentType[]) {}\n}\nexport class LoadContentTypeListFail implements Action {\n  readonly type = ContentActionTypes.LoadContentTypeListFail;\n  constructor(public payload: string) {}\n}\n\nexport type ContentActions =\n  | Load\n  | LoadSuccess\n  | LoadFail\n  | SetSelectedContent\n  | SetAllContent\n  | SetAllContentSuccess\n  | SetAllContentFail\n  | SetActiveContent\n  | SetActiveContentSuccess\n  | SetActiveContentFail\n  | SetIsActiveOnly\n  | LoadContentTypeList\n  | LoadContentTypeListSuccess\n  | LoadContentTypeListFail","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport * as contentActions from './content.actions';\nimport * as fromContent from './';\nimport {\n  map,\n  switchMap,\n  mergeMap,\n  catchError,\n  tap,\n  mapTo,\n  withLatestFrom,\n  exhaustMap,\n  concatMap,\n  shareReplay\n} from 'rxjs/operators';\nimport { Store, Action, select } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { ContentService } from '../content.service';\nimport { WebContent } from '../../../domain/webContent';\n\n@Injectable()\nexport class ContentEffects {\n  index!: number;\n\n  constructor(\n    private actions$: Actions,\n    private contentService: ContentService,\n    private store: Store<fromContent.State>\n  ) {}\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadContent$: Observable<Action> = this.actions$.pipe(\n    ofType(contentActions.ContentActionTypes.Load),\n    mergeMap(action =>\n      this.contentService.content$.pipe(\n        map(content => new contentActions.LoadSuccess(content)),\n        tap(content => console.log(content)),\n        catchError(err => of(new contentActions.LoadFail(err)))\n      )\n    )\n  );\n\n  @Effect()\n  loadActiveContent$: Observable<Action> = this.actions$.pipe(\n    ofType(contentActions.ContentActionTypes.SetActiveContent),\n    switchMap(action =>\n      this.contentService.getActiveContents().pipe(\n        map(content => new contentActions.SetActiveContentSuccess(content)),\n        tap(response => console.log(response)),\n        catchError(err => of(new contentActions.SetActiveContentFail(err)))\n      )\n    )\n  );\n  @Effect()\n  loadAllContent$: Observable<Action> = this.actions$.pipe(\n    ofType(contentActions.ContentActionTypes.SetAllContent),\n    switchMap(action =>\n      this.contentService.getAllContents().pipe(\n        map(content => new contentActions.SetAllContentSuccess(content)),\n        tap(response => console.log(response)),\n        catchError(err => of(new contentActions.SetAllContentFail(err)))\n      )\n    )\n  );\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromRoot from '../../../state/app.state';\nimport {\n  ContentActions,\n  ContentActionTypes,\n  SetActiveContentSuccess\n} from './content.actions';\nimport { Content } from 'app/domain/content';\nimport { WebContentType } from 'app/domain/webContentType';\nimport { WebContent } from '../../../domain/webContent';\n\nexport interface ContentState {\n  currentContentId: number;\n  selectedContent: Content;\n  contentList: WebContent[];\n  isActiveOnly: boolean;\n  filteredList: WebContent[];\ncontentTypeList: WebContentType[];\n}\n\nconst initialState: ContentState = {\n  currentContentId: null,\n  selectedContent: null,\n  contentList: [],\n  isActiveOnly: true,\n  filteredList: [],\n  contentTypeList: []\n};\n\nexport function reducer(\n  state = initialState,\n  action: ContentActions\n): ContentState {\n  switch (action.type) {\n    case ContentActionTypes.SetSelectedContent:\n      return {\n        ...state,\n        selectedContent: action.payload\n      };\n    case ContentActionTypes.SetAllContentSuccess:\n      return {\n        ...state,\n        filteredList: action.payload\n      };\n    case ContentActionTypes.SetIsActiveOnly:\n      return {\n        ...state,\n        isActiveOnly: action.payload\n      };\n    case ContentActionTypes.LoadSuccess:\n      return {\n        ...state,\n        contentList: action.payload\n      };\n    case ContentActionTypes.SetActiveContentSuccess:\n      return {\n        ...state,\n        filteredList: action.payload\n      };\ncase ContentActionTypes.LoadContentTypeListSuccess:\n  return {\n    ...state,\n    contentTypeList: action.payload\n  };\n\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  createFeatureSelector,\n  createSelector,\n  ActionReducerMap\n} from '@ngrx/store';\nimport * as fromRoot from '@app/state/app.state';\nimport * as fromContent from './content.reducer';\n\nexport interface State extends fromRoot.State {\n  content: fromContent.ContentState;\n}\n\nconst getContentFeatureState = createFeatureSelector<fromContent.ContentState>(\n  'content'\n);\n\nexport const getCurrentContentId = createSelector(\n  getContentFeatureState,\n  state => state.currentContentId\n);\nexport const getSelectedContent = createSelector(\n  getContentFeatureState,\n  state => state.selectedContent\n);\nexport const getContentList = createSelector(\n  getContentFeatureState,\n  state => state.contentList\n);\nexport const getIsActiveOnly = createSelector(\n  getContentFeatureState,\n  state => state.isActiveOnly\n);\nexport const getfilteredList = createSelector(\n  getContentFeatureState,\n  state => state.filteredList\n);\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Content } from '../../domain/content';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromGames from '../../games/state';\nimport * as gameActions from './../../games/state/games.actions';\nimport { Observable } from 'rxjs';\nimport { Season } from 'app/domain/season';\nimport { Division } from 'app/domain/division';\nimport { TeamService } from '@app/services/team.service';\nimport { Team } from '@app/domain/team';\n@Component({\n  selector: 'csbc-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\n  currentSeason!: Season;\n  divisions!: Division[];\n  divisionCount!: number;\n  teams!: Team[];\n  teamCount!: number;\n  constructor(private store: Store<fromGames.State>, private teamService: TeamService) {}\n\n  ngOnInit() {\n    this.store.dispatch(new gameActions.LoadCurrentSeason());\n    this.setStateSubscriptions();\n    this.teamService.getTeams().subscribe(teams => {\n      this.teams = teams;\n      this.teamCount = teams.length;\n    });\n  }\n  setStateSubscriptions() {\n    this.store\n      .select(fromGames.getCurrentSeason)\n      .subscribe(season => {\n        (this.currentSeason = season as Season);\n        this.store.dispatch(new gameActions.LoadDivisions());\n      }\n        );\n    this.store\n      .select(fromGames.getDivisions)\n      .subscribe(divisions => {\n        (this.divisions = divisions);\n      this.divisionCount = divisions.length; });\n\n  }\n}\n","<!-- <div class=\"row\">\n  <div class=\"col-sm-3 col-xs-6 col-xss-12\">\n    <div class=\"card\" routerLink=\"/admin/season\">\n      <div class=\"heading\">Current Season</div>\n      <div class=\"body\" *ngIf=\"currentSeason\">\n        {{ currentSeason.description }}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-sm-3 col-xs-6 col-xss-12\">\n    <div class=\"card\" routerLink=\"/admin/division\">\n      <div class=\"heading\">Divisions</div>\n      <div *ngFor=\"let division of divisions\">\n        {{ division.div_Desc }}\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-3 col-xs-6 col-xss-12\">\n    <div class=\"card\" routerLink=\"/admin/player\">\n      <div class=\"heading\">Players</div>\n      <div class=\"body\">40</div>\n    </div>\n  </div>\n  <div> -->\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"start\" fxLayoutGap=\"10px\">\n  <div fxFlex>\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n        <mat-card-title>Current Season:</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"body\" *ngIf=\"currentSeason\">\n          {{ currentSeason.description }}\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <div fxFlex>\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n        <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\n        <mat-card-title>Divisions</mat-card-title>\n        <mat-card-subtitle class=\"heading\">No.: {{ divisionCount }}</mat-card-subtitle>\n\n    </mat-card-header>\n      <mat-card-content>\n        <mat-list role=\"list\">\n            <mat-list-item role=\"listitem\" *ngFor=\"let division of divisions\"> {{ division.divisionDescription }}</mat-list-item>\n          </mat-list>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <div>\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n        <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\n        <mat-card-title>Teams</mat-card-title>\n        <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle>-->\n      </mat-card-header>\n      <mat-card-content>\n        <!-- <div class=\"heading\">Current Season</div> -->\n        <div class=\"body\">\n          {{ teamCount }}\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n<!-- </div> -->\n<!-- </div> -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'csbc-director-edit',\n  templateUrl: './director-edit.component.html',\n  styleUrls: ['./director-edit.component.css']\n})\nexport class DirectorEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  director-edit works!\n</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'csbc-director-list',\n  templateUrl: './director-list.component.html',\n  styleUrls: ['./director-list.component.scss']\n})\nexport class DirectorListComponent implements OnInit {\n  _directors: any;\n  get directors() {\n    return this._directors;\n  }\n  @Input() set directors(directors: any[]) {\n    this._directors = directors;\n    this.datasource.data = directors;\n  }\n  datasource = new MatTableDataSource();\n  displayedColumns = ['name'];\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<p>\n  director-list works!\n</p>\n<div class=\"table-wrapper\">\n  <mat-table id=\"grdDirectors\" [dataSource]=\"datasource\" >\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let d\">\n        {{ d.name }}\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns;\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </mat-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DirectorService } from './../../director.service';\nimport { Director } from '../../../../domain/director';\n\n@Component({\n  selector: 'csbc-director-shell',\n  templateUrl: './director-shell.component.html',\n  styleUrls: ['./director-shell.component.css']\n})\nexport class DirectorShellComponent implements OnInit {\n  datasource!: Director[];\n  directors: any;\n  constructor(private directorService: DirectorService) {}\n\n  ngOnInit() {\n    this.directors = this.directorService.getDirectors();\n    console.log(this.directors);\n    this.datasource = this.directors;\n  }\n}\n","<csbc-director-list [directors]=\"datasource\">\n\n</csbc-director-list>\n<csbc-director-edit>\n\n</csbc-director-edit>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DirectorShellComponent } from './container/director-shell/director-shell.component';\n\nconst routes: Routes = [ {\n  path: '',\n  component: DirectorShellComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DirectorRoutingModule { }\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './state/director.reducer';\n\nimport { DirectorRoutingModule } from './director-routing.module';\nimport { DirectorShellComponent } from './container/director-shell/director-shell.component';\nimport { DirectorListComponent } from './component/director-list/director-list.component';\nimport { DirectorEditComponent } from './component/director-edit/director-edit.component';\nimport { EffectsModule } from '@ngrx/effects';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '../../core/core.module';\nimport { SharedModule } from '@app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    CoreModule,\n    DirectorRoutingModule,\n    StoreModule.forFeature('director', reducer)\n  ],\n  declarations: [\n    DirectorShellComponent,\n    DirectorListComponent,\n    DirectorEditComponent\n  ]\n})\nexport class DirectorModule {}\n","import { Injectable } from '@angular/core';\nimport { DataService } from 'app/services/data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Director } from '@app/domain/director';\n// import * as fromDirector from './state';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DirectorService {\n  url: string;\n  directors: Director[] | undefined;\n  handleError: ((err: any, caught: Observable<any[]>) => never) | undefined;\n\n  constructor(private dataService: DataService, private http: HttpClient\n    // , private store: Store<fromDirector.DirectorState>\n    ) {\n    this.url = this.dataService.directorUrl;\n  }\n\n  getDirectors(): Observable<Director[]> {\n    return this.http.get<Director[]>(this.url).pipe(\n        map(response => this.directors = response),\n        // tap(data => console.log('All: ' + JSON.stringify(data))),\n        catchError(this.dataService.handleError('getDirectors', []))\n      );\n  }\n}\n","import { Action } from '@ngrx/store';\n\nexport enum DirectorActionTypes {\n  Load = '[Director] Load',\n  LoadSuccess = '[Director] Load Success',\n}\n\nexport class Load implements Action {\n  readonly type = DirectorActionTypes.Load;\n}\nexport class LoadSuccess implements Action {\n    readonly type = DirectorActionTypes.LoadSuccess;\n    constructor(public payload: any[]) {\n        // console.log(seasons);\n    }\n  }\n  \nexport type DirectorActions = Load\n| LoadSuccess;\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DirectorActions, DirectorActionTypes } from './director.actions';\n// import { DirectorActions } from './director.actions';\n\nexport interface DirectorState {\n    currentDirectorId: number | null;\n    directors: any[];\n}\n\nconst initialState: DirectorState = {\n    currentDirectorId: null,\n    directors: []\n  };\nexport function reducer(\n    state = initialState,\n    action: DirectorActions\n  ): DirectorState {\n    switch (action.type) {\n        case DirectorActionTypes.LoadSuccess:\n          return {\n            ...state,\n            directors: action.payload\n          };\n        default: {\n          return state;\n        }\n    }\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n// import { CsbcSeasonSelectComponent } from '../../shared/season-select/csbc-season-select.component';\nimport { Season } from '../../domain/season';\nimport { SeasonService } from '../../services/season.service';\n\n@Component({\n  selector: 'csbc-division-master',\n  templateUrl: './division-master.component.html',\n  styleUrls: ['./division-master.component.css']\n})\nexport class DivisionMasterComponent implements OnInit {\n  selectedSeason!: Observable<Season>;\n   seasons!: Observable<Season[]>;\n  constructor(public seasonService: SeasonService) { }\n\n  ngOnInit() {\n    this.seasons = this.seasonService.getSeasons();\n    // this.selectedSeason = this.seasons[0];\n    console.log(this.selectedSeason);\n    if (this.selectedSeason !== undefined) {\n      this.seasonService.selectedSeason$.subscribe(\n           \n        () => console.log('Help'));\n    }\n  }\n  setSeason() {\n    // this.selectedSeason = season;\n    \n    this.selectedSeason = this.seasonService.selectedSeason$;\n    console.log(this.selectedSeason);\n    //this.seasonService.selectedSeason$.subscribe(\n           \n           \n  //          () => console.log('Help'));\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-sm-3 col-xs-12\">\n        <csbc-season-select (setSeason) = \"setSeason()\" ></csbc-season-select>\n    </div>\n</div>\n<div class=\"row\" style=\"padding-top:16px;\">\n    <div class=\"col-sm-5\">\n      <csbc-division-list  ></csbc-division-list>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { Season } from '../../domain/season';\nimport { Division } from '../../domain/division';\n\n@Component({\n    selector: 'csbc-division-detail',\n    templateUrl: './divisionDetail.component.html',\n    styleUrls: ['../admin.component.scss']\n})\n\nexport class DivisionDetailComponent implements OnInit {\n    @Input() division!: Division;\n    seasonForm: FormGroup;\n    divisionForm: FormGroup;\n\n    constructor(private fb: FormBuilder) {\n        this.seasonForm = this.fb.group({\n            // id: this.season.id,\n            name: this.division.divisionDescription,\n            maxDate: this.division.maxDate,\n            minDate: this.division.minDate,\n            seasonId: this.division.seasonId\n        });\n        this.divisionForm = this.fb.group({\n            name: this.division.divisionDescription,\n            maxDate: this.division.maxDate,\n            minDate: this.division.minDate,\n            seasonId: this.division.seasonId\n\n        });\n     }\n    ngOnInit(): void {\n        this.seasonForm = this.fb.group({\n            // id: this.season.id,\n            name: this.division.divisionDescription,\n            maxDate: this.division.maxDate,\n            minDate: this.division.minDate,\n            seasonId: this.division.seasonId\n        });\n    }\n\n    save() {\n    }\n}\n","<form class=\"form-horizontal\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"divisionForm\">\n    <fieldset>\n        \n        <div class=form-group [ngClass]=\"{'has-error': (divisionForm.get('name').touched || divisionForm.get('name').dirty) && !divisionForm.get('name').valid }\">\n            <label class=\"col-md-2 control-label\" for=\"name\">division</label>\n            <input id=\"name\" class=\"form-control\" type=\"text\" placeholder=\"division Name\" formControlName=\"name\"\n            />\n        </div>\n        <div class=form-group [ngClass]=\"{'has-error': (divisionForm.get('minDate').touched || divisionForm.get('minDate').dirty) && !divisionForm.get('minDate').valid }\">\n            <label class=\"col-md-2 control-label\" for=\"divisionForm.get('minDate')\">min Date</label>\n            <input id=\"divisionForm.get('minDate')\" class=\"form-control\" required type=\"text\" placeholder=\"min Date\" formControlName=\"minDate\"\n            />\n        </div>\n        <div class=form-group [ngClass]=\"{'has-error': (divisionForm.get('maxDate').touched || divisionForm.get('maxDate').dirty) && !divisionForm.get('minDate').valid }\">\n            <label class=\"col-md-2 control-label\" for=\"divisionForm.get('maxDate')\">max Date</label>\n            <input id=\"divisionForm.get('maxDate')\" class=\"form-control\" required type=\"text\" placeholder=\"max Date\" formControlName=\"maxDate\"\n            />\n        </div>\n       \n    </fieldset>\n</form>","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n// import { Observable } from 'rxjs/Observable';\n// import { Subscription } from 'rxjs/Subscription';\n\nimport { SeasonService } from '../../services/season.service';\nimport { DivisionService } from '../../services/division.service';\nimport { Division } from '../../domain/division';\nimport { Season } from '../../domain/season';\nimport { Store, select } from '@ngrx/store';\n// import { CsbcSeasonSelectComponent } from '../../shared/season-select/csbc-season-select.component';\nimport * as fromAdmin from '../state';\nimport * as adminActions from '../state/admin.actions';\n\nimport { LoadDivisions } from './../state/admin.actions';\nimport { Observable } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'csbc-division-list',\n  templateUrl: './divisionList.component.html',\n  styleUrls: ['../admin.component.scss'],\n  providers: [SeasonService]\n})\nexport class DivisionListComponent implements OnInit, OnChanges {\n  @Input() selectedSeason!: Season;\n  //  set selectedSeason(value: Season) {\n  //     console.log(value);\n  //     if (value !== undefined) {\n  //         //this.seasonService.selectedSeason$.subscribe(season =>\n  //         this._divisionService.getSeasonDivisions(value).subscribe(\n  //             (divisions) => this.divisions = divisions\n  //         );\n  //     }\n  //  }\n  // @Input() selectedSeason: Season;\n  divisions: Division[] | undefined;\n  // subscription: Subscription;\n  errorMessage: string | undefined;\n  selectedDivision: Division| undefined;\n  seasonId: number| undefined;\n  displayedColumns = [\n    'divisionId',\n    'divisionDescription',\n    'minDate',\n    'maxDate',\n    'actions',\n    'viewActions'\n  ];\n  dataSource: MatTableDataSource<Division>| undefined;\n  divisions$: Observable<Division[]>| undefined;\n  constructor(\n    private _divisionService: DivisionService,\n    public seasonService: SeasonService,\n    private store: Store<fromAdmin.State>\n  ) {\n    // this.store\n    //   .pipe(select(fromAdmin.getSeasonDivisions))\n    //   .subscribe(divisions => {\n    //     console.log(divisions);\n    //     this.dataSource = new MatTableDataSource(divisions);\n    //   });\n  }\n\n  ngOnInit() {\n    this.store\n      .pipe(select(fromAdmin.getCurrentSeasonId))\n      .subscribe(seasonId => {\n        this.seasonId = seasonId;\n        console.log(this.seasonId);\n        this._divisionService.getDivisions(seasonId as number).subscribe(divisions => {\n          this.divisions = divisions;\n          this.dataSource = new MatTableDataSource(divisions);\n\n          //turn this to effect or load into store\n          //this.store.dispatch(new adminActions.)\n        });\n      });\n  }\n  ngOnChanges(): void {\n    if (this.selectedSeason !== undefined) {\n      // this._divisionService.getSeasonDivisions(this.selectedSeason).subscribe(\n      //    (divisions) => this.divisions = divisions);\n      // this.seasonService.selectedSeason$.subscribe(\n    }\n  }\n\n  onSelectedSeason() {\n    // this.selectedSeason = season;\n    console.log('Help');\n    //    this.seasonService.selectedSeason$.subscribe(\n\n    //          () => console.log('Help'));\n  }\n  onSelect(division: Division): void {\n    this.selectedDivision = division;\n  }\n  setDivisionData(data: any[]): Division[] {\n    let divisions: Division[] = [];\n    console.log(data);\n    for (let i = 0; i <= data.length; i++) {\n      console.log(data[i]);\n      if (data[i] !== undefined) {\n        let division: Division = {\n          seasonId: data[i].seasonId,\n          divisionId: data[i].divisionId,\n          divisionDescription: data[i].divisionDescription,\n          minDate: data[i].minDate,\n          maxDate: data[i].maxDate\n        };\n        divisions.push(division);\n      }\n      console.log(divisions);\n    }\n    return divisions;\n  }\n  addDivision() {\n    console.log('Add Division');\n  }\n  viewTeams(division: any) {\n    console.log(division);\n  }\n  getRecord(division: any) {\n    console.log(division);\n  }\n}\n","<div class=\"table-wrapper\">\n  <mat-toolbar>\n      <mat-toolbar-row fxLayout=\"row\">\n        <div class=\"listHeader\">\n          Divisions\n        </div>\n        <span fxFlex></span>\n        <div fxFlex fxLayoutAlign=\"end\">\n          <button mat-raised-button (click)=\"addDivision()\">\n            New\n          </button>\n          <span fxFlex></span>\n        </div>\n      </mat-toolbar-row>\n  </mat-toolbar>\n  <table mat-table id=\"grd\" [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"divisionId\">\n      <th mat-header-cell *matHeaderCellDef>ID</th>\n      <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n        {{ game.divisionId }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"divisionDescription\">\n      <th mat-header-cell *matHeaderCellDef>Division</th>\n      <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n        {{ game.divisionDescription }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"minDate\">\n      <th mat-header-cell *matHeaderCellDef>Min Date</th>\n      <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n        {{ game.minDate | date: 'MM/dd/yyyy' }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"maxDate\">\n      <th mat-header-cell *matHeaderCellDef>Max Date</th>\n      <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n        {{ game.maxDate | date: 'MM/dd/yyyy' }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"viewActions\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let row\">\n        <button class=\"edit\" (click)=\"getRecord(row)\" mat-icon-button>\n          <mat-icon>edit</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let row\">\n        <button mat-button (click)=\"viewTeams(row)\">Teams</button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n\n<!-- <div class=\"col-sm-8\">\n    <div *ngIf=\"selectedDivision\">\n        <csbc-division-detail [division]=\"selectedDivision\"></csbc-division-detail>\n    </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'csbc-import-schedule',\n  templateUrl: './import-schedule.component.html',\n  styleUrls: ['./import-schedule.component.scss']\n})\nexport class ImportScheduleComponent implements OnInit {\n  importSteps: string[] = [\n    'Import mdb file (Access) Data from Scheduler program into SQL database', \n    'Import SchDiv to ScheduleDivTeams and SchGames to ScheduleGames', \n    'Get SeasonId', \n    'Update ScheduleGames with seasonId for game Dates', \n    'Update SchedulGames with divisions'];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  import-schedule works!\n</p>\n<mat-selection-list #shoes>\n  <!-- <mat-list-option *ngFor=\"let shoe of typesOfShoes\">\n    {{shoe}}\n  </mat-list-option> -->\n</mat-selection-list>\n\n<p>\n  Options selected: {{shoes.selectedOptions.selected.length}}\n</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    // moduleId: module.id,\n    selector: 'csbc-player-list',\n    templateUrl: './player-list.component.html',\n    styleUrls: ['./player.component.scss']\n})\nexport class PlayerListComponent implements OnInit {\n    constructor() { }\n\n    ngOnInit() { }\n}","<h2>Player list</h2>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'draft-info',\n  templateUrl: './draft-info.component.html',\n  styleUrls: ['./draft-info.component.css']\n})\nexport class DraftInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  draft-info works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'drafted-players',\n  templateUrl: './drafted-players.component.html',\n  styleUrls: ['./drafted-players.component.css']\n})\nexport class DraftedPlayersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  drafted-players works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.css']\n})\nexport class PaymentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  payments works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'player-info',\n  templateUrl: './player-info.component.html',\n  styleUrls: ['./player-info.component.css']\n})\nexport class PlayerInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  player-info works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'season-registrations',\n  templateUrl: './season-registrations.component.html',\n  styleUrls: ['./season-registrations.component.css']\n})\nexport class SeasonRegistrationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  season-registrations works!\n</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DraftedPlayersComponent } from './components/drafted-players/drafted-players.component';\nimport { PlayerInfoComponent } from './components/player-info/player-info.component';\nimport { DraftInfoComponent } from './components/draft-info/draft-info.component';\n\n\n@NgModule({\n  declarations: [    DraftedPlayersComponent,\n    PlayerInfoComponent,\n    DraftInfoComponent,\n],\n  imports: [\n    CommonModule\n  ]\n})\nexport class RegistrationsAndPaymentsModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { Season } from '../../domain/season';\n\n@Component({\n    selector: 'csbc-season-detail',\n    templateUrl: './seasonDetail.component.html'\n})\n\nexport class SeasonDetailComponent implements OnInit {\n    @Input() season: Season;\n    seasonForm: FormGroup;\n\n    constructor(private fb: FormBuilder) { }\n    \n    ngOnInit(): void {\n        this.seasonForm = this.fb.group({\n            // id: this.season.id,\n            name: this.season.description,\n            startDate: this.season.fromDate,\n            endDate: this.season.toDate,\n            currentSeason: false\n        });\n    }\n\n    save() {\n        \n    }\n}","<form class=\"form-horizontal\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"seasonForm\">\n    <fieldset>\n        <div class=form-group [ngClass]=\"{'has-error': (seasonForm.get('name').touched || seasonForm.get('name').dirty) && !seasonForm.get('name').valid }\">\n            <label class=\"col-md-2 control-label\" for=\"name\">Season</label>\n            <input id=\"name\" class=\"form-control\" type=\"text\" placeholder=\"Season Name\" formControlName=\"name\"\n            />\n        </div>\n        <div class=form-group [ngClass]=\"{'has-error': (seasonForm.get('startDate').touched || seasonForm.get('startDate').dirty) && !seasonForm.get('startDate').valid }\">\n            <label class=\"col-md-2 control-label\" for=\"seasonForm.get('startDate')\">Start Date</label>\n            <input id=\"seasonForm.get('startDate')\" class=\"form-control\" required type=\"text\" placeholder=\"Start Date\" formControlName=\"startDate\"\n            />\n        </div>\n        <div class=form-group [ngClass]=\"{'has-error': (seasonForm.get('endDate').touched || seasonForm.get('endDate').dirty) && !seasonForm.get('startDate').valid }\">\n            <label class=\"col-md-2 control-label\" for=\"seasonForm.get('endDate')\">End Date</label>\n            <input id=\"seasonForm.get('endDate')\" class=\"form-control\" required type=\"text\" placeholder=\"End Date\" formControlName=\"endDate\"\n            />\n        </div>\n        <div class=\"form-group\">\n            <div class=\"col-md-offset-1 col-md-8 checkbox\">\n                <label>\n                            <input id=\"currentSeason\"\n                                   type=\"checkbox\"\n                                   formControlName=\"currentSeason\" >\n                            Current Season\n                        </label>\n            </div>\n        </div>\n    </fieldset>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { Season } from '../../domain/season';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n    selector: 'csbc-season-list',\n    templateUrl: './seasonList.component.html',\n    styleUrls: [\n    '../admin.component.scss']\n})\nexport class SeasonListComponent implements OnInit {\n    seasons: Season[] | undefined;\n    errorMessage: string | undefined;\n    selectedSeason: Season | undefined;\n    displayedColumns = [\n        'description',\n      ];\n      canEdit = false;\n      dataSource: MatTableDataSource<Season> | undefined;\n    constructor(private _seasonService: SeasonService) { }\n\n    ngOnInit() {\n        this._seasonService.seasons$.subscribe(seasons => {\n                this.seasons = seasons as Season[];\n                this.dataSource = new MatTableDataSource(this.seasons);\n            });\n                // error => this.errorMessage = <any>error);\n    }\n\n    onSelect(season: Season): void {\n        this.selectedSeason = season;\n    }\n}\n","<div class=\"row\">\n    <div class=\"col-sm-4\">\n        <div id=\"panelSeason\" class=\"row\">\n            <div class=\"panel panel-primary\">\n                <div>\n                    <table id=\"grdSeason\" class=\"table  table-responsive table-condensed\">\n                        <thead>\n                            <tr>\n                                 <th>ID</th>\n                                <th>Season</th>\n                                <th>Start Date</th>\n                                <th>End Date</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let season of seasons\" (click)=\"onSelect(season)\">\n                                 <td>{{season.seasonId}}</td>\n                                <td>{{season.description}}</td>\n                                <td>{{season.fromDate | date:'MM/dd/yyyy'}}</td>\n                                <td>{{season.toDate | date:'MM/dd/yyyy'}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-sm-8\">\n        <div *ngIf=\"selectedSeason\">\n            <csbc-season-detail [season]=\"selectedSeason\"></csbc-season-detail>\n        </div>\n    </div>\n</div>\n<form formName=\"gameForm\">\n    <div id=\"panelSeasons\" flexLayout=\"row\">\n      <div>\n        <div class=\"table-wrapper\">\n          <table mat-table id=\"grdSeasons\" [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"description\">\n              <th mat-header-cell *matHeaderCellDef>season</th>\n              <td mat-cell *matCellDef=\"let game\" class=\"date\">\n                {{ game.gameDate | date: 'M/d' }}\n              </td>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\" *ngIf=\"canEdit\">\n              <th mat-header-cell *matHeaderCellDef>Actions</th>\n              <td mat-cell *matCellDef=\"let game\">\n                <button class=\"edit\" *ngIf=\"canEdit\" mat-icon-button><mat-icon>edit</mat-icon></button>\n              </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" ></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'current-season-sponsors',\n  templateUrl: './current-season-sponsors.component.html',\n  styleUrls: ['./current-season-sponsors.component.css']\n})\nexport class CurrentSeasonSponsorsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  current-season-sponsors works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sponsor-info',\n  templateUrl: './sponsor-info.component.html',\n  styleUrls: ['./sponsor-info.component.css']\n})\nexport class SponsorInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  sponsor-info works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sponsor-list',\n  templateUrl: './sponsor-list.component.html',\n  styleUrls: ['./sponsor-list.component.css']\n})\nexport class SponsorListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  sponsor-list works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sponsor-shell',\n  templateUrl: './sponsor-shell.component.html',\n  styleUrls: ['./sponsor-shell.component.css']\n})\nexport class SponsorShellComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  sponsor-shell works!\n</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SponsorShellComponent } from './containers/sponsor-shell/sponsor-shell.component';\nimport { SponsorListComponent } from './components/sponsor-list/sponsor-list.component';\nimport { SponsorInfoComponent } from './components/sponsor-info/sponsor-info.component';\nimport { CurrentSeasonSponsorsComponent } from './components/current-season-sponsors/current-season-sponsors.component';\n\n@NgModule({\n  declarations: [SponsorShellComponent, SponsorListComponent, SponsorInfoComponent, CurrentSeasonSponsorsComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SponsorsModule { }\n","/* NgRx */\nimport { Action } from '@ngrx/store';\nimport { Division } from '@app/domain/division';\nimport { Team } from '@app/domain/team';\nimport { Season } from '@app/domain/season';\nimport { Game } from '@app/domain/game';\n\nexport enum AdminActionTypes {\n  LoadCurrentSeason = '[Admin] Load Current Season',\n  SetCurrentSeason = '[Admin] Set Current Season',\n  LoadGames = '[Admin] Load Games',\n  LoadGamesSuccess = '[Admin] Load Games Success',\n  LoadGamesFail = '[Admin] Load GamesFail',\n  LoadSeasons = '[Admin] Load Seasons',\n  LoadSeasonsSuccess = '[Admin] Load Seasons Success',\n  LoadSeasonsFail = '[Admin] Load Seasons Fail',\n  GetCurrentSeason = '[Admin] Get Current Season',\n  SetSelectedSeason = '[Admin] Set Selected Season',\n  SetSelectedSeasonId = '[Admin] Set Selected Season ID',\n  LoadDivisions = '[Admin] Load All Season Divisions',\n  LoadDivisionsSuccess = '[Admin API] Load Divisions Success',\n  LoadDivisionsFail = '[Admin API] Load Divisions File',\n  SetSelectedDivision = '[Admin] Set Selected Division',\n  LoadTeams = '[Admin] Load All Season Divisions',\n  LoadTeamsSuccess = '[Admin API] Load Divisions Success',\n  LoadTeamsFail = '[Admin API] Load Teams File',\n  SetSelectedTeam = '[Admin] Set Selected Division'\n}\nexport class LoadCurrentSeason implements Action {\n  readonly type = AdminActionTypes.LoadCurrentSeason;\n}\nexport class LoadGames implements Action {\n  readonly type = AdminActionTypes.LoadGames;\n}\nexport class LoadGamesSuccess implements Action {\n  readonly type = AdminActionTypes.LoadGamesSuccess;\n  constructor(public payload: Game[]) {}\n}\n\nexport class LoadGamesFail implements Action {\n  readonly type = AdminActionTypes.LoadGamesFail;\n  constructor(public payload: string) {}\n}\nexport class LoadSeasons implements Action {\n  readonly type = AdminActionTypes.LoadSeasons;\n}\nexport class LoadSeasonsSuccess implements Action {\n  readonly type = AdminActionTypes.LoadSeasonsSuccess;\n  constructor(public payload: Season[]) {}\n}\n\nexport class LoadSeasonsFail implements Action {\n  readonly type = AdminActionTypes.LoadSeasonsFail;\n  constructor(public payload: string) {}\n}\nexport class GetCurrentSeason implements Action {\n  readonly type = AdminActionTypes.GetCurrentSeason;\n  constructor(public payload: Season) {}\n}\nexport class SetSelectedSeason implements Action {\n  readonly type = AdminActionTypes.SetSelectedSeason;\n  constructor(public payload: Season) {\n    // currentS\n  }\n}\nexport class SetCurrentSeason implements Action {\n  readonly type = AdminActionTypes.SetCurrentSeason;\n  constructor(public payload: Season) {\n    // console.log(payload);\n  }\n}\nexport class SetSelectedSeasonId implements Action {\n  readonly type = AdminActionTypes.SetSelectedSeasonId;\n  constructor(public payload: number) {\n    // currentS\n  }\n}\n\nexport class LoadDivisions implements Action {\n  readonly type = AdminActionTypes.LoadDivisions;\n}\nexport class LoadDivisionsSuccess implements Action {\n  readonly type = AdminActionTypes.LoadDivisionsSuccess;\n  constructor(public payload: Division[]) {\n    console.log(payload);\n  }\n}\n\nexport class LoadDivisionsFail implements Action {\n  readonly type = AdminActionTypes.LoadDivisionsFail;\n  constructor(public payload: string) {}\n}\nexport class SetSelectedDivision implements Action {\n  readonly type = AdminActionTypes.SetSelectedDivision;\n  constructor(public payload: Division) {}\n}\nexport class LoadTeams implements Action {\n  readonly type = AdminActionTypes.LoadTeams;\n}\nexport class LoadTeamsSuccess implements Action {\n  readonly type = AdminActionTypes.LoadTeamsSuccess;\n  constructor(public payload: Division[]) {\n    console.log(payload);\n  }\n}\n\nexport class LoadTeamsFail implements Action {\n  readonly type = AdminActionTypes.LoadTeamsFail;\n  constructor(public payload: string) {}\n}\nexport class SetSelectedTeam implements Action {\n  readonly type = AdminActionTypes.SetSelectedTeam;\n  constructor(public payload: Team) {}\n}\n\nexport type AdminActions =\n  | LoadCurrentSeason\n  | SetCurrentSeason\n  | LoadGames\n  | LoadGamesSuccess\n  | LoadGamesFail\n  | LoadSeasons\n  | LoadSeasonsSuccess\n  | LoadSeasonsFail\n  | GetCurrentSeason\n  | SetSelectedSeason\n  | SetSelectedSeasonId\n  | LoadDivisions\n  | LoadDivisionsSuccess\n  | LoadDivisionsFail\n  | SetSelectedDivision\n  | LoadTeams\n  | LoadTeamsSuccess\n  | LoadTeamsFail\n  | SetSelectedTeam;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport * as adminActions from './admin.actions';\n// import * as fromGames from './state';\nimport {\n  map,\n  switchMap,\n  mergeMap,\n  catchError,\n  concatMap,\n  withLatestFrom,\n  tap,\n  shareReplay\n} from 'rxjs/operators';\nimport { Store, Action, select } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { SeasonService } from 'app/services/season.service';\nimport { DivisionService } from 'app/services/division.service';\n// import { GameService } from '../game.service';\nimport * as fromAdmin from './';\nimport { Game } from 'app/domain/game';\nimport { HttpClient } from '@angular/common/http';\nimport { GameService } from 'app/games/game.service';\nimport { TeamService } from 'app/services/team.service';\nimport { DataService } from 'app/services/data.service';\nimport { Division } from 'app/domain/division';\n\n@Injectable()\nexport class AdminEffects {\n  seasonId: number;\n  gameUrl: string;\n  divisionStartUrl: string;\n  constructor(\n    private actions$: Actions,\n    private seasonService: SeasonService,\n    private divisionService: DivisionService,\n    private http: HttpClient,\n    private gameService: GameService,\n    private teamService: TeamService,\n    private dataService: DataService,\n    private store: Store<fromAdmin.State>\n  ) {}\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadSeasons$: Observable<Action> = this.actions$.pipe(\n    ofType(adminActions.AdminActionTypes.LoadSeasons),\n    mergeMap(action =>\n      this.seasonService.seasons$.pipe(\n        map(seasons => new adminActions.LoadSeasonsSuccess(seasons)),\n        catchError(err => of(new adminActions.LoadSeasonsFail(err)))\n      )\n    )\n  );\n\n    // tslint:disable-next-line:member-ordering\n    @Effect()\n    loadDivisions$: Observable<Action> = this.actions$.pipe(\n      ofType(adminActions.AdminActionTypes.LoadDivisions),\n      concatMap(action =>\n        of(action).pipe(\n          withLatestFrom(this.store.pipe(select(fromAdmin.getCurrentSeason))),\n          tap(divisions => console.log(divisions))\n        )\n      ),\n      tap(([action, t]) => {\n        if (t) {\n          this.seasonId = t.seasonId;\n        } else {\n          this.seasonId = 0;\n        }\n      }),\n      mergeMap(action =>\n        this.http.get<Division[]>(this.divisionStartUrl + this.seasonId).pipe(\n          // tap(data => console.log('All games: ' + JSON.stringify(data))),\n          shareReplay(1),\n          map(divisions => new adminActions.LoadDivisionsSuccess(divisions)),\n          tap(divisions => console.log(divisions)),\n          catchError(err => of(new adminActions.LoadDivisionsFail(err)))\n        )\n      )\n    );\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadGames$: Observable<Action> = this.actions$.pipe(\n    ofType(adminActions.AdminActionTypes.LoadGames),\n    concatMap(action =>\n      of(action).pipe(\n        withLatestFrom(this.store.pipe(select(fromAdmin.getCurrentSeason))),\n        tap(divisions => console.log(divisions))\n      )\n    ),\n    tap(([action, t]) => {\n      if (t) {\n        this.seasonId = t.seasonId;\n      } else {\n        this.seasonId = 0;\n      }\n    }),\n\n    mergeMap(action =>\n      this.http.get<Game[]>(this.gameUrl + this.seasonId).pipe(\n        // tap(data => console.log('All games: ' + JSON.stringify(data))),\n        shareReplay(1),\n        map(games => new adminActions.LoadGamesSuccess(games)),\n        tap(games => console.log(games)),\n        catchError(err => of(new adminActions.LoadGamesFail(err)))\n      )\n    )\n  );\n    // tslint:disable-next-line:member-ordering\n    @Effect()\n    setCurrentSeason$: Observable<Action> = this.actions$.pipe(\n      ofType(adminActions.AdminActionTypes.LoadCurrentSeason),\n      mergeMap(action =>\n        this.seasonService.currentSeason$.pipe(\n          map(season => new adminActions.SetCurrentSeason(season)),\n          tap(data => console.log(data)),\n          catchError(err => of(new adminActions.LoadDivisionsFail(err)))\n        )\n      )\n    );\n\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { AdminActions, AdminActionTypes } from './admin.actions';\nimport * as fromRoot from '../../state/app.state';\nimport { Season } from 'app/domain/season';\nimport { Division } from 'app/domain/division';\n\nexport interface AdminState {\n  currentSeasonId: number | undefined;\n  currentDivisionId: number | undefined;\n  currentTeamId: number | null;\n  seasons: Season[];\n  currentSeason: Season;\n  divisions: Division[];\n}\n\nconst initialState: AdminState = {\n  currentSeason: new Season(),\n  currentSeasonId: 2193,\n  currentDivisionId: undefined,\n  currentTeamId: null,\n  seasons: [],\n  divisions: []\n};\n\nexport function reducer(\n  state = initialState,\n  action: AdminActions\n): AdminState {\n  switch (action.type) {\n    case AdminActionTypes.LoadSeasonsSuccess:\n      return {\n        ...state,\n        seasons: action.payload\n      };\n    case AdminActionTypes.LoadDivisionsSuccess:\n      return {\n        ...state,\n        divisions: action.payload\n      };\n    case AdminActionTypes.SetCurrentSeason:\n      return {\n        ...state,\n        currentSeason: action.payload\n      };\n    case AdminActionTypes.SetSelectedSeason:\n      return {\n        ...state,\n        currentSeason: action.payload\n      };\n    case AdminActionTypes.SetSelectedSeasonId:\n      return {\n        ...state,\n        currentSeasonId: action.payload\n      };\n\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  createFeatureSelector,\n  createSelector,\n  ActionReducerMap\n} from '@ngrx/store';\nimport * as fromRoot from '@app/state/app.state';\nimport * as fromAdmin from './admin.reducer';\n\nexport interface State extends fromRoot.State {\n  admin: fromAdmin.AdminState;\n}\n\nconst getAdminFeatureState = createFeatureSelector<fromAdmin.AdminState>(\n  'admin'\n);\n\nexport const getCurrentSeasonId = createSelector(\n  getAdminFeatureState,\n  state => state.currentSeasonId\n);\nexport const getCurrentSeason = createSelector(\n  getAdminFeatureState,\n  state => state.currentSeason\n);\nexport const getCurrentDivisionId = createSelector(\n  getAdminFeatureState,\n  state => state.currentDivisionId\n);\nexport const getCurrentTeamId = createSelector(\n  getAdminFeatureState,\n  state => state.currentTeamId\n);\nexport const getSeasons = createSelector(\n  getAdminFeatureState,\n  state => state.seasons\n);\nexport const getSeasonDivisions = createSelector(\n  getAdminFeatureState,\n  state => state.divisions\n);\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\nimport { Team } from '../../domain/team';\n\n@Component({\n    selector: 'csbc-team-list',\n    templateUrl: './teamList.component.html',\n    styleUrls: ['./team.component.scss', '../admin.component.scss']\n\n})\nexport class TeamListComponent implements OnInit {\n    @Input() teams: Team[] | undefined;\n    errorMessage: string | undefined;\n    selectedTeam: Team | undefined;\n\n    constructor(private _teamService: TeamService) { }\n\n    ngOnInit() {\n         this._teamService.getTeams()\n            .subscribe((divisions: any[]) => this.teams = this.setTeamData(divisions),\n              (            error: any) => this.errorMessage = <any>error);\n    }\n\n    onSelect(team: Team): void {\n        this.selectedTeam = team;\n    }\n    setTeamData(data: any[]): Team[] {\n    let teams: Team[] = [];\n    for (let i = 0; i <= data.length; i++) {\n      if (data[i] !== undefined) {\n        let team: Team = new Team();\n        team.teamId = data[i].teamID;\n        team.name = data[i].teamNumber;\n        team.teamColorId = data[i].colorID;\n        teams.push(team);\n      }\n    }\n    return teams;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-sm-8\">\n        <div id=\"panelSeason\" class=\"row\">\n            <div class=\"panel panel-primary\">\n                <div>\n                    <table id=\"grdSeason\" class=\"table table-condensed\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Team Name</th>\n                                <th>Color</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let team of teams\" (click)=\"onSelect(team)\">\n                                <td>{{team.teamId}}</td>\n                                <td>{{team.name}}</td>\n                                <td>{{team.teamColorId}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!--<div class=\"col-sm-8\">\n        <div *ngIf=\"selectedDivision\">\n            <csbc-season-detail [season]=\"selectedDivision\"></csbc-season-detail>\n        </div>\n    </div>-->\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CsbcPhotosComponent } from './photos/csbc-photos.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { CsbcClubDocsComponent } from './club-docs/csbc-club-docs.component';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './app.not-found.component';\nimport { CsbcDashboardComponent } from './csbc-dashboard/csbc-dashboard.component';\nimport { GamesResolver } from './games/games.resolver';\n\nconst appRoutes: Routes = [\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'games',\n    loadChildren: () =>\n      import('./games/games.module').then(mod => mod.GamesModule),\n      resolve: {state: GamesResolver}\n  },\n  {\n    path: 'photos',\n    component: CsbcPhotosComponent\n  },\n  {\n    path: 'contacts',\n    component: ContactsComponent\n  },\n  {\n    path: 'clubDocs',\n    component: CsbcClubDocsComponent\n  },\n\n  {\n    path: 'admin',\n    loadChildren: () =>\n      import('./admin/admin.module').then(mod => mod.AdminModule)\n  },\n  {\n    path: 'dashboard',\n    component: CsbcDashboardComponent\n  },\n\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    '../../node_modules/font-awesome/css/font-awesome.css',\n    './app.component.scss'\n  ]\n})\nexport class AppComponent implements OnInit {\n  @Output() public sidenavToggle = new EventEmitter();\n\n  constructor(private router: Router) {}\n  ngOnInit() {\n      this.router.navigate([''])\n  }\n  public onToggleSidenav = () => {\n    this.sidenavToggle.emit();\n  };\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sidenav role=\"navigation\" (click)=\"sidenav.close()\">\n    <csbc-sidenav-list (sidenavClose)=\"sidenav.close()\"></csbc-sidenav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content fxFlexFill>\n    <csbc-top-nav (sidenavToggle)=\"sidenav.toggle()\"></csbc-top-nav>\n    <div class=\"container-fluid\">\n      <!-- <div class=\"row\"> -->\n        <router-outlet></router-outlet>\n      <!-- </div> -->\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport './rxjs-extensions';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from './core/core.module';\nimport { AppRoutingModule } from './app-routing.module';\n\n/* ngrx */\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { AppEffects } from './state/app.effects';\n\nimport { AppComponent } from './app.component';\nimport { HomeModule } from './home/home.module';\nimport { GamesModule } from './games/games.module';\nimport { CsbcClubDocsModule } from './club-docs/csbc-club-docs.module';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\n\n// import { CsbcGamesComponent} from './csbc-games/csbc-games.component';\nimport { TopNavComponent } from './shared/top-nav/top-nav.component';\nimport { CsbcPhotosComponent } from './photos/csbc-photos.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { AdminModule } from './admin/admin.module';\nimport { ComposeMessageComponent } from './compose-message.component';\n\nimport { SeasonService } from './services/season.service';\nimport { DivisionService } from './services/division.service';\nimport { TeamService } from './services/team.service';\nimport { GameService } from './services/game.service';\nimport { DataService } from './services/data.service';\n// import { PageNotFoundComponent } from './app.not-found.component';\nimport { GamesPipe } from './games.pipe';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { CsbcDashboardComponent } from './csbc-dashboard/csbc-dashboard.component';\n\nimport { reducers, metaReducers } from './reducers';\nimport { environment } from '../environments/environment';\nimport { LoginDialogComponent } from './shared/login-dialog/login-dialog.component';\nimport { SharedModule } from './shared/shared.module';\nimport { UserModule } from './user/user.module';\nimport { SidenavListComponent } from './shared/sidenav-list/sidenav-list.component';\nimport { SponsorsModule } from './admin/sponsors/sponsors.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopNavComponent,\n    SidenavListComponent,\n    CsbcPhotosComponent,\n    ContactsComponent,\n    LoginComponent,\n    ComposeMessageComponent,\n    GamesPipe,\n    CsbcDashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    HttpClientModule,\n    HomeModule,\n    GamesModule,\n    CsbcClubDocsModule,\n    SharedModule,\n    AdminModule,\n    LoginRoutingModule,\n    LayoutModule,\n    UserModule,\n    SponsorsModule,\n    UserModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    // StoreModule.forRoot({}),\n    StoreDevtoolsModule.instrument({\n      name: 'CSBC Site',\n      maxAge: 25,\n      logOnly: environment.production\n    }),\n    // StoreModule.forRoot(reducers, { metaReducers }),\n    EffectsModule.forRoot([]),\n    StoreModule.forRoot({}, {}),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n\n  ],\n\n  providers: [\n    SeasonService,\n    DivisionService,\n    TeamService,\n    // GameService,\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  template: '<h2>Page not found</h2>'\n})\nexport class PageNotFoundComponent {}","import { Injectable } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/delay';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n  isLoggedIn: boolean = false;\n\n  // store the URL so we can redirect after logging in\n  redirectUrl: string | undefined;\n\n  login(): Observable<boolean> {\n    return of(true).pipe(tap(val => this.isLoggedIn = true));\n  }\n\n  logout(): void {\n    this.isLoggedIn = false;\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  CanLoad,\n  Route,\n  UrlSegment,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanLoad {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    console.log('AuthGuard#canActivate called');\n    return true;\n  }\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-csbc-club-docs',\n  templateUrl: './csbc-club-docs.component.html',\n  styleUrls: ['./csbc-club-docs.component.css']\n})\nexport class CsbcClubDocsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<section>\n\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <div class=\"panel panel-primary\">\n                <div class=\" panel-heading\">\n                    <div class=\"panel-title\">Documents and Links</div>\n                </div>\n                <!--<div class=\"panel-body\">-->\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item\"> <a href=\"../docs/RegistrationForm.pdf\" id=\"lnkReg\" target=\"_blank\">Registration Form</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/SponsorForm.pdf\" id=\"lnkSponsor\" target=\"_blank\">Sponsor Form</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/TieBreaker.pdf\" id=\"Lnk2\" target=\"_blank\">Tie Break Instructions</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/ADScores.pdf\" id=\"Lnk3\" target=\"_blank\">AD Scores / Website Instructions</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/Scorebook.pdf\" id=\"Lnk4\" target=\"_blank\">Keeping the Scorebook</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/CourtsLocations.pdf\" id=\"Lnk5\" target=\"_blank\">Directions to the Courts</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/Scholarship.pdf\" id=\"Lnk6\" target=\"_blank\">Jon Miller, Scholarship</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/Maxey.pdf\" id=\"Lnk76\" target=\"_blank\">Sean Maxey, Scholarship</a></li>\n                </ul>\n                <!-- /div> -->\n            </div>\n        </div>\n        <div class=\"col-sm-3\">\n            <div class=\"panel panel-primary\">\n                <div class=\" panel-heading\">\n                    <div class=\"panel-title\">Girl's Divisions Rules</div>\n                </div>\n                <!--<div class=\"panel-body\">-->\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item\"><a href=\"docs/tg.pdf\" id=\"Lnk6\" target=\"_blank\">Trainee Girls</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/ig.pdf\" id=\"Lnk6\" target=\"_blank\">Int Girls</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/jvg.pdf\" id=\"Lnk6\" target=\"_blank\">JV Girls</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/vg.pdf\" id=\"Lnk6\" target=\"_blank\">Varsity Girls</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/hsg.pdf\" id=\"Lnk6\" target=\"_blank\">HS Girls</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/women.pdf\" id=\"Lnk6\" target=\"_blank\">Women</a></li>\n\n\n                </ul>\n            </div>\n        </div>\n        <div class=\"col-sm-3\">\n            <div class=\"panel panel-primary\">\n                <div class=\" panel-heading\">\n                    <div class=\"panel-title\">Boy's Divisions Rules</div>\n                </div>\n                <!--<div class=\"panel-body\">-->\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item\"><a href=\"docs/t1.pdf\" id=\"Lnk6\" target=\"_blank\">Traineee 1</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/t2.pdf\" id=\"Lnk6\" target=\"_blank\">Traineee 2</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/t3.pdf\" id=\"Lnk6\" target=\"_blank\">Traineee 3</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/t4.pdf\" id=\"Lnk6\" target=\"_blank\">Traineee 4</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/ib.pdf\" id=\"Lnk6\" target=\"_blank\">Int Boys</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/jvb.pdf\" id=\"Lnk6\" target=\"_blank\">JV Boys</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/vb.pdf\" id=\"Lnk6\" target=\"_blank\">Varsity Boys</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/hsb.pdf\" id=\"Lnk6\" target=\"_blank\">HS Boys</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/men18.pdf\" id=\"Lnk6\" target=\"_blank\">Men 18+</a></li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"col-sm-3\">\n            <div class=\"panel panel-primary\">\n                <div class=\" panel-heading\">\n                    <div class=\"panel-title\">Game Rules</div>\n                </div>\n\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item\"><a href=\"docs/GeneralRules.pdf\" id=\"Lnk6\" target=\"_blank\">General Rules</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/ParkRules.pdf\" id=\"Lnk6\" target=\"_blank\">Park Rules</a></li>\n                    <li class=\"list-group-item\"><a href=\"docs/Clockrules.pdf\" id=\"Lnk6\" target=\"_blank\">Clock Rules</a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n</section>","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { CsbcClubDocsComponent } from './csbc-club-docs.component';\n\n@NgModule({\n  imports: [\n    SharedModule\n  ],\n  declarations: [\n    CsbcClubDocsComponent\n  ]\n})\nexport class CsbcClubDocsModule { }\n","<h3>Contact Crisis Center</h3>\n<div *ngIf=\"details\">\n  {{ details }}\n</div>\n<div>\n  <div>\n    <label>Message: </label>\n  </div>\n  <!--<div>\n    <textarea [(ngModel)]=\"message\" rows=\"10\" cols=\"35\" [disabled]=\"sending\"></textarea>\n  </div>-->\n</div>\n<p *ngIf=\"!sending\">\n  <button (click)=\"send()\">Send</button>\n  <button (click)=\"cancel()\">Cancel</button>\n</p>","import { Component, HostBinding } from '@angular/core';\nimport { Router }                 from '@angular/router';\n\n// import { slideInDownAnimation }   from './animations';\n\n@Component({\n  // moduleId: module.id,\n  templateUrl: './compose-message.component.html',\n  styles: [ ':host { position: relative; bottom: 10%; }' ]\n  // animations: [ slideInDownAnimation ]\n})\nexport class ComposeMessageComponent {\n  @HostBinding('@routeAnimation') routeAnimation = true;\n  @HostBinding('style.display')   display = 'block';\n  @HostBinding('style.position')  position = 'absolute';\n\n  details: string;\n  sending: boolean = false;\n\n  constructor(private router: Router) {}\n\n  send() {\n    this.sending = true;\n    this.details = 'Sending Message...';\n\n    setTimeout(() => {\n      this.sending = false;\n      this.closePopup();\n    }, 1000);\n  }\n\n  cancel() {\n    this.closePopup();\n  }\n\n  closePopup() {\n    // Providing a `null` value to the named outlet\n    // clears the contents of the named outlet\n    this.router.navigate([{ outlets: { popup: null }}]);\n  }\n}\n","<div class=\"row PageTop\">\n    <div class=\"col-sm-10 col-sm-offset-1 col-xs-12\">\n        <div class=\"panel panel-default\" >\n            <div class=\"panel-heading\">\n                <div class=\"panel-title\">{{title}}</div>\n            </div>\n            <div class=\"panel-body\">\n                <table class=\"table table-hover table-responsive table-condensed\">\n\n                    <tr *ngFor = \"let contact of directorList$ | async\">\n                        <td >{{contact.title | titlecase }}</td>\n                        <td >{{contact.firstName + \" \" + contact.lastName | titlecase }}</td>\n                        <td >{{contact.cellPhone}}</td>\n                        <td >{{contact.email}}</td>\n                    </tr>\n\n                </table>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { getDirectors } from 'app/admin/director/state/indext';\nimport { DirectorService } from 'app/admin/director/director.service';\n\n@Component({\n  selector: 'csbc-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.scss', '../home/home.component.scss'],\n})\nexport class ContactsComponent implements OnInit {\n  title: string;\n  directorList$: any;\n  constructor(private directorService: DirectorService) {\n    this.title = 'Contacts';\n  }\n\n  ngOnInit() {\n    this.directorList$ = this.directorService.getDirectors();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from './material/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n@NgModule({\n  imports: [CommonModule, MaterialModule, FlexLayoutModule],\n  exports: [MaterialModule, FlexLayoutModule, FormsModule, ReactiveFormsModule],\n  declarations: []\n})\nexport class CoreModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort'\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n// import { MatNativeDateModule } from '@angular/material';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    // MatButtonToggleModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatSortModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatMenuModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatCheckboxModule, MatProgressSpinnerModule, MatButtonToggleModule, MatTooltipModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatSortModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    // MatNativeDateModule,\n    MatDatepickerModule,\n    MatMenuModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatDialogModule, MatTooltipModule\n  ],\n  declarations: []\n})\n\nexport class MaterialModule { }\n","import { Component } from '@angular/core';\nimport { ContactsComponent } from '../contacts/contacts.component';\n\n@Component({\n  selector: 'csbc-dashboard',\n  templateUrl: './csbc-dashboard.component.html',\n  styleUrls: ['./csbc-dashboard.component.css']\n})\nexport class CsbcDashboardComponent {\n  cards = [\n    { title: 'Card 1', cols: 2, rows: 1, content: ContactsComponent },\n    { title: 'Test of another card', cols: 1, rows: 1, content: 'Content 4' },\n    { title: 'Card 3', cols: 1, rows: 2, content: 'Content 3' },\n    { title: 'Card 4', cols: 1, rows: 1, content: 'Content 4' }\n  ];\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Dashboard</h1>\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let card of cards\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n              <button mat-menu-item>Remove</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div>{{card.content}}</div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>","\n// export interface IContent {\n//     webContentId: number;\n//     title: string;\n//     subTitle: string;\n//     body: string;\n//     location: string;\n//     dateAndTime: string;\n//     webContentTypeId: number;\n\nimport { WebContentType } from './webContentType';\n\n// }\n\nexport class Content {\n    public webContentId!: number;\n    public companyId!: number;\n    public title!: string;\n    public subTitle!: string;\n    public body!: string | null;\n    public location!: string;\n    public dateAndTime!: string;\n    public expirationDate!: Date;\n    public webContentTypeId!: number;\n    public contentSequence!: number;\n    public webContentType!: WebContentType;\n    constructor() {\n    }\n}\n","export interface IDivision {\n  seasonId: number;\n  divisionId: number;\n  divisionDescription: string;\n  // div_Desc: string;\n  minDate: Date;\n  maxDate: Date;\n}\n\nexport class Division implements IDivision {\n  constructor(\n    public seasonId: number,\n    public divisionId: number,\n    // public divisionName: string,\n    public divisionDescription: string,\n    public minDate: Date,\n    public maxDate: Date\n  ) {}\n}\n","import { Season } from './season';\n\nexport class Game {\n    public gameScheduleId!: number;\n    public gameDescription!: string;\n    public seasonId!: number;\n    public divisionId!: number;\n    public divisionDescription: string | undefined;\n    public gameId: number | undefined;\n    public locationName!: string;\n    public locationNumber!: number;\n    public gameDate: Date | undefined;\n    public gameTime: Date | undefined;\n    public homeTeamName: string | undefined;\n    public homeTeamId!: number;\n    public homeTeamNumber!: number;\n    public homeTeamScore: number | undefined;\n    public visitingTeamName: string | undefined;\n    public visitingTeamId: number | undefined;\n    public visitingTeamNumber: number | undefined;\n    public visitingTeamScore: number | undefined;\n    public scheduleGamesId!: number;\n    public scheduleNumber!: number;\n    public companyId: string| undefined;\n    public gameTimeString: string | undefined;\n    public gameNumber: number| undefined;\n    constructor(gameScheduleId: number,\n        seasonId: number,\n        divisionId: number,\n        gameId: number) {\n        gameScheduleId = gameScheduleId,\n            seasonId = seasonId,\n            divisionId = divisionId,\n            gameId = gameId\n    }\n}\n\n\n// visitingTeamSeasonNumber\":0,\"homeTeamSeasonNumber\":0,\"visitingTeamName\":\"5P\",\"homeTeamName\":\"4P\",\"scheduleNumber\":75,\"homeTeamScore\":0,\"visitingTeamScore\":0,\"gameDescription\":\"PLAYOFF A\",\"visitingTeamId\":0,\n// \"homeTeamId\":0},\n","\nexport class Season  {\n    public seasonId!: number;\n    public description: string | undefined;\n    public fromDate?: Date;\n    public toDate?: Date;\n    public participationFee?: number;\n    public sponsorFee?: number;\n    public sponsorDiscount?: number;\n    public onlineStarts?: Date;\n    public onlineStops?: Date;\n    public currentSeason!: boolean;\n    public currentSchedule!: boolean;\n    public gameSchedules!: boolean;\n    public onlineRegistration!: boolean;\n    constructor() {}\n}\n\n","export class Team {\n    teamId!: number;\n    divisionId!: number;\n    name!: string;\n    teamColorId?: number;\n    teamName?: string;\n    teamNumber?: string;\n    constructor(\n      _teamId? : number,\n      _divisionId?: number,\n      // _name?: string,\n      _teamName?: string,\n      _teamNumber?: string) {\n      this.teamId = _teamId as number;\n      this.divisionId = _divisionId as number;\n      // this.name = _name;\n      this.teamName = _teamName;\n      this.teamNumber = _teamNumber;\n      }\n}\n","import { Division } from './division';\n\n/* Defines the user entity */\nexport class User {\n    userId!: number;\n    userName!: string;\n    isAdmin!: boolean;\n    firstName: string | undefined;\n    lastName: string | undefined\n    houseId: number | undefined;\n    peopleId?: number | undefined;\n    userType: number | undefined;\n    screens: string[] | undefined;\n    divisions: Division[] | undefined;\n\n    constructor(_userId: number, _userName: string, _isAdmin: boolean) {\n        this.userId = _userId;\n        this.userName = _userName;\n        this.isAdmin = _isAdmin;\n    }\n}\n","export class WebContentType {\n    public webContentTypeId!: number;\n    public webContentTypeDescription!: string;\n    constructor() {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Game } from './domain/game';\n@Pipe({\n  name: 'games'\n})\nexport class GamesPipe implements PipeTransform {\n\n  transform(value: Game[], filterBy: number): any {\n    filterBy = filterBy ? filterBy : null;\n    return filterBy ? value.filter((game: Game) => game.divisionId !== -1) : value;\n\n  }\n\n}\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { Game } from 'app/domain/game';\n// import { DataSource } from \"@angular/cdk/table\";\nimport { Store, select } from '@ngrx/store';\nimport { MediaObserver } from '@angular/flex-layout';\nimport { GameScoreDialogComponent } from '../game-score-dialog/game-score-dialog.component';\n\nimport * as fromGames from '../../state';\nimport * as fromUser from '../../../user/state';\nimport * as gameActions from '../../state/games.actions';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'daily-schedule',\n  templateUrl: './daily-schedule.component.html',\n  styleUrls: ['./daily-schedule.component.scss'],\n})\nexport class DailyScheduleComponent implements OnInit {\n  @Input() games!: Game[];\n  @Input() canEdit!: boolean;\n  displayedColumns = [\n    'gameTime',\n    'locationName',\n    'homeTeam',\n    'visitingTeam',\n    'homeTeamScore',\n    'visitingTeamScore',\n    'actions',\n  ];\n  data: Game[] = []; // = this.games;\n  gameDate!: Date;\n  flexMediaWatcher: any;\n  currentScreenWidth: string | undefined;\n  constructor(\n    private store: Store<fromGames.State>,\n    private userStore: Store<fromUser.State>,\n    public dialog: MatDialog,\n    private media: MediaObserver\n  ) {}\n\n  ngOnInit() {\n    this.data = this.games;\n    this.flexMediaWatcher = this.media.media$.subscribe((change) => {\n      if (change.mqAlias !== this.currentScreenWidth) {\n        this.currentScreenWidth = change.mqAlias;\n        this.setupTable();\n        this.store.select(fromGames.getCanEdit).subscribe((canEdit) => {\n          this.canEdit = canEdit;\n          if (canEdit === true) {\n            this.displayedColumns.push('actions');\n          }\n        });\n      }\n    });\n    this.gameDate! = this.data[0].gameDate as Date;\n  }\n  setupTable() {\n    if (this.currentScreenWidth === 'xs') {\n      // only display internalId on larger screens\n      //this.displayedColumns.shift(); // remove 'internalId'\n      this.displayedColumns = [\n        'gameTime',\n        'visitingTeam',\n        'homeTeam',\n        'locationName',\n      ];\n    } else {\n      this.displayedColumns = [\n        'gameTime',\n        'visitingTeam',\n        'homeTeam',\n        'locationName',\n        'visitingTeamScore',\n        'homeTeamScore',\n      ];\n    }\n  }\n  editGame(game: Game) {\n    this.store.dispatch(new gameActions.SetCurrentGame(game));\n    const dialogRef = this.dialog.open(GameScoreDialogComponent, {\n      width: '500px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n    });\n  }\n}\n","<form formName=\"gameForm\">\n  <div class=\"gamedate\">{{ gameDate | date: 'EEEE, MMMM d' }}</div>\n  <div id=\"panelGames\" flexLayout=\"row\">\n    <div>\n      <div class=\"table-wrapper\">\n        <table mat-table id=\"grdSchedule\" [dataSource]=\"games\">\n          <!-- <ng-container matColumnDef=\"gameDate\">\n            <th mat-header-cell *matHeaderCellDef>Date</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.gameDate | date: 'shortDate' }}\n            </td>\n          </ng-container> -->\n          <ng-container matColumnDef=\"gameTime\" >\n            <th mat-header-cell *matHeaderCellDef>Time</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"time\">\n              {{ game.gameTime | date : \"shortTime\" }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"visitingTeam\"  class=\"col-1\">\n            <th mat-header-cell *matHeaderCellDef >Visitor</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.visitingTeamName }}\n            </td>\n          </ng-container>\n<div class=\"col-2\">\n          <ng-container matColumnDef=\"homeTeam\"  class=\"col-1\">\n            <th mat-header-cell *matHeaderCellDef >Home</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.homeTeamName }}\n            </td>\n          </ng-container>\n        </div>\n          <ng-container matColumnDef=\"locationName\">\n            <th mat-header-cell *matHeaderCellDef>Location</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"location\">\n              {{ game.locationName }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"homeTeamScore\">\n            <th mat-header-cell *matHeaderCellDef>Home Score</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.homeTeamScore }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"visitingTeamScore\">\n            <th mat-header-cell *matHeaderCellDef>Visitor Score</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\" >\n              {{ game.visitingTeamScore }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"actions\" >\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\n            <td mat-cell *matCellDef=\"let game\">\n              <button\n                class=\"edit\"\n                (click)=\"editGame(game)\"\n                mat-icon-button\n              >\n                <mat-icon>edit</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</form>\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div class=\"containerfluid\">\n      <div class=\"row\">\n        <div class=\"col-sm-4 col-6\">\n          {{ game.gameDate | date: \"MM/dd/yyyy\" }}\n        </div>\n        <div class=\"col-sm-4 col-6 text-right\">\n          <span>{{ game.gameDate | date: \"EEE\" }}, </span>\n          <span>{{ game.gameTime | date: \"shortTime\" }}</span>\n        </div>\n        <div class=\"col-sm-4 col-md-12 text-center\">\n          <div class=\"data\">{{ game.locationName }}</div>\n        </div>\n        <div class=\"col-sm-6 col-6 text-left\">\n          <span>Visitor: </span>\n          <span>{{ game.visitingTeamName }}</span>\n        </div>\n        <div class=\"col-sm-6 col-6 tex-left\">\n          <span>Home: </span>\n          <span>{{ game.homeTeamName }}</span>\n        </div>\n        <div\n          *ngIf=\"game.homeTeamScore != 0 && game.visitingTeamScore != 0\"\n          class=\"col-sm-6 col-6 text-right\"\n        >\n          Visitor: {{ game.visitingTeamScore }}\n        </div>\n        <div\n          *ngIf=\"game.homeTeamScore != 0 && game.visitingTeamScore != 0\"\n          class=\"col-sm-6 col-6 text-right\"\n        >\n          Home: {{ game.homeTeamScore }}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Game } from '../../../domain/game';\n\n@Component({\n  selector: 'csbc-game-card',\n  templateUrl: './game-card.component.html',\n  styleUrls: ['./game-card.component.scss']\n})\nexport class GameCardComponent implements OnInit {\n  @Input() game!: Game;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport {\n  FormControl,\n  FormBuilder,\n  FormGroup,\n  FormControlDirective,\n} from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromGames from '../../state';\nimport * as gameActions from '../../state/games.actions';\nimport { Division } from 'app/domain/division';\nimport { Team } from 'app/domain/team';\nimport { DivisionService } from 'app/services/division.service';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { EMPTY, Observable } from 'rxjs';\nimport { GameService } from 'app/games/game.service';\nimport { Season } from 'app/domain/season';\nimport { Constants } from '@app/shared/constants';\n\n@Component({\n  selector: 'csbc-game-filter',\n  templateUrl: './game-filter.component.html',\n  styleUrls: ['./game-filter.component.scss'],\n})\nexport class GameFilterComponent implements OnInit {\n  @Input() divisions!: Division[];\n  currentDivision!: Division;\n  @Input() teams!: Team[] | null;\n  @Input() currentTeam!: Team;\n  @Input() showAllTeams!: boolean;\n  @Output() selectedTeam = new EventEmitter<Team>();\n  criteriaForm!: FormGroup;\n  divisions$ = this.divisionService.divisions$.pipe(\n    catchError((err) => {\n      return EMPTY;\n    })\n  );\n  selected!: Division;\n  filteredTeams: Team[] | undefined;\n  season: Season | undefined;\n  teamComponent: FormControl | null | undefined;\n  divisionComponent: FormControl | null | undefined;\n\n  constructor(\n    private fb: FormBuilder,\n    private divisionService: GameService,\n    private store: Store<fromGames.State>\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.showAllTeams = true;\n    this.divisionComponent = this.criteriaForm.get('divisions') as FormControl;\n    this.teamComponent = this.criteriaForm.get('teams') as FormControl;\n    this.setStateSubscriptions();\n    this.setControlSubscriptions();\n    this.store.select(fromGames.getCurrentDivision).subscribe((division) => {\n      this.currentDivision = division as Division;\n      this.divisionComponent?.setValue(this.currentDivision);\n      this.changeDivision(division as Division);\n      // this.criteriaForm.controls['divisions'].setValue(division);\n    });\n  }\n\n  createForm() {\n    this.criteriaForm = this.fb.group({\n      divisions: new FormControl(this.currentDivision),\n      teams: this.teams,\n      allTeams: true,\n      gameView: 'list',\n    });\n  }\n  setControlSubscriptions() {\n    this.divisionComponent?.valueChanges.subscribe((division) => {\n      this.changeDivision(division);\n    });\n    this.teamComponent?.valueChanges.subscribe((val) => {\n      console.log(val);\n      if (val.teamName === Constants.ALLTEAMS) {\n        this.changeDivision(this.currentDivision);\n      } else {\n      this.store.dispatch(new gameActions.SetCurrentTeam(val));\n      }\n      // let check = this.criteriaForm.get('allTeamCheckbox') as FormControl;\n      // check.setValue(false);\n    });\n  }\n\n  setStateSubscriptions() {}\n\n  changeDivision(val: Division) {\n    const changedDivision = this.criteriaForm.controls['divisions'].value;\n\n    // if (this.currentDivision !== undefined &&\n    //   changedDivision !== this.currentDivision\n    // ) {\n      this.currentDivision = changedDivision;\n      this.store.dispatch(\n        new gameActions.SetCurrentDivision(this.currentDivision)\n      );\n      this.store.dispatch(new gameActions.LoadFilteredTeams());\n      this.store.dispatch(new gameActions.LoadStandings());\n    // }\n  }\n\n  divisionSelected(division: Division): void {}\n\n  teamSelected(team: Team): void {\n    this.selectedTeam.emit(team);\n  }\n}\n","<form [formGroup]=\"criteriaForm\" class=\"filter-wrapper\">\n  <div class=\"filter-divisions\">\n    <mat-form-field>\n      <mat-select placeholder=\"Divisions\" formControlName=\"divisions\">\n        <mat-option\n          *ngFor=\"let division of divisions\"\n          [value]=\"division\"\n        >\n          {{ division.divisionDescription }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-select placeholder=\"Teams\" formControlName=\"teams\">\n        <mat-option *ngFor=\"let team of teams\" [value]=\"team\">\n          {{ team.teamName }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-button-toggle-group name=\"gameView\" aria-label=\"Schedule View\">\n      <mat-button-toggle mat-icon-button routerLink=\"list\" value=\"list\"\n      matTooltip = \"Show in grid view\"\n      [matTooltipClass]=\"'tooltip'\">\n        <mat-icon>list</mat-icon>\n      </mat-button-toggle>\n      <mat-button-toggle mat-icon-button routerLink=\"card\" value=\"card\"\n      matTooltip = \"Show in card view\"\n      [matTooltipClass]=\"'tooltip'\">\n        <mat-icon>apps</mat-icon>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog';\nimport { FormControl, FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { GameService } from 'app/games/game.service';\n\nimport * as fromGames from '../../state';\nimport { Store, select } from '@ngrx/store';\nimport { Game } from 'app/domain/game';\n\n@Component({\n  selector: 'game-score-dialog',\n  templateUrl: './game-score-dialog.component.html',\n  styleUrls: ['./game-score-dialog.component.scss']\n})\nexport class GameScoreDialogComponent implements OnInit {\n  gameScoreForm = this.fb.group({\n    homeTeamName: new FormControl(''),\n    homeTeamScore: new FormControl(''),\n    visitorTeamName: new FormControl(''),\n    visitorTeamScore: new FormControl('')\n  });\n  game$: any;\n  game: Game;\n\n  constructor(\n    public dialogRef: MatDialogRef<GameScoreDialogComponent>,\n    private fb: FormBuilder,\n    private gameService: GameService,\n    private store: Store<fromGames.State>\n  ) {}\n\n  ngOnInit() {\n    this.game$ = this.store\n      .pipe(select(fromGames.getCurrentGame))\n      .subscribe(game => {\n        this.game = game;\n        console.log(game);\n        console.log(this.gameScoreForm.controls['homeTeamName']);\n       // this.gameScoreForm.controls['homeTeamName'].setValue(game.homeTeamName);\n       // this.gameScoreForm.controls['visitorTeamName'].setValue(game.visitingTeamName);\n        if (game.homeTeamScore !== null) {\n           this.gameScoreForm.controls['homeTeamScore'].setValue(game.homeTeamScore);\n         }\n         if (game.visitingTeamScore !== null) {\n           this.gameScoreForm.controls['visitorTeamScore'].setValue(game.visitingTeamScore);\n         }\n      });\n  }\n  onCancelClick() {\n    this.dialogRef.close();\n  }\n  onSubmitClick() {\n    console.log(this.gameScoreForm);\n    if (\n      this.validate(\n        this.gameScoreForm.controls['homeTeamScore'].value,\n        this.gameScoreForm.controls['visitorTeamScore'].value\n      )\n    ) {\n      console.log(this.gameScoreForm.controls['homeTeamScore'].value);\n      this.gameService.saveGame({ game: this.game, homeTeamScore: this.gameScoreForm.controls['homeTeamScore'].value, visitingTeamScore: this.gameScoreForm.controls['visitorTeamScore'].value });\n      this.dialogRef.close();\n    }\n  }\n  validate(homeTeamScore: string, visitorTeamScore: string) {\n    const valid = this.gameService.validateScores(\n      homeTeamScore,\n      visitorTeamScore\n    );\n    console.log(valid);\n    return true;\n  }\n}\n","<h1 mat-dialog-title>Scores</h1>\n<div mat-dialog-content>\n  <form\n    class=\"example-form\"\n    [formGroup]=\"gameScoreForm\"\n    (ngSubmit)=\"onSubmitClick()\"\n  >\n    <div>\n      <div class=\"teamName\">{{game.homeTeamName}}: </div>\n      <mat-form-field>\n        <input matInput type=\"number\" formControlName=\"homeTeamScore\" placeholder=\"\" />\n      </mat-form-field>\n    </div>\n\n    <div>\n      <div class=\"teamName\">{{game.visitingTeamName}}</div>\n      <mat-form-field>\n        <input matInput type=\"number\" formControlName=\"visitorTeamScore\" placeholder=\"\" />\n      </mat-form-field>\n    </div>\n  </form>\n</div>\n<!-- <div>{{game$ | async}}</div> -->\n<div mat-dialog-actions>\n  <button\n    mat-raised-button\n    mat-dialog-close\n    (click)=\"onSubmitClick()\"\n    cdkFocusInitial\n  >\n    Ok\n  </button>\n  <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\nimport * as fromGames from '../../state';\nimport * as gameActions from '../../state/games.actions';\nimport { take, tap, first } from 'rxjs/operators';\nimport { Subject, EMPTY, Observable } from 'rxjs';\nimport { Division } from '@app/domain/division';\nimport { SeasonService } from '@app/services/season.service';\nimport { GameService } from '@app/games/game.service';\nimport { Season } from '@app/domain/season';\nimport { Team } from '@app/domain/team';\n\n@Component({\n  selector: 'csbc-games-top-menu',\n  templateUrl: './games-top-menu.component.html',\n  styleUrls: ['./games-top-menu.component.scss'],\n})\nexport class GamesTopMenuComponent implements OnInit {\n  @Input() divisions!: Division[];\n  @Input() teams!: Team[];\n  @Output() currentDivision: Division | undefined;\n  @Output() selectedDivision = new EventEmitter<Division>();\n  private errorMessageSubject = new Subject<string>();\n  filteredTeams!: Team[];\n  seasonDescription: string | undefined;\n  selectedDivisionId$: Observable<number> | undefined;\n  season: Season | undefined;\n\n  constructor(\n    // private fb: FormBuilder,\n    private store: Store<fromGames.State>,\n    private gameService: GameService,\n    private seasonService: SeasonService\n  ) {}\n\n  ngOnInit() {\n    this.store.select(fromGames.getCurrentSeason).subscribe((currentSeason) => {\n      this.seasonDescription = currentSeason?.description;\n    });\n\n  }\n}\n","<div class=\"top-menu-wrapper\">\n  <div class=\"row mt-4\">\n    <h2 class=\"col-sm-3 col-10 offset-1\">{{ seasonDescription }}</h2>\n  </div>\n  <div class=\"row mt-2\">\n    <div class=\"col-sm-4 col-12\">\n      <mat-toolbar>\n        <div>\n          <button mat-button class=\"games-button\" routerLink=\"/games/schedule\">\n            Schedule\n          </button>\n          <button mat-button class=\"games-button\" routerLink=\"/games/standings\">\n            Standings\n          </button>\n        </div>\n      </mat-toolbar>\n    </div>\n    <div class=\"col-sm-2 col-0\"></div>\n    <div class=\"col-sm-6 col-12\">\n      <mat-toolbar>\n        <csbc-game-filter\n          [divisions]=\"divisions\"\n          [teams]=\"teams\"\n          class=\"\"\n        ></csbc-game-filter>\n      </mat-toolbar>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Game } from '../../../domain/game';\nimport { Store, select } from '@ngrx/store';\nimport * as fromGames from '../../state';\nimport * as fromUser from '../../../user/state';\n\n@Component({\n  selector: 'csbc-schedule-card-view',\n  templateUrl: './schedule-card-view.component.html',\n  styleUrls: ['./schedule-card-view.component.scss']\n})\nexport class ScheduleCardViewComponent implements OnInit {\n  errorMessage: string | undefined;\n  public title: string;\n  get games() {\n    return this._games;\n  }\n  @Input()\n  set games (games: Game[]) {\n    this._games = games;\n    // console.log(games);\n  }\n  private _games!: Game[];\n\n  constructor(    private store: Store<fromGames.State>,\n    private userStore: Store<fromUser.State>) {\n    this.title = 'Games!';\n  }\n\n  ngOnInit() {\n    this.store.select(fromGames.getFilteredGames)\n    .subscribe(games => {\n      this.games = games;\n      // this.dailySchedule = games;\n    });\n  }\n}\n","<div class=\"container-fluid\">\n  <div id=\"panelGames\" class=\"row\">\n    <div class=\"col-12\"><h2>Schedule</h2></div>\n  </div>\n  <div class=\"row\">\n    <div *ngFor=\"let item of games\" class=\"col-sm-6 col-md-4 col-lg-4 col-12 mb-4\">\n      <csbc-game-card [game]=\"item\" ></csbc-game-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { GameActions } from './../../state/games.actions';\nimport { FormBuilder } from '@angular/forms';\nimport { Game } from '../../../domain/game';\nimport { Store, select } from '@ngrx/store';\nimport * as fromGames from '../../state';\nimport * as fromUser from '../../../user/state';\nimport * as gameActions from '../../state/games.actions';\n\nimport { groupBy, mergeMap, toArray, map, switchMap } from 'rxjs/operators';\nimport { from, zip, of } from 'rxjs';\nimport * as moment from 'moment';\nimport { User } from 'app/domain/user';\nimport { GameScoreDialogComponent } from '../game-score-dialog/game-score-dialog.component';\nimport { MediaObserver } from '@angular/flex-layout';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GameService } from '@app/games/game.service';\n\n@Component({\n  selector: 'csbc-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss'],\n})\nexport class ScheduleComponent implements OnInit {\n  groupedGames: Game[] | undefined;\n  _gamesByDate: [Date, Game[]] | undefined;\n  divisionId: number | undefined;\n  flexMediaWatcher: any;\n  currentScreenWidth: any;\n\n  dailySchedule!: Array<Game[]>;\n  get games() {\n    return this._games;\n  }\n  @Input()\n  set games(games: Game[]) {\n    this._games = games;\n  }\n  private _games!: Game[];\n  @Output()\n  canEdit!: boolean;\n\n  errorMessage: string | undefined;\n  public title: string;\n\n  constructor(\n    private store: Store<fromGames.State>,\n    private userStore: Store<fromUser.State>,\n    public dialog: MatDialog,\n    private media: MediaObserver,\n    private gameService: GameService\n  ) {\n    this.title = 'Schedule!';\n    this.flexMediaWatcher = media.media$.subscribe((change) => {\n      if (change.mqAlias !== this.currentScreenWidth) {\n        this.currentScreenWidth = change.mqAlias;\n      }\n    });\n    // this.dailySchedule = new Array<Game[]>();\n  }\n\n  ngOnInit() {\n    this.store.select(fromGames.getCurrentDivision).subscribe((division) => {\n      this.store.select(fromGames.getFilteredGames).subscribe((games) => {\n        this.games = games;\n        this.dailySchedule = [];\n\n        this.gameService.groupByDate(games).subscribe((dailyGames) => {\n          this.dailySchedule.push(dailyGames);\n        });\n      });\n    });\n  }\n\n  editGame(game: Game) {\n    this.store.dispatch(new gameActions.SetCurrentGame(game));\n    const dialogRef = this.dialog.open(GameScoreDialogComponent, {\n      width: '500px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n    });\n  }\n}\n","<div *ngFor=\"let data of dailySchedule\">\n  <daily-schedule [games]=\"data\" [canEdit]=\"canEdit\"></daily-schedule>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromGames from '../../state';\nimport * as fromUser from '../../../user/state';\nimport * as gameActions from '../../state/games.actions';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Game } from '@app/domain/game';\nimport { User } from '@app/domain/user';\nimport { MediaObserver } from '@angular/flex-layout';\n\n@Component({\n  selector: 'csbc-scores',\n  templateUrl: './scores.component.html',\n  styleUrls: [\n    './scores.component.scss',\n    '../../containers/games-shell/games-shell.component.scss'\n  ]\n})\nexport class ScoresComponent implements OnInit {\n  dataSource!: MatTableDataSource<Game>;\n  groupedGames!: Game[];\n  _gamesByDate!: [Date, Game[]];\n  divisionId: number | undefined;\n  flexMediaWatcher: any;\n  currentScreenWidth: any;\n  get games() {\n    return this._games;\n  }\n  @Input()\n  set games(games: Game[]) {\n    this._games = games;\n    //    console.log(games);\n    this.dataSource = new MatTableDataSource(games);\n    //this.groupByDate(games).subscribe(grouped => {\n    // this.groupedGames = grouped;\n    //console.log(grouped);\n    //});\n  }\n  private _games!: Game[];\n  @Input()\n  canEdit!: boolean;\n\n  errorMessage!: string;\n  public title: string;\n  private user!: User;\n\n  displayedColumns = [\n    'gameDate',\n    'visitingTeamName',\n    'homeTeamName',\n    'visitingTeamScore',\n    'homeTeamScore'\n  ];\n  constructor(\n    private store: Store<fromGames.State>,\n    private userStore: Store<fromUser.State>,\n    public dialog: MatDialog,\n    private media: MediaObserver\n  ) {\n    this.title = 'Schedule!';\n  }\n\n  ngOnInit() {\n    if (this.canEdit === true) {\n      this.displayedColumns.push('actions');\n    }\n    this.userStore.pipe(select(fromUser.getCurrentUser)).subscribe(user => {\n      this.user = user;\n      console.log(this.user);\n    });\n    this.store\n      .pipe(select(fromGames.getCurrentDivision))\n      .subscribe(division => {\n        console.log(division);\n        if (division !== null && fromGames.getCurrentDivisionId !== undefined) {\n          this.divisionId = division?.divisionId;\n          console.log(this.divisionId);\n          this.canEdit = false;\n          if (this.user !== null && this.user !== undefined) {\n            if (this.user.userType === 3) {\n              this.canEdit = true;\n            } else {\n              for (let i = 0; i < this.user.divisions.length; i++) {\n                if (this.user.divisions[i].divisionId === this.divisionId) {\n                  this.canEdit = true;\n                  console.log('Found division');\n                  break;\n                }\n              }\n            }\n          }\n        }\n      });\n    // this.dataSource = new MatTableDataSource(this.games);\n    this.store.pipe(select(fromGames.getFilteredGames)).subscribe(games => {\n      this.games = games;\n      this.dataSource.data = games;\n    });\n    this.store.pipe(select(fromGames.getCanEdit)).subscribe(canEdit => {\n      this.canEdit = canEdit;\n      if (canEdit) {\n        this.displayedColumns.push('actions');\n      }\n    });\n\n    this.dataSource = new MatTableDataSource(this.games);\n    this.store.pipe(select(fromGames.getFilteredGames)).subscribe(games => {\n      this.games = games;\n      this.dataSource.data = games;\n    });\n  }\n}\n","\n<form formName=\"gameForm\">\n  <div id=\"panelGames\" flexLayout=\"row\">\n    <div>\n      <div class=\"table-wrapper\">\n        <table mat-table id=\"grdSchedule\" [dataSource]=\"dataSource\">\n          <ng-container matColumnDef=\"gameDate\">\n            <th mat-header-cell *matHeaderCellDef>Date</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"date\">\n              {{ game.gameDate | date: 'M/d' }}\n            </td>\n          </ng-container>\n          ><ng-container matColumnDef=\"homeTeamName\">\n            <th mat-header-cell *matHeaderCellDef>Home</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.homeTeamName }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"visitingTeamName\">\n            <th mat-header-cell *matHeaderCellDef>Visitor</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.visitingTeamName }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"homeTeamScore\">\n            <th mat-header-cell *matHeaderCellDef>Home</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.homeTeamScore }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"visitingTeamScore\">\n            <th mat-header-cell *matHeaderCellDef>Visitor</th>\n            <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n              {{ game.visitingTeamScore }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"actions\" *ngIf=\"canEdit\">\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\n            <td mat-cell *matCellDef=\"let game\">\n              <button class=\"edit\" *ngIf=\"canEdit\" mat-icon-button><mat-icon>edit</mat-icon></button>\n            </td>\n          </ng-container>\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" ></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Standing } from 'app/domain/standing';\nimport { GameService } from './../../game.service';\n\n@Component({\n  selector: 'csbc-standings',\n  templateUrl: './standings.component.html',\n  styleUrls: [\n    './standings.component.scss',\n    '../../containers/games-shell/games-shell.component.scss'\n  ]\n})\nexport class StandingsComponent implements OnInit {\n  public title: string;\n  @Input() teams!: any[];\n\n  private _standings: Standing[] | undefined;\n  get standings() {\n    return this._standings as Standing[];\n  }\n  @Input()\n  set standings(standings: Standing[]) {\n    this._standings = standings;\n    console.log(standings);\n    this.dataSource = new MatTableDataSource(standings);\n  }\n\n  // need to add back Games behind\n  // displayedColumns = ['teamName', 'won', 'lost', 'pct', 'streak'];\n  displayedColumns = ['teamName', 'won', 'lost', 'pct', 'pf', 'pa'];\n  dataSource: MatTableDataSource<Standing>;\n  constructor(private gameService: GameService) {\n    this.title = 'Standings';\n    this.dataSource = new MatTableDataSource(this.standings);\n  }\n\n  ngOnInit() {\n    this.teams = this.getStandings();\n\n    this.dataSource = new MatTableDataSource(this.standings);\n    console.log(this.teams);\n    console.log(this.standings);\n  }\n\n  getStandings() {\n    // this.gameService.getStandingsByDivision()..subscribe(standings => {\n    //   console.log(standings);\n    //   this.standings = standings;\n    // });\n    // console.log(standings);\n    return [\n      {\n        teamName: 'Blue(01)',\n        wins: 2,\n        losses: 1,\n        pct: 66,\n        gamesBehind: '1'\n      },\n      {\n        teamName: 'Gray(02)',\n        wins: 3,\n        losses: 0,\n        pct: 100,\n        gamesBehind: '_'\n      }\n    ];\n  }\n}\n","\n<div class=\"table-wrapper\">\n  <div class=\"standings-header\">Standings</div>\n  <table mat-table id=\"grdSchedule\" [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"teamName\">\n      <th mat-header-cell *matHeaderCellDef>Team</th>\n      <td mat-cell *matCellDef=\"let game\" class=\"teamName\">\n        {{ game.teamName }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"won\">\n      <th mat-header-cell *matHeaderCellDef>W</th>\n      <td mat-cell *matCellDef=\"let game\">{{ game.won }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"lost\">\n      <th mat-header-cell *matHeaderCellDef>L</th>\n      <td mat-cell *matCellDef=\"let game\">{{ game.lost }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"pct\">\n      <th mat-header-cell *matHeaderCellDef>PCT</th>\n      <td mat-cell *matCellDef=\"let game\">{{ game.pct | number: '1.2-2' }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"pf\">\n      <th mat-header-cell *matHeaderCellDef>PF</th>\n      <td mat-cell *matCellDef=\"let game\">{{ game.pf }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"pa\">\n      <th mat-header-cell *matHeaderCellDef>PA</th>\n      <td mat-cell *matCellDef=\"let game\">{{ game.pa }}</td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SeasonService } from 'app/services/season.service';\nimport { DivisionService } from 'app/services/division.service';\nimport { TeamService } from 'app/services/team.service';\nimport { GameService } from '../../game.service';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromGames from '../../state';\nimport * as fromUser from '../../../user/state';\n\nimport * as gameActions from '../../state/games.actions';\nimport { Game } from 'app/domain/game';\nimport { Team } from 'app/domain/team';\nimport { Division } from 'app/domain/division';\nimport { Observable, from, zip, of } from 'rxjs';\nimport { Standing } from 'app/domain/standing';\nimport {\n  groupBy,\n  mergeMap,\n  toArray,\n  tap,\n  flatMap,\n  concatMap,\n} from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { User } from 'app/domain/user';\n\n@Component({\n  selector: 'csbc-games-shell',\n  templateUrl: './games-shell.component.html',\n  styleUrls: ['./games-shell.component.scss'],\n})\nexport class GamesShellComponent implements OnInit {\n  @Input() showAllTeams: boolean | undefined;\n  @Input() currentTeam: string | undefined;\n  teamList: any[] | undefined;\n  filteredGames$: Observable<Game[]> | undefined;\n  standings$: Observable<Standing[]> | undefined;\n  teams: any;\n  user$ = this.userStore\n    .pipe(select(fromUser.getCurrentUser))\n    .subscribe((user) => (this.user = user));\n  allGames$: Observable<Game[]> | undefined;\n  errorMessage: any;\n  selectedDivisionId$: Observable<number> | undefined;\n  teams$: Observable<Team[]> | undefined;\n  selectedTeam$: Observable<Team> | undefined;\n  errorMessage$: Observable<string> | undefined;\n  selectedDivision$: Observable<any> | undefined;\n  standings: Game[] | undefined;\n  canEdit: boolean | undefined;\n  user: User | undefined;\n  games: Game[] | undefined;\n  currentSeason$: Observable<any> | undefined; // = this.seasonService.currentSeason$.subscribe(season => this.seasonDescription = season.description);\n  seasonDescription: string | undefined;\n  divisions$ = this.divisionService.divisions$;\n  games$ = this._gameService.games$;\n\n  // TODO: this is a bug that needs to be fixed!\n  // gameDivisionFilter$ = this._gameService.games$\n  // .pipe(\n  //   map(games =>\n  //     games.filter(game =>\n  //       this.selectedDivisionId ? game.DivisionID === this.selectedDivisionId  : true)\n  // ) as Game[]);\n  divisionId: any;\n  divisionId$!: Observable<number> | undefined;\n  selectedDivisionId: number;\n  divisions!: Division[];\n  currentDivision: Division | undefined;\n  filteredTeams!: Team[];\n  filteredGames!: Game[];\n  filteredGamesByDate!: Observable<Game[]>;\n  constructor(\n    private seasonService: SeasonService,\n    private divisionService: DivisionService,\n    private _teamService: TeamService,\n    private _gameService: GameService,\n    private store: Store<fromGames.State>,\n    private userStore: Store<fromUser.State>\n  ) {\n    this.selectedDivisionId = 1;\n  }\n\n  ngOnInit() {\n    this.setStateSubscriptions();\n  }\n  setStateSubscriptions() {\n    this.store\n      .select(fromGames.getDivisions)\n      .subscribe((divisions) => (this.divisions = divisions));\n    this.divisionId$ = this.store.pipe(\n      select(fromGames.getCurrentDivisionId)\n    ) as Observable<number>;\n\n    // this.filteredGames$ = this.store.pipe(select(fromGames.getFilteredGames));\n    // this.standings$ = this.store.pipe(select(fromGames.getStandings));\n    this.store.select(fromGames.getDivisions).subscribe(divisions => {\n      this.store.dispatch(new gameActions.SetCurrentDivision(divisions[0]));\n\n    })\n\n    this.store.pipe(select(fromUser.getCurrentUser)).subscribe((user) => {\n      this.user = user;\n    });\n    this.store.select(fromGames.getCurrentDivision).subscribe((division) => {\n      this.currentDivision = division;\n      const divId = division?.divisionId as number;\n      console.log(division);\n      this.store.dispatch(new gameActions.LoadFilteredTeams());\n      this.store.dispatch(new gameActions.LoadFilteredGames);\n      this.store.select(fromGames.getFilteredTeams).subscribe((teams) => {\n        this.filteredTeams = teams;\n      });\n    });\n    // this.store.select(fromGames.getFilteredGames).subscribe(games => {\n    //   this.filteredGames = games;\n    //   this.filteredGamesByDate = this._gameService.groupByDate(games);\n    //   console.log(this.filteredGames);\n    // })\n  }\n  public filterByDivision(divisionId: number): void {\n    console.log(divisionId);\n    this.teamList = [];\n  }\n\n  divisionSelected(division: Division): void {\n    this.store.dispatch(new gameActions.SetCurrentDivision(division));\n    console.log(this.user$);\n    if (division !== undefined) {\n      this.store.dispatch(\n        new gameActions.SetCanEdit(\n          this._gameService.getCanEdit(this.user, division.divisionId)\n        )\n      );\n    }\n  }\n  teamSelected(team: Team): void {\n    this.store.dispatch(new gameActions.SetCurrentTeam(team));\n  }\n\n  getCanEdit(user: User, divisionId: number): boolean {\n    let canEdit = false;\n    if (user && user.divisions) {\n      user.divisions.forEach((element) => {\n        if (divisionId === element.divisionId) {\n          console.log('found ' + divisionId);\n          canEdit = true;\n        }\n      });\n    }\n    return canEdit;\n  }\n\n  setDivisionData(data: any[]): Division[] {\n    let divisions: Division[] = [];\n    // console.log(data);\n    for (let i = 0; i <= data.length; i++) {\n      // console.log(data[i]);\n      if (data[i] !== undefined) {\n        let division: Division = {\n          seasonId: data[i].seasonId,\n          divisionId: data[i].divisionId,\n          divisionDescription: data[i].divisionDescription,\n          minDate: data[i].minDate,\n          maxDate: data[i].maxDate,\n        };\n        divisions.push(division);\n      }\n    }\n    return divisions;\n  }\n  setTeamData(data: any[]): Team[] {\n    let teams: Team[] = [];\n    for (let i = 0; i <= data.length; i++) {\n      if (data[i] !== undefined) {\n        let team: Team = new Team();\n        team.teamId = data[i].teamID;\n        team.name = data[i].teamNumber;\n        team.teamColorId = data[i].colorID;\n        team.divisionId = data[i].divisionId;\n        teams.push(team);\n      }\n      console.log(teams);\n    }\n    return teams;\n  }\n}\n","<csbc-games-top-menu\n  [divisions]=\"divisions\"\n  [teams]=\"filteredTeams\"\n  (selectedDivision)=\"divisionSelected($event)\"\n></csbc-games-top-menu>\n<div class=\"games-wrapper\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, zip, of, from, EMPTY } from 'rxjs';\nimport { Season } from 'app/domain/season';\nimport { Division } from 'app/domain/division';\nimport { Team } from 'app/domain/team';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromGames from '../../state';\nimport * as fromUser from '../../../user/state';\n\nimport { Game } from 'app/domain/game';\nimport { groupBy, mergeMap, toArray, tap, map, concatMap, catchError, take\n} from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { User } from 'app/domain/user';\nimport { DivisionService } from './../../../services/division.service';\nimport { GameService } from 'app/games/game.service';\n\n@Component({\n  selector: 'csbc-schedule-shell',\n  templateUrl: './schedule-shell.component.html',\n  styleUrls: ['./schedule-shell.component.scss']\n})\nexport class ScheduleShellComponent implements OnInit {\n  filteredGames$: Observable<Game[]> | undefined;\n  currentSeason$: Observable<Season> | undefined;\n  divisions$: Observable<Division[]> | undefined;\n  selectedDivisionId$: Observable<number> | undefined;\n  teams$: Observable<Team[]> | undefined;\n  selectedTeam$: Observable<Team> | undefined;\n  errorMessage$: Observable<string> | undefined;\n  selectedDivision$: Observable<any> | undefined;\n  canEdit = false;\n  gamesByDate$: Observable<[Date, Game[]]> | undefined;\n  user$: Observable<User> | undefined;\n  division$: Observable<Division> | undefined;\n  division: Division | undefined;\n  user: User | undefined;\n  games$ = this.gameService.games$.pipe(\n    catchError(err => {\n      this.errorMessage$ = err;\n      return EMPTY;\n    })\n  );\n\n  constructor(\n    private store: Store<fromGames.State>,\n    private userStore: Store<fromUser.State>,\n    private divisionService: DivisionService,\n    private gameService: GameService\n  ) {}\n\n  ngOnInit() {\n\n  }\n\n  groupByDate(games: Game[]) {\n    // console.log(games);\n    games.forEach(element => {\n      element.gameTime = element.gameDate;\n      element.gameDate = moment(element.gameDate)\n        .startOf('day')\n        .toDate();\n    });\n    const source = from(games);\n\n    const t1 = of(games).pipe(\n      concatMap(res => res),\n      groupBy(game => game.gameDate),\n      mergeMap(group => zip(of(group.key), group.pipe(toArray())))\n    );\n    const test = from(games).pipe(\n      // mergeMap(res => res),\n      groupBy(\n        game => game.gameDate,\n        g => g\n      ),\n      // tap(data => console.log(data)),\n      mergeMap(group => zip(of(group.key), group.pipe(toArray()))),\n      tap(data => console.log(data))\n    );\n    console.log(test);\n    console.log(t1);\n    // console.log(this.gamesByDate);\n    return t1;\n  }\n  getCanEdit(user: User | undefined, divisionId: number): boolean {\n    console.log(divisionId);\n    if (user !== undefined) {\n      if (user.divisions !== undefined) {\n        user.divisions.forEach(element => {\n        if (divisionId === element.divisionId) {\n          return true;\n          console.log('found ' + divisionId);\n        }\n        return false;\n      });\n      }\n    }\n    return false;\n  }\n}\n","<!-- <div class=\"container\"> -->\n  <div class=\"row\">\n    <csbc-schedule></csbc-schedule>\n    <csbc-schedule-card-view\n      [games]=\"filteredGames$ | async\"\n    ></csbc-schedule-card-view>\n  </div>\n<!-- </div> -->\n","import { Component, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Standing } from 'app/domain/standing';\nimport { Season } from 'app/domain/season';\nimport { Division } from 'app/domain/division';\nimport { Team } from 'app/domain/team';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromGames from '../../state';\nimport * as gameActions from '../../state/games.actions';\n\n\n@Component({\n  selector: 'csbc-standings-shell',\n  templateUrl: './standings-shell.component.html',\n  styleUrls: ['./standings-shell.component.scss']\n})\nexport class StandingsShellComponent implements OnInit {\n  standings$:  Observable<Standing[]> | undefined;\n  currentSeason$: Observable<Season> | undefined;\n  divisions$: Observable<Division[]> | undefined;\n  selectedDivisionId$: Observable<number> | undefined;\n  errorMessage$: Observable<string> | undefined;\n  selectedDivision$: Observable<any> | undefined;\n  \n  constructor( private store: Store<fromGames.State>) { }\n\n  ngOnInit() {\n    this.setStateSubscriptions();\n  }\n\n  setStateSubscriptions() {\n    console.log('ScheduleShell - set subscriptions');\n    this.standings$ = this.store.pipe(select(fromGames.getStandings));\n  }\n  // divisionSelected(division: Division): void {\n  //   this.store.dispatch(new gameActions.SetCurrentDivision(division));\n  //   console.log(division);\n  //   this.store.dispatch(new gameActions.LoadStandings());\n  // }\n\n}\n","<div>\n  <!-- <div fxFlex=\"100\" style=\"margin-bottom:12px; padding-left:20px;\">\n    <csbc-game-filter [currentDivision]=\"selectedDivisionId$ | async\">\n    </csbc-game-filter>\n  </div> -->\n  <div  >\n    <div>\n      <csbc-standings [standings]=\"standings$ | async\"></csbc-standings>\n    </div>\n  </div>\n</div>\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Game } from 'app/domain/game';\n\n@Pipe({\n  name: 'gameSort'\n})\nexport class GameSortPipe implements PipeTransform {\n\n  transform(array: Game[], gameDate: Date): Game[] {\n    array.sort((a: Game, b: Game) => {\n      if (a['gameDate'] < b['gameDate']) {\n        return -1;\n      } else {if (a['gameDate'] > b['gameDate']) {\n        return 1;\n      } else {\n        return 0;\n      }\n      }\n    });\n    return array;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, combineLatest, throwError, pipe, from } from 'rxjs';\nimport { Division } from '@app/domain/division';\nimport { map, tap, catchError, shareReplay, distinct, toArray, mergeMap, groupBy } from 'rxjs/operators';\nimport { DataService } from '@app/services/data.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Game } from '@app/domain/game';\nimport * as fromGames from './state';\nimport * as gameActions from './state/games.actions';\nimport * as fromUser from '@app/user/state';\nimport { Store, select } from '@ngrx/store';\nimport { User } from '@app/domain/user';\nimport { TeamService } from '@app/services/team.service';\nimport { Team } from '@app/domain/team';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameService {\n  seasonId: number | undefined; // = 2192; // TO DO make this is passed in!\n  currentSeason$ = this.store.select(fromGames.getCurrentSeason).subscribe({\n    next: (season) => {\n      // console.log(season);\n      if (season !== undefined && season !== null) {\n        this.seasonId = season.seasonId;\n      }\n    },\n  });\n  handleError: ((err: any, caught: Observable<any[]>) => never) | undefined;\n\n  private gameUrl =\n    this.dataService.webUrl + '/api/Schedulegame/getSeasonGames';\n  //    this.seasonId;\n  private standingsUrl =\n    this.dataService.webUrl + '/api/ScheduleGame/getStandings';\n  // private divisionUrl = this.dataService.webUrl + '/api/divisions';\n  private divisionUrl =\n    this.dataService.webUrl + '/api/division/GetSeasonDivisions/' + '4111';\n  // this.seasonId;\n  private divisionStartUrl =\n    this.dataService.webUrl + '/api/division/GetSeasonDivisions';\n  games: Game[] | undefined;\n  divisionId: number | undefined;\n  teamId: number | undefined;\n  allGames: Game[] | undefined;\n  standing: any[] | undefined;\n  // divisions$: Observable<Division>;\n  games$ = this.http.get<Game[]>(this.dataService.seasonGamesUrl + '?seasonId=' + '2203').pipe(\n    // tap((data) => console.log(\"All games: \" + JSON.stringify(data))),\n    shareReplay(1)\n    // catchError()\n  );\n\n  divisions$ = this.store.select(fromGames.getDivisions);\n\n  vm$ = combineLatest([this.games$, this.divisions$]).pipe(\n    map(([games, divisions]) => ({ games, divisions }))\n  );\n  currentDivision$ = this.store\n    .pipe(select(fromGames.getCurrentDivision))\n    .subscribe((division): number | undefined => {\n      return division !== undefined\n        ? // console.log(division);\n          (this.divisionId = division.divisionId)\n        : undefined;\n    });\n  allGames$ = this.store.pipe(\n    select(fromGames.getGames)\n    // tap((data) => console.log(data))\n  );\n  selectedDivision$ = this.store.pipe(\n    select(fromGames.getCurrentDivision),\n    map((division) => {\n      this.divisionId = division?.divisionId;\n      // this.getStandingsByDivision(divisionId);\n    })\n    // tap((data) => console.log(\"Division\", JSON.stringify(data)))\n  );\n  divisionGames$ = this.games$.pipe(\n    map((games) => games.filter((game) => game.divisionId === this.divisionId))\n  );\n  gameDivisions$ = this.http.get<Division[]>(this.divisionUrl).pipe(\n    // tap((data) => console.log(\"Divisions\", JSON.stringify(data))),\n    shareReplay(1)\n    // catchError(this.handleError)\n  );\n  divisions: Division[] | undefined;\n  user: User | undefined;\n  // divisionGames$ = this.allGames$.pipe(\n  //   map(games => this.getDivisionGames(games, this.divisionId))\n  // );\n\n  constructor(\n    private dataService: DataService,\n    private http: HttpClient,\n    private store: Store<fromGames.State>,\n    private userStore: Store<fromUser.State>\n  ) {\n    this.getCurrentSeason();\n  }\n\n  private getDivisionGames(games: Game[], divisionId: number) {\n    let g: Game[] = [];\n    // console.log(divisionId);\n    // console.log(games);\n    for (let i = 0; i < games.length; i++) {\n      // console.log(\"looking for a match\");\n      // console.log(games[i].divisionId);\n      if (games[i].divisionId === divisionId) {\n        g.push(games[i]);\n        // console.log(\"got a match\");\n      }\n    }\n    console.log(g);\n    return g;\n  }\n  getGames(): Observable<Game[]> {\n    const divId = fromGames.getCurrentDivisionId;\n    return this.http.get<Game[]>(this.dataService.seasonGamesUrl + this.currentSeason$).pipe(\n      map((response) => (this.games = response))\n      // tap(data => console.log('All: ' + JSON.stringify(data))),\n      // catchError(this.handleError)\n    );\n  }\n\n  // getGame(id: number): Observable<Game> {\n  //   return this.getGames().pipe(\n  //     map((content: Game[]) => content.find(p => p.gameId === id))\n  //   );\n  // }\n\n  filterGamesByDivision(div: number): Observable<Game[]> {\n    let games: Game[] = [];\n    let sortedDate: Game[] = [];\n    this.store.pipe(select(fromGames.getGames)).subscribe((allGames) => {\n      this.allGames = allGames;\n      this.setCanEdit(div);\n      if (allGames) {\n        for (let i = 0; i < this.allGames.length; i++) {\n          if (this.allGames[i].divisionId === div) {\n            let game = allGames[i];\n            // console.log(game);\n            // if (allGames[i].homeTeamScore === -1) allGames[i].homeTeamScore = 0;\n            // if (game.homeTeamScore === -1) game.homeTeamScore = 0;\n            // if (game.visitingTeamScore === -1) game.visitingTeamScore = 0;\n            games.push(game);\n          }\n        }\n        games.sort();\n        sortedDate = games.sort((a, b) => {\n          return this.compare(a.gameDate!, b.gameDate!, true);\n        });\n        return of(sortedDate);\n      }\n      return of(sortedDate);\n    });\n    return of(sortedDate);\n  }\n\n  public filterGamesByTeam(currentTeam: Team | undefined): Observable<Game[]> {\n    let teamId = currentTeam?.teamId;\n    this.store.pipe(select(fromGames.getGames)).subscribe((g) => {\n      this.allGames = g;\n    });\n    let games: Game[] = [];\n    if (this.allGames) {\n\n      for (let i = 0; i < this.allGames.length; i++) {\n        if (\n          this.allGames[i].visitingTeamId === teamId ||\n          this.allGames[i].homeTeamId === teamId\n        ) {\n          games.push(this.allGames[i]);\n        }\n      }\n    }\n    let sortedDate = games.sort((a, b) => {\n      return this.compare(a.gameDate as Date, b.gameDate as Date, true);\n    });\n    console.log(games);\n    return of(games);\n  }\n\n  groupByDate(games: Game[]) {\n    const source = from(games);\n    const gDate = source.pipe(\n      map(s => (s.gameDate = moment(s.gameDate).toDate()))\n    );\n\n    const gamesByDate = source.pipe(\n      groupBy(game =>\n        moment(game.gameDate).format(moment.HTML5_FMT.DATE)\n        ),\n      mergeMap(group => group.pipe(toArray()))\n    );\n    return gamesByDate;\n  }\n\n  private sort(a: any, b: any) {\n    return this.compare(a.gameDate, b.gameDate, true);\n  }\n\n  compare(a: Date | string, b: Date | string, isAsc: boolean) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n  getCurrentSeason() {\n    return this.store.select(fromGames.getCurrentSeason).subscribe((season) => {\n      if (season !== null) {\n        this.seasonId = season.seasonId;\n        // console.log(season);\n      }\n    });\n  }\n  getDivisions(seasonId: number) {\n    //this.seasonId = season.seasonID;\n    return this.http\n      .get<Division[]>(this.divisionStartUrl + '/' + seasonId)\n      .pipe(\n        map((response) => (this.divisions = response)),\n        shareReplay(1)\n        // tap(data => console.log('All: ' + JSON.stringify(data))),\n        // tap(divisions => gameActions.gameActionTypes.SetCurrentDivision = ),\n        // catchError(this.handleError)\n      );\n  }\n\n  getDistinctDates(filteredGames: Game[]): Observable<(Date | undefined)[]> {\n    return from(filteredGames).pipe(\n      map((g) => g.gameDate),\n      distinct(),\n      toArray()\n    );\n  }\n\n  standingsByDivision$ = combineLatest([this.currentDivision$]).pipe();\n  getStandingsByDivision(divisionId: number) {\n    return this.http\n      .get<any[]>(this.standingsUrl + '?divisionId=' + divisionId)\n      .pipe(\n        map((response) => (this.standing = response))\n        // tap(data => console.log('All: ' + JSON.stringify(data))),\n        // catchError(this.handleError)\n      );\n  }\n  getCanEdit(user: User | undefined, divisionId: number): boolean {\n    // console.log(divisionId);\n    let tFlag = false;\n    if (user) {\n      if (user.userType === 3) {\n        tFlag = true;\n        return true;\n      } else {\n        if (user.divisions) {\n          let found = user.divisions.find(\n            (div) => div.divisionId === divisionId\n          );\n          return found !== undefined;\n        }\n      }\n    }\n    return tFlag;\n  }\n\n  setCanEdit(division: number) {\n    this.store.pipe(select(fromUser.getCurrentUser)).subscribe((user) => {\n      let canEdit = this.getCanEdit(user, division);\n      this.store.dispatch(new gameActions.SetCanEdit(canEdit));\n    });\n  }\n\n  validateScores(homeTeamScore: any, visitorTeamScore: any) {\n    //validate scores\n    return true;\n  }\n  saveGame({\n    game,\n    homeTeamScore,\n    visitingTeamScore,\n  }: {\n    game: Game;\n    homeTeamScore: any;\n    visitingTeamScore: any;\n  }) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    game.homeTeamScore = homeTeamScore;\n    game.visitingTeamScore = visitingTeamScore;\n    console.log(game);\n    const gameUrl = this.dataService.webUrl + '/api/games/updateScores';\n    // + game;\n    console.log(gameUrl);\n    let result = this.http\n      .put(gameUrl, game, httpOptions)\n      .subscribe((x) => console.log(x));\n    // .pipe(\n    //   tap(data => console.log(data)),\n    //   catchError(this.dataService.handleError)\n    // );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { GamesShellComponent } from './containers/games-shell/games-shell.component';\nimport { ScheduleComponent } from './components/schedule/schedule.component';\nimport { ScheduleCardViewComponent } from './components/schedule-card-view/schedule-card-view.component';\nimport { ScheduleShellComponent } from './containers/schedule-shell/schedule-shell.component';\nimport { ScoresComponent } from './components/scores/scores.component';\nimport { StandingsShellComponent } from './containers/standings-shell/standings-shell.component';\nimport { PageNotFoundComponent } from 'app/app.not-found.component';\n\nconst gamesRoutes: Routes = [\n  {\n    path: '',\n    component: GamesShellComponent,\n    children: [\n      { path: '', component: ScheduleComponent },\n      { path: 'schedule', component: ScheduleShellComponent },\n      { path: 'standings', component: StandingsShellComponent },\n      { path: 'card', component: ScheduleCardViewComponent },\n      { path: 'list', component: ScheduleComponent },\n      { path: 'scores', component: ScoresComponent },\n      { path: '**', component: PageNotFoundComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(gamesRoutes)],\n  exports: [RouterModule]\n})\nexport class GamesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '../core/core.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ScheduleComponent } from './components/schedule/schedule.component';\nimport { StandingsComponent } from './components/standings/standings.component';\nimport { ScheduleCardViewComponent } from './components/schedule-card-view/schedule-card-view.component';\nimport { GameCardComponent } from './components/game-card/game-card.component';\nimport { GamesRoutingModule } from './games-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './state/games.reducer';\nimport { GameEffects } from './state/game.effects';\nimport { GameFilterComponent } from './components/game-filter/game-filter.component';\nimport { GamesShellComponent } from './containers/games-shell/games-shell.component';\nimport { EffectsModule } from '@ngrx/effects';\nimport { GameService } from './game.service';\nimport { GameSortPipe } from './game-sort.pipe';\nimport { GamesTopMenuComponent } from './components/games-top-menu/games-top-menu.component';\nimport { ScheduleShellComponent } from './containers/schedule-shell/schedule-shell.component';\nimport { ScoresComponent } from './components/scores/scores.component';\nimport { StandingsShellComponent } from './containers/standings-shell/standings-shell.component';\nimport { GameScoreDialogComponent } from './components/game-score-dialog/game-score-dialog.component';\nimport { AppModule } from 'app/app.module';\nimport { DailyScheduleComponent } from './components/daily-schedule/daily-schedule.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    SharedModule,\n    GamesRoutingModule,\n    StoreModule.forFeature('games', reducer),\n    EffectsModule.forFeature([GameEffects])\n  ],\n  exports: [GamesRoutingModule],\n  declarations: [\n    // GamesComponent,\n    ScheduleComponent,\n    StandingsComponent,\n    ScheduleCardViewComponent,\n    GameCardComponent,\n    GameFilterComponent,\n    GamesShellComponent,\n    GameSortPipe,\n    GamesTopMenuComponent,\n    ScheduleShellComponent,\n    ScoresComponent,\n    StandingsShellComponent,\n    GameScoreDialogComponent,\n    DailyScheduleComponent\n  ],\n  entryComponents: [GameScoreDialogComponent],\n\n  providers: [GameService]\n})\nexport class GamesModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot,\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromGames from './state';\nimport * as gameActions from './state/games.actions';\nimport { GameService } from './game.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GamesResolver implements Resolve<boolean> {\n  constructor(\n    private store: Store<fromGames.State>,\n    private _gameService: GameService\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    this.store.select(fromGames.getCurrentSeason).subscribe((season) => {\n      const t = this._gameService.currentSeason$; // = season.seasonID;\n      // this.store.dispatch(new gameActions.LoadDivisions());\n      this.store.dispatch(new gameActions.LoadPlayoffGames());\n      this.store.dispatch(new gameActions.LoadStandings());\n      // this.store.select(fromGames.getDivisions).subscribe((divisions) => {\n      //   console.log(divisions);\n      //   this.store\n      //     .select(fromGames.getCurrentDivision)\n      //     .subscribe((division) => {\n        //     if (division?.seasonId !== season?.seasonId) {\n        //       console.log('wrong division set at init');\n              // this.store.dispatch(\n              //   new gameActions.SetCurrentDivision(divisions[0])\n              // );\n        //     }\n          // });\n      // });\n    });\n    return of(true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport * as gameActions from './games.actions';\nimport * as fromGames from './';\nimport { map, switchMap, mergeMap, catchError, tap, mapTo, withLatestFrom, concatMap, shareReplay} from 'rxjs/operators';\nimport { Store, Action, select } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { GameService } from '../game.service';\nimport { TeamService } from 'app/services/team.service';\nimport { getCurrentDivision, getCurrentTeam } from './';\nimport { SeasonService } from 'app/services/season.service';\nimport { DivisionService } from 'app/services/division.service';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from 'app/services/data.service';\nimport { Game } from 'app/domain/game';\nimport { PlayoffGame } from 'app/domain/playoffGame';\nimport { Division } from 'app/domain/division';\nimport { Team } from '@app/domain/team';\n\n@Injectable()\nexport class GameEffects {\n  seasonId!: number;\n  index!: number;\n  currentSeasonId = 2190;\n  divisionId$!: Observable<number>;\n  divisionId!: number;\n  private gameUrl = this.dataService.seasonGamesUrl;\n  private divisionUrl =\n    this.dataService.webUrl + '/api/division/GetSeasonDivisions/';\n  private divisionStartUrl =\n    this.dataService.webUrl + '/api/division/GetSeasonDivisions/';\n  private playoffGameUrl =\n    this.dataService.webUrl + '/api/schedulegame/getSeasonPlayoffGames';\n  teamId: any;\n  team: Team | undefined;\n\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private seasonService: SeasonService,\n    private divisionService: GameService,\n    private gameService: GameService,\n    private teamService: TeamService,\n    private dataService: DataService,\n\n    private store: Store<fromGames.State>\n  ) {}\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadGames$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.Load),\n    concatMap((action) =>\n      of(action).pipe(\n        withLatestFrom(this.store.pipe(select(fromGames.getCurrentSeason))),\n        // tap((divisions) => console.log(divisions))\n      )\n    ),\n    tap(([action, t]) => {\n      if (t) {\n        this.seasonId = t.seasonId;\n      } else {\n        this.seasonId = 0;\n      }\n    }),\n\n    mergeMap((action) =>\n      this.http.get<Game[]>(this.gameUrl + '?seasonId=' + this.seasonId).pipe(\n        // tap(data => console.log('All games: ' + JSON.stringify(data))),\n        shareReplay(1),\n        map((games) => new gameActions.LoadSuccess(games)),\n        // tap(games => console.log(games)),\n        catchError((err) => of(new gameActions.LoadFail(err)))\n      )\n    )\n  );\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadPlayoffGames$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.LoadPlayoffGames),\n    concatMap((action) =>\n      of(action).pipe(\n        withLatestFrom(this.store.pipe(select(fromGames.getCurrentSeason))),\n        tap((divisions) => console.log(divisions))\n      )\n    ),\n    tap(([action, t]) => {\n      if (t) {\n        this.seasonId = t.seasonId;\n      } else {\n        this.seasonId = 0;\n      }\n    }),\n\n    mergeMap((action) =>\n      this.http\n        .get<PlayoffGame[]>(this.playoffGameUrl + '?seasonId=' + this.seasonId)\n        .pipe(\n          // tap(data => console.log('All playoff games: ' +this.playoffGameUrl + ' '+ JSON.stringify(data))),\n          shareReplay(1),\n          map((games) => new gameActions.LoadPlayoffGamesSuccess(games)),\n          // tap(games => console.log(games)),\n          catchError((err) => of(new gameActions.LoadPlayoffGamesFail(err)))\n        )\n    )\n  );\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  setCurrentSeason$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.LoadCurrentSeason),\n    mergeMap((action) =>\n      this.seasonService.currentSeason$.pipe(\n        map((season) => new gameActions.SetCurrentSeason(season)),\n        // tap((data) => console.log(data)),\n        catchError((err) => of(new gameActions.LoadDivisionsFail(err)))\n      )\n    )\n  );\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadDivisions$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.LoadDivisions),\n    concatMap((action) =>\n      of(action).pipe(\n        withLatestFrom(this.store.pipe(select(fromGames.getCurrentSeason))),\n        // tap((divisions) => console.log(divisions))\n      )\n    ),\n    tap(([action, t]) => {\n      if (t) {\n        this.seasonId = t.seasonId;\n      } else {\n        this.seasonId = 0;\n      }\n    }),\n    mergeMap((action) =>\n      this.http.get<Division[]>(this.divisionStartUrl + this.seasonId).pipe(\n        shareReplay(1),\n        map((divisions) => new gameActions.LoadDivisionsSuccess(divisions)),\n        catchError((err) => of(new gameActions.LoadDivisionsFail(err)))\n      ),\n    ),\n\n  );\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  changeDivision$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.SetCurrentDivision),\n    tap((x) => (this.gameService.divisionId = x)),\n    mapTo(new gameActions.LoadFilteredGames()),\n    tap(() => 'changed division')\n  );\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadTeams$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.LoadTeams),\n    mergeMap((action) =>\n      this.teamService.getTeams().pipe(\n        map((teams) => new gameActions.LoadTeamsSuccess(teams)),\n        // tap((response) => console.log(response)),\n        catchError((err) => of(new gameActions.LoadDivisionsFail(err)))\n      )\n    )\n  );\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadFilteredGames$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.LoadFilteredGames),\n    concatMap((action) =>\n      of(action).pipe(\n        withLatestFrom(this.store.pipe(select(getCurrentDivision)))\n      )\n    ),\n    tap(([action, t]) => {\n      if (t) {\n        // console.log(t);\n        this.divisionId = t.divisionId;\n      } else {\n        this.divisionId = 0;\n      }\n    }),\n    switchMap((action) =>\n      this.gameService.filterGamesByDivision(this.divisionId).pipe(\n        map((games) => new gameActions.LoadFilteredGamesSuccess(games)),\n        // tap(response => console.log(response)),\n        catchError((err) => of(new gameActions.LoadFilteredGamesFail(err)))\n      )\n    )\n  );\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadStandings$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.LoadStandings),\n    concatMap((action) =>\n      of(action).pipe(\n        withLatestFrom(this.store.pipe(select(getCurrentDivision))),\n        tap(([action, t]) => {\n          if (t) {\n            this.divisionId = t.divisionId;\n          } else {\n            this.divisionId = 0;\n          }\n        })\n      )\n    ),\n    switchMap((x) =>\n      this.gameService.getStandingsByDivision(this.divisionId).pipe(\n        map((standings) => new gameActions.LoadStandingsSuccess(standings)),\n        tap((response) => 'got Standings'),\n        catchError((err) => of(new gameActions.LoadStandingsFail(err)))\n      )\n    )\n  );\n\n\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadFilteredTeams$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.LoadFilteredTeams),\n    concatMap((action) =>\n      of(action).pipe(\n        withLatestFrom(this.store.pipe(select(getCurrentDivision)))\n      )\n    ),\n    tap(([action, t]) => {\n      if (t) {\n        // console.log(t);\n        this.divisionId = t.divisionId;\n      } else {\n        this.divisionId = 0;\n      }\n    }),\n    switchMap((action) =>\n      this.teamService.filterTeamsByDivision(this.divisionId).pipe(\n        map((teams) => new gameActions.LoadFilteredTeamsSuccess(teams)),\n        // tap(response => console.log(response)),\n        catchError((err) => of(new gameActions.LoadFilteredTeamsFail(err)))\n      )\n    )\n  );\n\n    // tslint:disable-next-line:member-ordering\n    @Effect()\n    changeTeam$: Observable<Action> = this.actions$.pipe(\n      ofType(gameActions.GameActionTypes.SetCurrentTeam),\n      tap(x => this.gameService.teamId = x),\n      mapTo(new gameActions.LoadFilteredGamesByTeam()),\n      tap(() => 'changed team')\n    );\n\n    // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadFilteredGamesByTeam$: Observable<Action> = this.actions$.pipe(\n    ofType(gameActions.GameActionTypes.LoadFilteredGamesByTeam),\n    concatMap((action) =>\n      of(action).pipe(\n        withLatestFrom(this.store.pipe(select(getCurrentTeam)))\n      )\n    ),\n    tap(([action, t]) => {\n      if (t) {\n        // console.log(t);\n        this.team = t;\n      } else {\n        this.team = undefined;\n      }\n    }),\n    switchMap((action) =>\n      this.gameService.filterGamesByTeam(this.team).pipe(\n        map((games) => new gameActions.LoadFilteredGamesByTeamSuccess(games)),\n        // tap(response => console.log(response)),\n        catchError((err) => of(new gameActions.LoadFilteredGamesByTeamFail(err)))\n      )\n    )\n  );\n\n}\n","import { Game } from \"../../domain/game\";\nimport * as fromGames from \"./index\";\n\n/* NgRx */\nimport { Action, Store } from \"@ngrx/store\";\nimport { Division } from \"app/domain/division\";\nimport { Team } from \"app/domain/team\";\nimport { Season } from \"app/domain/season\";\nimport { Standing } from \"app/domain/standing\";\nimport { PlayoffGame } from \"app/domain/playoffGame\";\n\nexport enum GameActionTypes {\n  ToggleGameCode = \"[Game] Toggle Game Code\",\n  LoadCurrentSeason = \"[Games] Load Current Season\",\n  SetCurrentSeason = \"[Games] Set Current Season\",\n  SetCurrentDivision = \"[Game] Set Current Division\",\n  SetCurrentDivisionId = \"[Game] Set Current DivisionId\",\n  SetCurrentTeam = \"[Game] Set Current Team\",\n  ClearCurrentGame = \"[Game] Clear Current Game\",\n  SetGames = \"[Games] Set Games\",\n  SetPlayoffGames = \"[Games] Set Playoff Games\",\n  SetDivisions = \"[Games] Set Divisions\",\n  SetTeams = \"[Games] Set Teams\",\n  SetAllTeams = \"[Games] Set AllTeams\",\n  InitializeCurrentGame = \"[Game] Initialize Current Game\",\n  Load = \"[Game] All Games Load\",\n  LoadSuccess = \"[Game] Load All Games Success\",\n  LoadFail = \"[Game] Load All Games Fail\",\n  LoadFilteredGames = \"[Game] Load Filtered Games\",\n  LoadFilteredGamesSuccess = \"[Game] Load Filtered Game Success\",\n  LoadFilteredGamesFail = \"[Game] Load Filtered Games Fail\",\n  LoadFilteredGamesByTeam = \"[Game] Load Filtered Games by Team\",\n  LoadFilteredGamesByTeamSuccess = \"[Game] Load Filtered Game by Team Success\",\n  LoadFilteredGamesByTeamFail = \"[Game] Load Filtered Games by Team Fail\",\n  LoadStandings = \"[Game] Load Standings\",\n  LoadStandingsSuccess = \"[Game] Load Standings Success\",\n  LoadStandingsFail = \"[Game] Load Standings Fail\",\n  LoadDivisions = \"[Game] Load Divisions\",\n  LoadDivisionsSuccess = \"[Game] Load Divisions Success\",\n  LoadDivisionsFail = \"[Game] Load Divisions Fail\",\n  LoadTeams = \"[Game] Load Teams\",\n  LoadTeamsSuccess = \"[Game] Load Teams Success\",\n  LoadTeamsFail = \"[Game] Load Teams Fail\",\n  LoadFilteredTeams = \"[Game] Load Filtered Teams\",\n  LoadFilteredTeamsSuccess = \"[Game] Load Filtered Teams Success\",\n  LoadFilteredTeamsFail = \"[Game] Load Filtered Teams Fail\",\n  SetCanEdit = \"[Game] Set Can Edit Scores\",\n  SetCurrentGame = \"[Game] Set Current Game\",\n  LoadPlayoffGames = \"[Game] Load Playoff Games\",\n  LoadPlayoffGamesSuccess = \"[Game] Load Playoff Games Success\",\n  LoadPlayoffGamesFail = \"[Game] Load Playoff Games Fail\",\n}\n\n// Action Creators\nexport class ToggleActionList implements Action {\n  readonly type = GameActionTypes.ToggleGameCode;\n  constructor(public pay: boolean) {}\n}\nexport class LoadCurrentSeason implements Action {\n  readonly type = GameActionTypes.LoadCurrentSeason;\n}\nexport class SetCurrentSeason implements Action {\n  readonly type = GameActionTypes.SetCurrentSeason;\n  constructor(public payload: Season | null) {\n  }\n}\nexport class SetCurrentDivision implements Action {\n  readonly type = GameActionTypes.SetCurrentDivision;\n  constructor(public payload: Division) {\n  }\n}\n\nexport class SetCurrentDivisionId implements Action {\n  readonly type = GameActionTypes.SetCurrentDivisionId;\n  constructor(public payload: number) {\n  }\n}\n\nexport class SetCurrentTeam implements Action {\n  readonly type = GameActionTypes.SetCurrentTeam;\n  constructor(public payload: Team) {}\n}\n\nexport class ClearCurrentGame implements Action {\n  readonly type = GameActionTypes.ClearCurrentGame;\n}\n\nexport class InitializeCurrentGame implements Action {\n  readonly type = GameActionTypes.InitializeCurrentGame;\n}\n\nexport class SetGames implements Action {\n  readonly type = GameActionTypes.SetGames;\n  constructor(public payload: Game[]) {}\n}\nexport class SetDivisions implements Action {\n  readonly type = GameActionTypes.SetDivisions;\n  constructor(public payload: Division[]) {}\n}\n\nexport class SetTeams implements Action {\n  readonly type = GameActionTypes.SetTeams;\n  constructor(public payload: Team[]) {}\n}\nexport class SetAllTeams implements Action {\n  readonly type = GameActionTypes.SetAllTeams;\n  constructor(public payload: boolean) {}\n}\n\nexport class Load implements Action {\n  readonly type = GameActionTypes.Load;\n}\n\nexport class LoadSuccess implements Action {\n  readonly type = GameActionTypes.LoadSuccess;\n  constructor(public payload: Game[]) {}\n}\n\nexport class LoadFail implements Action {\n  readonly type = GameActionTypes.LoadFail;\n\n  constructor(public payload: string) {}\n}\nexport class LoadFilteredGames implements Action {\n  readonly type = GameActionTypes.LoadFilteredGames;\n}\n\nexport class LoadFilteredGamesSuccess implements Action {\n  readonly type = GameActionTypes.LoadFilteredGamesSuccess;\n  constructor(public payload: Game[]) {}\n}\n\nexport class LoadFilteredGamesFail implements Action {\n  readonly type = GameActionTypes.LoadFilteredGamesFail;\n\n  constructor(public payload: string) {}\n}\n\nexport class LoadFilteredGamesByTeam implements Action {\n  readonly type = GameActionTypes.LoadFilteredGamesByTeam;\n}\n\nexport class LoadFilteredGamesByTeamSuccess implements Action {\n  readonly type = GameActionTypes.LoadFilteredGamesByTeamSuccess;\n  constructor(public payload: Game[]) {}\n}\n\nexport class LoadFilteredGamesByTeamFail implements Action {\n  readonly type = GameActionTypes.LoadFilteredGamesByTeamFail;\n  constructor(public payload: string) {}\n}\nexport class LoadStandings implements Action {\n  readonly type = GameActionTypes.LoadStandings;\n}\nexport class LoadStandingsSuccess implements Action {\n  readonly type = GameActionTypes.LoadStandingsSuccess;\n  constructor(public payload: Standing[]) {}\n}\n\nexport class LoadStandingsFail implements Action {\n  readonly type = GameActionTypes.LoadStandingsFail;\n\n  constructor(public payload: string) {}\n}\nexport class LoadDivisions implements Action {\n  readonly type = GameActionTypes.LoadDivisions;\n}\nexport class LoadDivisionsSuccess implements Action {\n  readonly type = GameActionTypes.LoadDivisionsSuccess;\n  constructor(public payload: Division[]) {\n  }\n}\nexport class LoadPlayoffGames implements Action {\n  readonly type = GameActionTypes.LoadPlayoffGames;\n}\nexport class LoadPlayoffGamesSuccess implements Action {\n  readonly type = GameActionTypes.LoadPlayoffGamesSuccess;\n\n  constructor(public payload: PlayoffGame[]) {}\n}\nexport class LoadPlayoffGamesFail implements Action {\n  readonly type = GameActionTypes.LoadPlayoffGamesFail;\n\n  constructor(public payload: string) {}\n}\n\nexport class SetPlayoffGames implements Action {\n  readonly type = GameActionTypes.SetPlayoffGames;\n  constructor(public payload: PlayoffGame[]) {}\n}\n\nexport class LoadDivisionsFail implements Action {\n  readonly type = GameActionTypes.LoadDivisionsFail;\n\n  constructor(public payload: string) {}\n}\nexport class LoadTeams implements Action {\n  readonly type = GameActionTypes.LoadTeams;\n}\nexport class LoadTeamsSuccess implements Action {\n  readonly type = GameActionTypes.LoadTeamsSuccess;\n  constructor(public payload: Team[]) {}\n}\nexport class LoadTeamsFail implements Action {\n  readonly type = GameActionTypes.LoadTeamsFail;\n  constructor(public payload: string) {}\n}\n\nexport class LoadFilteredTeams implements Action {\n  readonly type = GameActionTypes.LoadFilteredTeams;\n}\n\nexport class LoadFilteredTeamsSuccess implements Action {\n  readonly type = GameActionTypes.LoadFilteredTeamsSuccess;\n  constructor(public payload: Team[]) {}\n}\n\nexport class LoadFilteredTeamsFail implements Action {\n  readonly type = GameActionTypes.LoadFilteredTeamsFail;\n\n  constructor(public payload: string) {}\n}\n\nexport class SetCanEdit implements Action {\n  readonly type = GameActionTypes.SetCanEdit;\n  constructor(public payload: boolean) {}\n}\nexport class SetCurrentGame implements Action {\n  readonly type = GameActionTypes.SetCurrentGame;\n  constructor(public payload: Game) {}\n}\n\nexport type GameActions =\n  | ToggleActionList\n  | LoadCurrentSeason\n  | SetCurrentSeason\n  | SetCurrentDivision\n  | SetCurrentDivisionId\n  | SetCurrentTeam\n  | ClearCurrentGame\n  | InitializeCurrentGame\n  | SetGames\n  | SetDivisions\n  | SetTeams\n  | SetAllTeams\n  | Load\n  | LoadSuccess\n  | LoadFail\n  | LoadFilteredGames\n  | LoadFilteredGamesSuccess\n  | LoadFilteredGamesFail\n  | LoadFilteredGamesByTeam\n  | LoadFilteredGamesByTeamSuccess\n  | LoadFilteredGamesByTeamFail\n  | LoadStandings\n  | LoadStandingsSuccess\n  | LoadStandingsFail\n  | LoadPlayoffGames\n  | LoadPlayoffGamesSuccess\n  | LoadPlayoffGamesFail\n  | SetPlayoffGames\n  | LoadDivisions\n  | LoadDivisionsSuccess\n  | LoadDivisionsFail\n  | LoadTeams\n  | LoadTeamsSuccess\n  | LoadTeamsFail\n  | LoadFilteredTeams\n  | LoadFilteredTeamsSuccess\n  | LoadFilteredTeamsFail\n  | SetCanEdit\n  | SetCurrentGame;\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\n\nimport { Game } from \"../../domain/game\";\nimport { GameActions, GameActionTypes } from \"./games.actions\";\nimport { Division } from \"app/domain/division\";\nimport { Team } from \"app/domain/team\";\nimport { Season } from \"app/domain/season\";\nimport { Standing } from \"app/domain/standing\";\nimport { PlayoffGame } from 'app/domain/playoffGame';\n\nexport interface GameState {\n  currentSeason: Season | null;\n  currentSeasonId: number;\n  currentDivisionId: number | undefined;\n  currentDivision: Division | undefined;\n  currentTeamId: number | undefined;\n  currentTeam: Team | undefined;\n  games: Game[];\n  playoffGames: PlayoffGame[];\n  filteredGames: Game[];\n  filteredTeams: Team[];\n  standings: Standing[];\n  showListView: boolean;\n  divisions: Division[];\n  teams: Team[];\n  showAllteams: boolean;\n  canEdit: boolean;\n  currentGame: Game;\n}\n\nconst cd = 0, initialState: GameState = {\n  showListView: true,\n  currentSeasonId: 0,\n  currentSeason: {\n    seasonId: 0,\n    description: \"Summer Season\",\n    currentSeason: true,\n    currentSchedule: true,\n    gameSchedules: true,\n    onlineRegistration: false,\n  },\n  currentDivisionId: 0,\n  currentDivision: new Division(0,0,'',new Date(), new Date()),\n  currentTeamId: 0,\n  currentTeam: new Team(),\n  games: [],\n  playoffGames: [],\n  standings: [],\n  filteredGames: [],\n  filteredTeams: [],\n  divisions: [],\n  teams: [],\n  showAllteams: true,\n  canEdit: false,\n  currentGame: new Game( 0, 0, 0, 0 )\n\n};\n\nexport function reducer(state = initialState, action: GameActions): GameState {\n  switch (action.type) {\n    case GameActionTypes.SetCurrentSeason:\n      return {\n        ...state,\n        currentSeason: action.payload,\n      };\n    case GameActionTypes.SetCurrentDivision:\n      return {\n        ...state,\n        currentDivision: action.payload,\n      };\n    case GameActionTypes.SetCurrentDivisionId:\n      return {\n        ...state,\n        currentDivisionId: action.payload,\n      };\n\n    case GameActionTypes.SetCurrentTeam:\n      return {\n        ...state,\n        currentTeam: action.payload,\n      };\n    case GameActionTypes.SetGames:\n      return {\n        ...state,\n        games: action.payload,\n      };\n    case GameActionTypes.SetDivisions:\n      return {\n        ...state,\n        divisions: action.payload,\n      };\n    case GameActionTypes.SetTeams:\n      return {\n        ...state,\n        teams: action.payload,\n      };\n    case GameActionTypes.SetAllTeams:\n      return {\n        ...state,\n        showAllteams: action.payload,\n      };\n    case GameActionTypes.LoadDivisionsSuccess:\n      return {\n        ...state,\n        divisions: action.payload,\n      };\n    case GameActionTypes.LoadTeamsSuccess:\n      return {\n        ...state,\n        teams: action.payload,\n      };\n    case GameActionTypes.LoadSuccess:\n      return {\n        ...state,\n        games: action.payload,\n      };\n    case GameActionTypes.LoadFilteredGamesSuccess:\n      return {\n        ...state,\n        filteredGames: action.payload,\n      };\n      case GameActionTypes.LoadFilteredGamesByTeamSuccess:\n      return {\n        ...state,\n        filteredGames: action.payload,\n      };\n      case GameActionTypes.LoadFilteredTeamsSuccess:\n        return {\n          ...state,\n          filteredTeams: action.payload,\n        };\n      case GameActionTypes.LoadStandingsSuccess:\n      return {\n        ...state,\n        standings: action.payload,\n      };\n    case GameActionTypes.SetCanEdit:\n      return {\n        ...state,\n        canEdit: action.payload,\n      };\n    case GameActionTypes.SetCurrentGame:\n      return {\n        ...state,\n        currentGame: action.payload,\n      };\n    case GameActionTypes.SetPlayoffGames:\n      return {\n        ...state,\n        playoffGames: action.payload,\n      };\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  createFeatureSelector,\n  createSelector} from '@ngrx/store';\nimport * as fromRoot from '@app/state/app.state';\nimport * as fromGames from './games.reducer';\n\nexport interface State extends fromRoot.State {\n  games: fromGames.GameState;\n}\n\nconst getGameFeatureState = createFeatureSelector<fromGames.GameState>('games');\n\nexport const getCurrentSeason = createSelector(\n  getGameFeatureState,\n  state => state.currentSeason\n);\nexport const getCurrentDivision = createSelector(\n  getGameFeatureState,\n  state => state.currentDivision\n);\n\nexport const getCurrentDivisionId = createSelector(\n  getGameFeatureState,\n  state => state.currentDivisionId\n);\nexport const getCurrentTeam = createSelector(\n  getGameFeatureState,\n  state => state.currentTeam\n);\n\nexport const getCurrentTeamId = createSelector(\n  getGameFeatureState,\n  state => state.currentTeamId\n);\n\nexport const getGames = createSelector(\n  getGameFeatureState,\n  state => state.games\n);\n\nexport const getPlayoffGames = createSelector(\n  getGameFeatureState,\n  state => state.games\n);\n\nexport const getDivisions = createSelector(\n  getGameFeatureState,\n  state => state.divisions\n);\nexport const getTeams = createSelector(\n  getGameFeatureState,\n  state => state.teams\n);\nexport const getAllTeams = createSelector(\n  getGameFeatureState,\n  state => state.showAllteams\n);\nexport const getFilteredGames = createSelector(\n  getGameFeatureState,\n  state => state.filteredGames\n);\n\nexport const getFilteredGamesByTeam = createSelector(\n  getGameFeatureState,\n  state => state.filteredGames\n);\n\nexport const getFilteredTeams = createSelector(\n  getGameFeatureState,\n  state => state.filteredTeams\n);\n\nexport const getStandings = createSelector(\n  getGameFeatureState,\n  state => state.standings\n);\nexport const getCanEdit = createSelector(\n  getGameFeatureState,\n  state => state.canEdit\n);\nexport const getCurrentGame = createSelector(\n  getGameFeatureState,\n  state => state.currentGame\n)\n","import { Component, OnInit, Input } from '@angular/core';\nimport { WebContent } from '@app/domain/webContent';\nimport { Content } from 'app/domain/content';\n\n@Component({\n  selector: 'csbc-announcement',\n  templateUrl: './announcement.component.html',\n  styleUrls: ['../../home.component.scss'],\n})\nexport class AnnouncementComponent implements OnInit {\n  @Input() info!: WebContent;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  hideLocationAndDateTime() {\n    return (this.info.location=== null && this.info.dateAndTime === null );\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title>{{ info.title }}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <div class=\"sub-title\">{{ info.subTitle }}</div>\n    <div class=\"text-center\">\n      <span>{{ info.body }}</span>\n    </div>\n    <div class=\"infoLocation\" [hidden] = \"hideLocationAndDateTime()\">\n      <div class=\"text-center\" [hidden]=\"!info.location\">\n        Location: {{ info.location }}\n      </div>\n      <div class=\"text-center\" [hidden]=\"!info.dateAndTime\">\n        Date/Time: {{ info.dateAndTime }}\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { Content } from '../../../domain/content';\nimport { ContentService } from '../../../admin/content/content.service';\nimport * as moment from 'moment';\nimport { Store } from '@ngrx/store';\n\nimport * as fromHome from '../../state/';\n//import * as homeActions from '../../state/home.actions';\nimport { map, tap, groupBy } from 'rxjs/operators';\nimport { WebContent } from '../../../domain/webContent';\n\n@Component({\n  selector: 'csbc-announcements',\n  templateUrl: './announcements.component.html',\n  styleUrls: ['./announcements.component.scss'],\n})\nexport class CsbcAnnouncementsComponent implements OnInit {\n@Input() info!: string;\n  seasonInfoCount = 0 as number;\n  latestNewsCount!: number;\n  meetingNoticeCount!: number;\n  activeWebContent!: WebContent[];\n  errorMessage!: string;\n  content$ = this.store.select(fromHome.getContent).pipe(\n    map(result => result.filter(c => c.webContentTypeDescription === 'Season Info' || c.webContentTypeDescription === 'Event')),\n    map(t => t.sort(this.sortByContentSequence))\n  );\n\n  constructor(\n    private _webContentService: ContentService,\n    private store: Store<fromHome.State>\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  sortByContentSequence(a: { contentSequence: number; },b: { contentSequence: number; }) {\n    if (a.contentSequence < b.contentSequence)\n      return -1;\n    if (a.contentSequence > b.contentSequence)\n      return 1;\n    return 0;\n  }\n  getWebContent(): void {\n    this.activeWebContent = [];\n    this.store.select(fromHome.getContent).subscribe(\n      (webContents) => {\n        if (webContents !== undefined) {\n          const today = moment();\n          console.log(webContents);\n          for (let i = 0; i < webContents.length; i++) {\n              // console.log(webContents[i]);\n              this.activeWebContent.push(webContents[i]);\n          }\n        }\n        // this.activeWebContent = webContents;\n        console.log(this.activeWebContent);\n      },\n      (error) => (this.errorMessage = <any>error)\n    );\n  }\n  showNews(): boolean {\n    return this.latestNewsCount > 0;\n  }\n  showSeasonInfo(): boolean {\n    return this.seasonInfoCount > 0;\n  }\n\n  setImageClass(): string {\n    if (this.showSidebar()) {\n      return 'col-sm-9';\n    } else {\n      return 'col-sm-12 center-block';\n    }\n  }\n  showSidebar(): boolean {\n    return this.meetingNoticeCount > 0;\n  }\n  setSeasonInfoClass() {\n    return 'col-8 offset-4 col-xs-12';\n  }\n\n  setNewsClass(): string {\n    if (this.showSeasonInfo() || this.latestNewsCount > 0) {\n      return 'col-sm-10 offset-sm-1 col-xs-12';\n    } else {\n      return 'col-sm-10 offset-sm-1 col-xs-12';\n    }\n  }\n  setSeasonListClass(): string {\n    if (this.seasonInfoCount > 1) {\n      return 'showMultiItemList';\n    } else\n    {\n      return ''\n    }\n  }\n}\n","<div id=\"contentText\" class=\"row\">\n  <div [ngClass]=\"setNewsClass()\">\n    <div *ngFor=\"let info of content$ | async\" class=\"announcements\">\n      <csbc-announcement [info]=\"info\"></csbc-announcement>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'csbc-home-center',\n  template: `<div class=\"tag\">\n  <h4 id=\"BestGame\" class=\"tag-line\">\n    CSBC Where the Best Game is Played!!!\n  </h4>\n</div>`\n,\n  styleUrls: ['../../home.component.scss']\n})\nexport class HomeCenterComponent implements OnInit {\n  coverImage: string;\n  constructor () {\n    this.coverImage = '../../../assets/images/sky.jpg';\n  }\n\n  ngOnInit () {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Content } from '../../../domain/content';\nimport { ContentService } from '../../../services/content.service';\nimport { map, tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport * as fromHome from '../../state';\nimport { WebContent } from '../../../domain/webContent';\n\n@Component({\n  selector: 'csbc-home-sidebar',\n  templateUrl: './home-sidebar.component.html',\n  styleUrls: ['./home-sidebar.component.scss'],\n})\nexport class CsbcHomeSidebarComponent implements OnInit {\n  boardMeetingMessage: string;\n  activeWebContent: WebContent[] | undefined;\n  errorMessage: string | undefined;\n  // content = this._webContentService\n  //   .getContents()\n  //   .pipe(map((results) => results.filter((r) => r.webContentTypeId === 3)));\n  content$ = this.store\n    .select(fromHome.getContent)\n    .pipe(map((result) => result.filter((c) => c.webContentTypeDescription === 'Meeting')),\n    // tap (result => console.log(result)\n    );\n\n  constructor(\n    private _webContentService: ContentService,\n    private store: Store<fromHome.State>\n  ) {\n    this.boardMeetingMessage = 'Board Meeting';\n  }\n\n  ngOnInit() {\n    // this.content$.subscribe((result) => console.log(result));\n  }\n}\n","<section class=\"sidebar\">\n  <div class=\"\">\n    <!--<h4 class=\"text-center text-info\">{{boardMeetingMessage}}</h4>-->\n    <div *ngFor=\"let info of content$ | async\">\n        <csbc-meeting [info]=\"info\"></csbc-meeting>\n    </div>\n  </div>\n</section>","import { Component, OnInit, Input } from '@angular/core';\nimport { Content } from 'app/domain/content';\nimport { WebContent } from '../../../domain/webContent';\n\n@Component({\n  selector: 'csbc-meeting',\n  templateUrl: './meeting.component.html',\n  styleUrls: ['./meeting.component.scss']\n})\nexport class MeetingComponent implements OnInit {\n@Input() info: WebContent;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n      <mat-card-title>{{ info.title }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"sub-title\">{{ info.subTitle }}</div>\n      <div class=\"text-center\" style=\"padding-left:24px;padding-right:24px;padding-top:12px;\">\n        <span>{{ info.body }}</span>\n      </div>\n      <div class=\"text-center\" [hidden]=\"!info.location\">\n        Location: {{ info.location }}\n      </div>\n      <div class=\"text-center\" [hidden]=\"!info.dateAndTime\">\n        Date/Time: {{ info.dateAndTime }}\n        \n      </div>\n    </mat-card-content>\n  </mat-card>","import { Component, OnInit } from '@angular/core';\n\nimport { Content } from '../domain/content';\nimport { ContentService } from '../services/content.service';\nimport { SeasonService } from '../services/season.service';\nimport * as fromHome from './state';\nimport * as homeActions from './state/home.actions';\nimport { Store, select } from '@ngrx/store';\nimport { map, count } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { WebContent } from '../domain/webContent';\n\nimport * as gameActions from '../games/state/games.actions';\nimport * as fromGames from '../games/state';\n\n@Component({\n  selector: 'csbc-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  coverImage: string;\n  seasonInfoCount: number;\n  latestNewsCount: number;\n  meetingNoticeCount: number;\n  topImage: string;\n  errorMessage: string | undefined;\n\n  activeWebContent: any[] | undefined;\n  webContents: WebContent[] | undefined;\n  //   currentSeason$ = this.seasonService.getCurrent();\n  content$ = this.store.select(fromHome.getContent);\n  showSidebar$ = of(true);\n  meetingNotices$: Observable<WebContent[]> | undefined;\n\n  showSidebar = false;\n  imageClass = 'col-sm-8 offset-sm-2 col-12';\n  meetingNoticeClass = 'col-sm-0 col-xs-0';\n\n  constructor(\n    private _contentService: ContentService,\n    private seasonService: SeasonService,\n    private store: Store<fromHome.State>,\n    private gameStore: Store<fromGames.State>\n  ) {\n    // this.store.dispatch(new homeActions.LoadContent);\n    this.seasonInfoCount = 1;\n    this.latestNewsCount = 0;\n    this.meetingNoticeCount = 0;\n    this.coverImage = 'images/sky.jpg';\n    this.topImage = '../../assets/images/CSBCTopImage.jpg';\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(new homeActions.LoadContent());\n    this.meetingNotices$ = this.content$.pipe(\n      map((results) =>\n        results.filter((r) => r.webContentTypeDescription === 'Meeting')\n      )\n    );\n    this.setImageClass();\n    this.gameStore.dispatch(new gameActions.LoadCurrentSeason());\n    this.gameStore.select(fromGames.getCurrentSeason).subscribe((season) => {\n      if (season !== null) {\n        this.gameStore.dispatch(new gameActions.LoadDivisions());\n        this.store.dispatch(new gameActions.LoadTeams());\n        this.store.dispatch(new gameActions.Load());\n      }\n    });\n\n    this.gameStore.select(fromGames.getCurrentSeason).subscribe((season) => {\n      if (season?.seasonId !== 0) {\n        this.gameStore.select(fromGames.getDivisions).subscribe((divisions) => {\n          if (divisions.length > 0) {\n            this.gameStore\n              .select(fromGames.getCurrentDivision)\n              .subscribe((division) => {\n                // if (division === undefined || division.seasonId === 0) {\n                //   console.log('about to dispatch');\n                //   this.gameStore.dispatch(\n                //     new gameActions.SetCurrentDivision(divisions[0])\n                //   );\n                //   // this.gameStore.dispatch(new gameActions.LoadFilteredTeams());\n                // }\n              });\n          }\n        });\n      }\n    });\n  }\n\n  showSeasonInfo(): boolean {\n    return this.seasonInfoCount > 0;\n  }\n\n  setImageClass(): void {\n    this.meetingNotices$!.subscribe((results) => {\n      this.showSidebar = results.length > 0;\n      if (results.length > 0) {\n        this.imageClass = 'col-sm-8 col-md-9 col-12';\n        this.meetingNoticeClass = 'col-sm-4 col-md-3 col-12';\n      } else {\n        this.imageClass = 'col-sm-8 offset-sm-2 col-12';\n        this.meetingNoticeClass = 'col-0';\n      }\n    });\n  }\n\n  setSeasonInfoClass() {\n    if (this.showNews()) {\n      return 'col-sm-6 col-xs-12';\n    } else {\n      return 'col-sm-8 col-sm-offset-2 col-12';\n    }\n  }\n\n  //   setMeetingNoticeClass(): void {\n  //     if (this.showSidebar()) {\n  //       return 'col-sm-3 col-xs-12';\n  //     } else {\n  //       return 'col-sm-0 col-xs-0';\n  //     }\n  //   }\n\n  setSeasonListClass(): string {\n    return this.seasonInfoCount > 1 ? 'showMultiItemList' : '';\n  }\n\n  setNewsClass(): string {\n    return this.showSeasonInfo() || this.latestNewsCount > 0\n      ? 'col-sm-6 col-sm-offset-0 col-xs-12'\n      : 'col-sm-8 col-sm-offset-2  col-xs-12';\n  }\n\n  showNews(): boolean {\n    return this.latestNewsCount > 0;\n  }\n}\n","<div class=\"home-wrapper\">\n  <div class=\"row center-top\">\n    <div id=\"header\">\n      <div id=\"logo\">\n        <a href=\"index.html\">\n          <img [src]=\"topImage\" alt=\" \" class=\"img-responsive\" />\n        </a>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n      <csbc-home-center class=\"col-sm-6 offset-sm-3 col-12 tag\"></csbc-home-center>\n  </div>\n  <div class=\"row\">\n    <div [ngClass]=\"meetingNoticeClass\" [hidden]=\"!showSidebar\">\n      <csbc-home-sidebar></csbc-home-sidebar>\n    </div>\n    <!-- <div class=\"row\"> -->\n    <div [ngClass]=\"imageClass\">\n      <div class=\"row align-items-center\">\n          <csbc-announcements class=\"announcements\" Í></csbc-announcements>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n      <div class=\"col-sm-6 offset-sm-3 col-12\">\n        <div class=\"manny\">Manny Rosa - forever in our hearts at CSBC </div>\n      </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '../core/core.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ContentService } from '../services/content.service';\nimport { HomeComponent } from './home.component';\nimport { HomeCenterComponent } from './components/home-center/home-center.component';\nimport { CsbcAnnouncementsComponent } from './components/announcements/announcements.component';\nimport { CsbcHomeSidebarComponent } from './components/home-sidebar/home-sidebar.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './state/home.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { HomeEffects } from './state/home.effects';\nimport { AnnouncementComponent } from './components/announcement/announcement.component';\nimport { MeetingComponent } from './components/meeting/meeting.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    CoreModule,\n    StoreModule.forFeature('home', reducer),\n    EffectsModule.forFeature([HomeEffects])\n  ],\n  declarations: [\n    HomeComponent,\n    HomeCenterComponent,\n    CsbcAnnouncementsComponent,\n    CsbcHomeSidebarComponent,\n    AnnouncementComponent,\n    MeetingComponent,\n\n  ],\n  providers: [\n     ContentService\n  ]\n})\nexport class HomeModule { }\n","import { Action } from '@ngrx/store';\nimport { Content } from 'app/domain/content';\nimport { WebContent } from '../../domain/webContent';\n\nexport enum HomeActionTypes {\n  LoadContent = '[Home] Load Content',\n  LoadContentSuccess = '[Home] Load Content Success',\n  LoadContentFail = '[Home] Load Content Fail',\n}\n\nexport class LoadContent implements Action {\n  readonly type = HomeActionTypes.LoadContent;\n}\nexport class LoadContentSuccess implements Action {\n  readonly type = HomeActionTypes.LoadContentSuccess;\n  constructor(public payload: WebContent[]) {\n  }\n}\n\nexport class LoadContentFail implements Action {\n  readonly type = HomeActionTypes.LoadContentFail;\n  constructor(public payload: string) {}\n}\n\nexport type HomeActions =\n| LoadContent\n| LoadContentSuccess\n| LoadContentFail;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport * as homeActions from './home.actions';\nimport * as fromHome from './';\n\nimport {\n  map,\n  switchMap,\n  mergeMap,\n  catchError,\n  concatMap,\n  withLatestFrom,\n  tap,\n  shareReplay,\n} from 'rxjs/operators';\nimport { Store, Action, select } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\n// import { ContentService } from '../../services/content.service';\nimport { DataService } from '../../services/data.service';\nimport { Content } from 'app/domain/content';\nimport { HttpClient } from '@angular/common/http';\nimport { WebContent } from 'app/domain/webContent';\n\n@Injectable()\nexport class HomeEffects {\n  seasonId: number;\n  gameUrl: string | undefined;\n  divisionStartUrl: string;\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    //    private contentService: ContentService,\n    private dataService: DataService,\n    private store: Store<fromHome.State>\n  ) {}\n  // tslint:disable-next-line:member-ordering\n  @Effect()\n  loadContent$: Observable<Action> = this.actions$.pipe(\n    ofType(homeActions.HomeActionTypes.LoadContent),\n    mergeMap(action =>\n      this.http.get<WebContent[]>(this.dataService.getActiveWebContentUrl).pipe(\n        map(content => new homeActions.LoadContentSuccess(content)),\n        // tap(content => console.log(content)),\n        catchError((err) => of(new homeActions.LoadContentFail(err)))\n      )\n    )\n  );\n}\n","import { HomeActions, HomeActionTypes } from './home.actions';\nimport { Content } from 'app/domain/content';\nimport { WebContent } from '../../domain/webContent';\n\nexport interface HomeState {\n  content: WebContent[];\n}\n\nconst initialState: HomeState = {\n  content: [],\n};\n\nexport function reducer(state = initialState, action: HomeActions): HomeState {\n  switch (action.type) {\n    case HomeActionTypes.LoadContentSuccess:\n      return {\n        ...state,\n        content: action.payload,\n      };\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n    createFeatureSelector,\n    createSelector,\n    ActionReducerMap\n  } from '@ngrx/store';\n  import * as fromRoot from '@app/state/app.state';\n  import * as fromHome from './home.reducer';\n  \n  export interface State extends fromRoot.State {\n    home: fromHome.HomeState;\n  }\n\n  const getHomeFeatureState = createFeatureSelector<fromHome.HomeState>(\n    'home'\n  );\n  \n  export const getContent = createSelector(\n    getHomeFeatureState,\n    state => state.content\n  );\n  ","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthService }          from './auth.service';\nimport { LoginComponent }       from './login.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst loginRoutes: Routes = [\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(loginRoutes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    AuthGuard,\n    AuthService\n  ]\n})\nexport class LoginRoutingModule {}","import { Component }   from '@angular/core';\nimport { Router }      from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  template: `\n    <h2>LOGIN</h2>\n    <p>{{message}}</p>\n    <p>\n      <button (click)=\"login()\"  *ngIf=\"!authService.isLoggedIn\">Login</button>\n      <button (click)=\"logout()\" *ngIf=\"authService.isLoggedIn\">Logout</button>\n    </p>`\n})\nexport class LoginComponent {\n  message: string;\n\n  constructor(public authService: AuthService, public router: Router) {\n    this.setMessage();\n  }\n\n  setMessage() {\n    this.message = 'Logged ' + (this.authService.isLoggedIn ? 'in' : 'out');\n  }\n\n  login() {\n    this.message = 'Trying to log in ...';\n\n    this.authService.login().subscribe(() => {\n      this.setMessage();\n      if (this.authService.isLoggedIn) {\n        // Get the redirect URL from our auth service\n        // If no redirect has been set, use the default\n        let redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/crisis-center/admin';\n\n        // Redirect the user\n        this.router.navigate([redirect]);\n      }\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.setMessage();\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-csbc-photos',\n  templateUrl: './csbc-photos.component.html',\n  styleUrls: ['./csbc-photos.component.css']\n})\nexport class CsbcPhotosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"col-sm-10 col-sm-offset-0\">\n\n    <div id=\"blackbox\">\n        <iframe align=\"top\" src=\"http://www.flickr.com/slideShow/index.gne?user_id=52334882@N07&tags=fall2011\" width=\"650\" height=\"500\" frameborder=\"0\" scrolling=\"no\"></iframe>\n        <br />\n        <!--<center><small>Created with <a href=\"http://www.flickrslideshow.com\">flickr slideshow</a>.</small></center>-->\n    </div>\n</div>","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\n\nexport interface State {\n\n}\n\nexport const reducers: ActionReducerMap<State> = {\n\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { Observable } from 'rxjs';\n","import { Injectable } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport '../rxjs-extensions';\n\nimport { Content } from '../domain/content';\nimport { DataService } from './data.service';\nimport { WebContent } from '../domain/webContent';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ContentService {\n  private _webContentUrl: string;\n  getActiveContent$ = this._http.get<WebContent[]>(\n    this.dataService.getActiveWebContentUrl\n  );\n  constructor(private _http: HttpClient, public dataService: DataService) {\n    this._webContentUrl = this.dataService.getActiveWebContentUrl;\n  }\n\n  getContents(): Observable<WebContent[]> {\n    return this._http\n      .get<WebContent[]>(this.dataService.getActiveWebContentUrl);\n  }\n\n  // getContent(id: number): Observable<WebContent> {\n  //   return this.getContents().pipe(\n  //     map((content: WebContent[]) => content.find((p) => p.webContentId === id))\n  //   );\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Division } from '@app/domain/division';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Constants } from '@app/shared/constants';\n\n@Injectable()\nexport class DataService {\n  webUrl: string;\n  baseUrl = Constants.DEFAULTURL;\n  dotNetCoreUrl: string;\n  getActiveWebContentUrl: string;\n  loginUrl = this.baseUrl + '/api/User/login';\n  directorUrl = this.baseUrl + '/api/Director';\n  seasonGamesUrl = this.baseUrl + '/api/Schedulegame/getSeasonGames';\n\n  constructor (private _http: HttpClient) {\n    this.webUrl = environment.apiUrl;\n    // console.log(environment.apiUrl);\n    // this.webUrl = 'http://csbc-webapi.azurewebsites.net';\n    // this.webUrl = 'https://apicsbc.azurewebsites.net';\n    this.dotNetCoreUrl = environment.apiUrl;\n    this.getActiveWebContentUrl = this.dotNetCoreUrl + '/api/webcontent/getActiveWebContent';\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      // console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n  log (arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { map, tap } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport '../rxjs-extensions';\n\nimport { Division } from '../domain/division';\nimport { Season } from '../domain/season';\nimport { DataService } from './data.service';\nimport { SeasonService } from './season.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\n\nimport * as fromAdmin from '../admin/state';\n\n@Injectable()\nexport class DivisionService {\n  private divisionUrl =\n    this.dataService.webUrl + '/api/division/GetSeasonDivisions/';\n\n  private season: Season | undefined;\n  private _seasonId!: number;\n  // divisionUrl: string;\n  get seasonId() {\n    return this._seasonId;\n  }\n  set seasonId(seasonId: number) {\n    this._seasonId = seasonId;\n  }\n  // divisions: Division[];\n  private selectedSeason$ = this.store.pipe(select(fromAdmin.getSeasons));\n\n  // private _divisions$ = this._http\n  //   .get<Division[]>(this.divisionUrl + this.selectedSeason$)\n  //   .pipe(\n  //     map(divisions =>\n  //       divisions.map(\n  //         division =>\n  //           ({\n  //             ...division\n  //           } as Division)\n  //       )\n  //     ),\n  //     tap(data => console.log('All: ' + JSON.stringify(data))),\n  //     catchError(this.dataService.handleError('getSeasonDivisions', null))\n  //   );\n  divisions$ =\n    // return this._divisions$;\n    this._http\n    .get<Division[]>(this.divisionUrl + this.selectedSeason$)\n    .pipe(\n      map(divisions =>\n        divisions.map(\n          division =>\n            ({\n              ...division\n            } as Division)\n        )\n      ),\n      // tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.dataService.handleError('getSeasonDivisions', null))\n    );\n\n  // public set divisions$(value) {\n  //   this._divisions$ = value;\n  // }\n  constructor(\n    private _http: HttpClient,\n    public dataService: DataService,\n    public seasonService: SeasonService,\n    private store: Store<fromAdmin.State>\n  ) {\n    //      SeasonService.getCurrent().subscribe(season => (this.season = season));\n    //  SeasonService.selectedSeason..currentSeason.subscribe(\n    //  season =>\n    // this.seasonId = SeasonService.selectedSeason.seasonID;\n    // this._divisionUrl =\n    //   this.DataService.webUrl +\n    //   '/api/division/GetSeasonDivisions/' +\n    //   this.season.seasonID;\n  }\n\n  getDivisions(seasonId: number): Observable<Division[]> {\n    // console.log(seasonId);\n    if (seasonId === undefined) {\n      seasonId = 2202;\n    }\n    // this._divisionUrl =\n    //   this.dataService.webUrl + '/api/division/GetSeasonDivisions/' + seasonId;\n    return this._http.get<Division[]>(this.divisionUrl + seasonId).pipe(\n      // map((response: Response) => <Division[]>),\n      // tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.dataService.handleError('getSeasonDivisions', []))\n    );\n  }\n\n  getSeasonDivisions(season: Observable<Season>): Observable<Division[]> {\n    // console.log(season);\n    season.subscribe(\n      d =>\n        (this.divisionUrl =\n          this.dataService.webUrl +\n          '/api/division/GetSeasonDivisions/' +\n          d.seasonId)\n    );\n    this.seasonId = 2193;\n    if (season !== undefined) {\n      if (this.season !== undefined && this.season.seasonId == undefined) {\n        this.seasonId = 2193;\n      } else {\n        season.subscribe(s => (this.seasonId = s.seasonId));\n      }\n    }\n    if (this.seasonId === undefined) {\n      this.seasonId = 2193;\n    }\n    this.divisionUrl =\n      this.dataService.webUrl + '/api/division/GetSeasonDivisions/2083'; // + this.seasonId;\n    return this._http.get<Division[]>(this.divisionUrl).pipe(\n      // map((response: Response) => <Division[]>),\n      // tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.dataService.handleError('getSeasonDivisions', []))\n    );\n  }\n  getSelectedSeasonDivisions() {\n    this.selectedSeason$.subscribe(season => {\n      return this._http.get<Division[]>(this.divisionUrl + season);\n      // tap(data => console.log('All: ' + JSON.stringify(data))),\n        catchError(this.dataService.handleError('getSeasonDivisions', null));\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map, tap, shareReplay } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport '../rxjs-extensions';\n\nimport { Season } from '../domain/season';\nimport { DataService } from './data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class SeasonService {\n  private _seasonUrl = this.dataService.webUrl + '/api/season/getCurrentSeason';\n  private _seasonsUrl = this.dataService.webUrl + '/api/season/GetAll';\n  public currentSeason!: Observable<Season>;\n  // private selectedSeason = new Subject<Season>();\n  selectedSeason: Season | undefined;\n  public selectedSeason$: Observable<Season>;\n  seasons: Season[] | undefined;\n  seasons$ = this.http.get<Season[]>(this._seasonsUrl).pipe(\n    // tap(data => console.log('All seasons: ' + JSON.stringify(data))),\n    shareReplay(1),\n    // catchError(this.dataService.handleError)\n  );\n\n  currentSeason$ =\n  this.http.get<Season>(this._seasonUrl).pipe(\n    map(season => season as Season),\n    // tap(data => console.log('All: ' + JSON.stringify(data))),\n    catchError(this.dataService.handleError('getCurrentSeason', null))\n  );\n\n  constructor(private http: HttpClient, public dataService: DataService) {\n\n    // .currentSeason = this.getCurrent();\n    this.selectedSeason$ = this.currentSeason;\n    // this.currentSeason.toPromise()\n    //   .then((result) => this.selectedSeason = result);\n  }\n\n  setSelectedSeason(season: Observable<Season>) {\n    this.selectedSeason$ = season;\n  }\n  getSeasons(): Observable<Season[]> {\n    return this.http.get<Season[]>(this._seasonsUrl).pipe(\n      map(response => this.seasons as Season[]),\n      //     tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.dataService.handleError('getSeasons', []))\n    );\n  }\n\n  getSeason(id: number): Observable<Season> {\n    return this.getSeasons().pipe(\n      map((season: Season[]) => season.find(p => p.seasonId === id) as Season)\n    );\n  }\n\n  // getCurrent(): Observable<Season> {\n  //   return this.http.get<Season>(this._seasonUrl).pipe(\n  //      map(response => {\n  //        this.selectedSeason = response as Season;\n  //        console.log(response);\n  //       }),\n  //     tap(data => (this.selectedSeason = data)),\n  //     tap(data => console.log('All: ' + JSON.stringify(data))),\n  //     catchError(this.dataService.handleError('getCurrentSeason', null))\n  //   );\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport '../rxjs-extensions';\n\nimport * as fromGames from '../games/state';\nimport * as gameActions from '../games/state/games.actions';\nimport * as fromUser from '@app/user/state';\nimport { Store, select } from '@ngrx/store';\n\nimport { Team } from '../domain/team';\nimport { DataService } from './data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Constants } from '@app/shared/constants';\n\n@Injectable()\nexport class TeamService {\n  seasonId: number | undefined; // = 2192; // TO DO make this is passed in!\n  currentSeason$ = this.store.select(fromGames.getCurrentSeason).subscribe({\n    next: (season) => {\n      // console.log(season);\n      if (season !== undefined && season !== null) {\n        this.seasonId = season.seasonId;\n      }\n    },\n  });\n\n  teams!: Team[];\n\n  private teamUrl = this.dataService.webUrl + '/api/Team/getSeasonTeams/';\n\n  constructor(\n    private _http: HttpClient,\n    public dataService: DataService,\n    private store: Store<fromGames.State>\n  ) {}\n\n  getTeams(): Observable<Team[]> {\n    return this._http.get<Team[]>(this.teamUrl + this.seasonId).pipe(\n      map((teams) => {\n        return teams;\n      }),\n      // tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.dataService.handleError('getTeams', []))\n    );\n  }\n  filterTeamsByDivision(div: number): Observable<Team[]> {\n    let filteredTeams: Team[] = [];\n    const teamId: number = 0;\n    const divisionId: number = 0;\n    const name: string = Constants.ALLTEAMS;\n    const teamName: string = Constants.ALLTEAMS;\n    const teamNumber: string = '0';\n    const team = new Team(teamId, divisionId, teamName, teamNumber);\n    filteredTeams.push(team);\n\n    this.store.pipe(select(fromGames.getTeams)).subscribe((allTeams) => {\n      allTeams.forEach((element) => {\n        if (element.divisionId === div) {\n          filteredTeams.push(element);\n        }\n      });\n    });\n    return of(filteredTeams);\n  }\n\n  // getTeam(id: number): Observable<Team> {\n  //     return this.getTeams()\n  //         .pipe(\n  //         map((content: Team[]) => content.find(p => p.id === id))\n  //         );\n  // }\n}\n","import {environment} from '../../environments/environment';\nexport class Constants {\n  public static ALLTEAMS = 'All Teams';\n  public static DEFAULTURL = environment.apiUrl;\n\n  /* literals */\n  public static GAMESMENU = 'Games';\n  public static PHOTOMENU = 'Photos';\n  public static CONTACTSMENU = 'Contacts';\n  public static CLUBDOCSMENU = 'Club Docs';\n  public static ADMINMENU = 'Admin';\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-csbc-card',\n  templateUrl: './csbc-card.component.html',\n  styleUrls: ['./csbc-card.component.scss']\n})\nexport class CsbcCardComponent implements OnInit {\n  @Input()\n  title!: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"panel panel-default\" >\n  <div class=\"panel-heading\">\n      <div class=\"panel-title\">{{title}}</div>\n  </div>\n  <div class=\"panel-body\">\n\n  </div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Division } from '@app/domain/division';\nimport { Observable } from 'rxjs';\nimport { Content } from '@angular/compiler/src/render3/r3_ast';\n\n@Component({\n  selector: 'csbc-division-select',\n  templateUrl: './division-select.component.html',\n  styleUrls: ['./division-select.component.css']\n})\nexport class DivisionSelectComponent implements OnInit {\n  @Input()\n  divisions$!: Observable<Division[]>;\n@Input() division: Division | undefined;\n@Output() selectedDivision = new EventEmitter<Division>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onClick(division: Division) {\n    this.selectedDivision.emit(division);\n    // console.log(division);\n  }\n\n}\n","<div>\n  <label>Division</label>\n  <select\n    name=\"division\"\n    class=\"form-control\"\n    [(ngModel)]=\"selectedDivision\"\n    \n  >\n    <option *ngFor=\"let division of divisions$ | async\" [ngValue]=\"division\">\n      {{ division.divisionDescription }}\n    </option>\n  </select>\n</div>\n\n<!-- (click)=\"onClick(selectedDivision)\" -->\n","import { Component, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog';\nimport { AuthService } from 'app/user/auth.service';\nimport {\n  FormControl,\n  FormGroup,\n  FormArray,\n  FormBuilder,\n  Validators\n} from '@angular/forms';\nimport * as userActions from '../../user/state/user.actions';\nimport * as fromUser from '../../user/state';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'csbc-login-dialog',\n  templateUrl: './login-dialog.component.html',\n  styleUrls: ['./login-dialog.component.scss']\n})\nexport class LoginDialogComponent implements OnInit {\n  loginForm = this.fb.group({\n    userName: ['', Validators.required],\n    password: ['', Validators.required]\n  });\n  isFormValid: boolean = false;\n  get userName() {\n    return this.loginForm.get('userName');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<LoginDialogComponent>,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private store: Store<fromUser.State>\n  ) {}\n\n  ngOnInit() {\n    this.isFormValid = true;\n  }\n  onCancelClick() {\n    this.dialogRef.close();\n  }\n  onSubmitClick() {\n    this.loginForm.markAllAsTouched();\n    console.log(this.loginForm);\n    if (!this.loginForm.invalid) {\n      this.validateUser(\n        this.loginForm.controls['userName'].value,\n        this.loginForm.controls['password'].value\n      );\n      this.store.select(fromUser.getCurrentUser).subscribe(user => {\n        console.log(user);\n        if (user !== null && user.userId !== 0) {\n          this.dialogRef.close();\n        } else {\n          this.isFormValid = false;\n        }\n\n      });\n    }\n  }\n  validateUser(userName: string, password: string) {\n    return this.authService.login(userName, password).subscribe(response => {\n      console.log(response);\n      if (response !== null) {\n        this.store.dispatch(new userActions.SetCurrentUser(response));\n      }\n    });\n  }\n}\n","<h1 mat-dialog-title>Login</h1>\n<div mat-dialog-content>\n  <form class=\"login-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmitClick()\">\n    <!-- <mat-error *ngIf=\"!isFormValid\" class=\"error\"\n      >User Name or password is not valid\n    </mat-error> -->\n    <mat-form-field>\n      <input matInput formControlName=\"userName\" placeholder=\"User Name\" />\n      <!-- <mat-error *ngIf=\"userName.errors\">login name is required</mat-error> -->\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Password\" />\n      <!-- <mat-error *ngIf=\"password.invalid\" class=\"error\"\n        >Password is required!</mat-error\n      > -->\n    </mat-form-field>\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button\n    mat-raised-button\n    mat-dialog-close\n    (click)=\"onSubmitClick()\"\n    cdkFocusInitial\n    color=\"primary\"\n    style=\"margin-right:10px;\"\n  >\n    Ok\n  </button>\n\n  <button mat-raised-button color=\"primary\" (click)=\"onCancelClick()\">\n    Cancel\n  </button>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { SeasonService } from '../../services/season.service';\nimport { Season } from '../../domain/season';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'csbc-season-select',\n  templateUrl: './csbc-season-select.component.html',\n  styleUrls: ['./csbc-season-select.component.css']\n})\nexport class CsbcSeasonSelectComponent implements OnInit {\n  @Input() seasons$: Observable<Season[]> | undefined;\n  @Input() selectedSeason: Season = new Season();\n  @Output() setSeason = new EventEmitter<Season>(); // : Season;\n\n  season: Season = new Season();\n  constructor(private _seasonService: SeasonService) {}\n\n  ngOnInit() {\n    // this.seasons = this._seasonService.getSeasons();\n    console.log(this.seasons$);\n    // this.selectedSeason = this.seasons[0];\n  }\n\n  onClick(season: Season): void {\n    console.log(season);\n    if (season.seasonId !== undefined) {\n      this.selectedSeason = season;\n      console.log(season);\n      this.setSeason.emit(season);\n    }\n  }\n}\n","<div>\n  <label>Season</label>\n   <select name=\"season\" class=\"form-control\" [(ngModel)] = \"selectedSeason\" (click)=\"onClick(selectedSeason)\" >\n     <option *ngFor=\"let season of seasons$ | async\" [ngValue]=\"season\" >\n       {{season.description}}\n       </option>\n   </select>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { LoginDialogComponent } from './login-dialog/login-dialog.component';\n\nimport { CoreModule } from '@app/core/core.module';\nimport { PageNotFoundComponent } from '@app/app.not-found.component';\nimport { MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\nimport { CsbcSeasonSelectComponent } from './season-select/csbc-season-select.component';\nimport { DivisionSelectComponent } from './division-select/division-select.component';\nimport { CsbcCardComponent } from './csbc-card/csbc-card.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, CoreModule],\n  exports: [CsbcSeasonSelectComponent, DivisionSelectComponent],\n  declarations: [\n    LoginDialogComponent,\n    PageNotFoundComponent,\n    CsbcSeasonSelectComponent,\n    DivisionSelectComponent,\n    CsbcCardComponent\n  ],\n  entryComponents: [LoginDialogComponent],\n  providers: [\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: false } }\n  ]\n})\nexport class SharedModule {}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport * as fromUser from '../../user/state';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { User } from 'app/domain/user';\n\n@Component({\n  selector: 'csbc-sidenav-list',\n  templateUrl: './sidenav-list.component.html',\n  styleUrls: ['./sidenav-list.component.css']\n})\nexport class SidenavListComponent implements OnInit {\n  @Output() sidenavClose = new EventEmitter();\n  showAdminMenu = false;\n  currentUser: User | undefined;\n  userName: string | undefined;\n\n  constructor(private store: Store<fromUser.State>) { }\n\n  ngOnInit() {\n    this.store.pipe(select(fromUser.getCurrentUser)).subscribe(user => {\n      // console.log(user);\n      if (user !== null && user.userId !== 0) {\n        this.currentUser = user;\n        if (user) {\n          this.userName = user.firstName;\n          this.showAdminMenu = user.screens == undefined ? false :\n            this.showAdminMenu = user.screens.length > 0;\n        }\n      }\n    });\n  }\n\n  public onSidenavClose = () => {\n    this.sidenavClose.emit();\n  };\n}\n","<mat-nav-list >\n    <a mat-list-item (click)=\"onSidenavClose()\" >\n    <mat-icon>home</mat-icon><span class=\"nav-caption\">Home</span>\n    </a>\n    <a mat-list-item routerLink=\"/games\" >Games</a>\n    <a  mat-list-item routerLink=\"/photos\">Photos</a>\n    <a  mat-list-item routerLink=\"/contacts\">Contacts</a>\n    <a  mat-list-item routerLink=\"/clubDocs\">Club Docs</a>\n    <a  mat-list-item *ngIf=\"showAdminMenu\" routerLink=\"/dashboard\">Dashboard</a>\n    <a  mat-list-item *ngIf=\"showAdminMenu\" routerLink=\"/admin\" >Admin</a>\n</mat-nav-list>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginDialogComponent } from '../login-dialog/login-dialog.component';\nimport * as userActions from '../../user/state/user.actions';\nimport * as fromUser from '../../user/state';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { User } from 'app/domain/user';\nimport { environment } from '../../../environments/environment';\nimport { Router } from '@angular/router';\nimport { Constants } from '../constants';\n@Component({\n  selector: 'csbc-top-nav',\n  templateUrl: './top-nav.component.html',\n  styleUrls: ['./top-nav.component.scss'],\n})\nexport class TopNavComponent implements OnInit {\n  @Output() public sidenavToggle = new EventEmitter();\n  currentUser$: Observable<User> | undefined;\n  userName: string | undefined;\n  showAdminMenu: boolean | undefined;\n  currentUser: User | undefined;\n  drawer!: {\n    opened: false;\n  };\n  env: any;\n  constants: typeof Constants;\n\n  constructor(public dialog: MatDialog, private store: Store<fromUser.State>, private route: Router) {\n    // this.route.events.subscribe(route => console.log(route));\n    this.constants = Constants;\n  }\n\n  ngOnInit() {\n    this.env = environment.environment;\n    // console.log(this.env);\n    this.store.pipe(select(fromUser.getCurrentUser)).subscribe((user) => {\n      // console.log(user);\n      if (user !== null && user.userId !== 0) {\n        this.currentUser = user;\n        if (user) {\n          this.userName = user.firstName;\n          if (this.env !== 'Production') {\n            this.showAdminMenu =\n              user.screens == undefined ? false : user.screens.length > 0;\n          }\n        }\n      }\n    });\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(LoginDialogComponent, {\n      width: '320px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n    });\n  }\n  public onToggleSidenav = () => {\n    this.sidenavToggle.emit();\n  };\n}\n","<!-- <div style=\"height: 100vh;\" class=\"wrapper\"> -->\n\n<mat-toolbar class=\"top-nav-toolbar\" color=\"default\" fxShow=\"true\">\n  <a routerLink=\"/home\" class=\"brand\">Coral Springs Basketball Club</a>\n  <div class=\"menu-spacer\"></div>\n  <div fxHide.gt-xs>\n    <button mat-button (click)=\"onToggleSidenav()\" class=\"menu-button\">\n      <mat-icon>menu</mat-icon>\n    </button>\n  </div>\n  <div fxFlex fxLayout fxHide.xs>\n    <a routerLink=\"/home\" mat-button>Home</a>\n    <a routerLink=\"/games\" mat-button>{{constants.GAMESMENU}}</a>\n    <a routerLink=\"/photos\" mat-button>{{constants.PHOTOMENU}}</a>\n    <a routerLink=\"/contacts\" mat-button>{{constants.CONTACTSMENU}}</a>\n    <a routerLink=\"/clubDocs\" mat-button>{{constants.CLUBDOCSMENU}}</a>\n    <a *ngIf=\"showAdminMenu\" routerLink=\"/admin\" mat-button>{{constants.ADMINMENU}}</a>\n    <!-- <a *ngIf=\"showAdminMenu\" routerLink=\"/dashboard\" mat-button>Dashboard</a> -->\n    <span class=\"fill-space\"></span>\n  </div>\n  <div fxFlex fxLayout fxLayoutAlign=\"end\">\n    <button mat-raised-button *ngIf=\"!currentUser\" (click)=\"openDialog()\"\n    matTooltip=\"Login for division directors\"\n    matTooltipClass=\"tooltip\">\n      Login\n    </button>\n    <p readonly *ngIf=\"currentUser\">Hello {{ userName }}</p>\n  </div>\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\nimport { User } from '../domain/user';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from 'app/services/data.service';\nimport * as userActions from '../user/state/user.actions';\nimport * as fromUser from '../user/state';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  currentUser: User  | undefined;\n  redirectUrl: string | undefined;\n  loginUrl: string | undefined;\n  user: User | undefined;\n\n  constructor(\n    private http: HttpClient,\n    private dataService: DataService,\n    private store: Store<fromUser.State>\n  ) {\n  }\n\n  isLoggedIn(): boolean {\n    return !!this.currentUser;\n  }\n\n  login(userName: string, password: string): Observable<User> {\n    let tFlag = false;\n    console.log(userName + ', ' + password);\n    return this.http\n      .get<User>(this.dataService.loginUrl + '/' + userName + '/' + password);\n\n  }\n  setUserState(user: User) {\n    this.store.dispatch(new userActions.SetCurrentUser(user));\n  }\n\n  logout(): void {\n    this.currentUser = undefined;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AuthService } from './auth.service';\nimport { Store, select } from '@ngrx/store';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  pageTitle = 'Log In';\n  errorMessage: string | undefined;\n  ngmodel: any | undefined;\n  maskUserName: boolean | undefined;\n\n  constructor(private store: Store<any>,\n    private authService: AuthService,\n    private router: Router) {\n  }\n\n  ngOnInit(): void {\n    // TODO: Unsubscribe\n    this.store.pipe(select('users')).subscribe(\n      users => {\n        if (users) {\n          this.maskUserName = users.maskUserName;\n        }\n      });\n  }\n\n  cancel(): void {\n    this.router.navigate(['welcome']);\n  }\n\n  checkChanged(value: boolean): void {\n    this.store.dispatch({\n      type: 'MASK_USER_NAME',\n      payload: value\n    });\n  }\n\n  login(loginForm: NgForm): void {\n    if (loginForm && loginForm.valid) {\n      const userName = loginForm.form.value.userName;\n      const password = loginForm.form.value.password;\n      this.authService.login(userName, password);\n\n      if (this.authService.redirectUrl) {\n        this.router.navigateByUrl(this.authService.redirectUrl);\n      } else {\n        this.router.navigate(['/products']);\n      }\n    } else {\n      this.errorMessage = 'Please enter a user name and password.';\n    }\n  }\n}\n","<div class='container main-content'>\n\n  <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n\n    <div class=\"card-body\">\n      <form class=\"needs-validation\" novalidate  autocomplete=\"off\">\n        <fieldset>\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"userNameId\">User Name</label>\n            <div class=\"col-md-8\">\n              <input class=\"form-control\"\n               id=\"userNameId\"\n               [type]= \"maskUserName ? 'password' : 'text'\"\n               placeholder=\"User Name (required)\"\n               required\n               ngModel\n               name=\"userName\" />\n              <!-- <div class=\"invalid-feedback\" *ngIf=\"(userNameVar.touched || userNameVar.dirty) && passwordVar.hasError('required')\">\n                User name is required.\n              </div> -->\n            </div>\n          </div>\n               <!-- [ngClass]=\"{'is-invalid': (userNameVar.touched || userNameVar.dirty) && !userNameVar.valid }\" -->\n\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"passwordId\">Password</label>\n            <div class=\"col-md-8\">\n              <input class=\"form-control\"\n                     id=\"passwordId\"\n                     type=\"password\"\n                     placeholder=\"Password (required)\"\n                     required\n                     ngModel\n                     name=\"password\" />\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"col-md-4 col-md-offset-2\">\n              <span>\n                <button class=\"btn btn-primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tstyle=\"width:80px;margin-right:10px\"\n\t\t\t\t\t\t>\n                  Log In\n                </button>\n              </span>\n              <span>\n                <a class=\"btn btn-light\" (click)=\"cancel()\">\n                  Cancel\n                </a>\n              </span>\n            </div>\n          </div>\n        </fieldset>\n      </form>\n      <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n    </div>\n\n    <div class=\"card-footer\">\n      <div class=\"row\">\n        <div class=\"form-check col-md-7\">\n          <label>\n            <!-- <input class=\"form-check-input\" \n                   type=\"checkbox\" \n                   (change)=\"checkChanged($event.target.checked)\" \n                   [checked]=\"maskUserName\"> -->\n            Mask user name\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {\n    createFeatureSelector,\n    createSelector,\n    ActionReducerMap\n  } from '@ngrx/store';\n  import * as fromRoot from '@app/state/app.state';\n  import * as fromUser from './user.reducer';\n\n  export interface State extends fromRoot.State {\n    user: fromUser.UserState;\n  }\n  const getUserFeatureState = createFeatureSelector<fromUser.UserState>('user');\n\nexport const getCurrentUser = createSelector(\n  getUserFeatureState,\n  state => state.currentUser\n);\n","/* NgRx */\nimport { Action } from '@ngrx/store';\nimport { User } from '@app/domain/user';\nimport * as fromUser from './index';\n\nexport enum UserActionTypes {\n  MaskUserName = '[User] Mask User Name',\n  SetCurrentUser = '[User] Set Current User'\n}\n\nexport class MaskUserName implements Action {\n  readonly type = UserActionTypes.MaskUserName;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class SetCurrentUser implements Action {\n  readonly type = UserActionTypes.SetCurrentUser;\n  constructor(public payload: User) {}\n}\nexport type UserActions = MaskUserName | SetCurrentUser;\n","import { User } from '../../domain/user';\n\n/* NgRx */\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { UserActions, UserActionTypes } from './user.actions';\n\n// State for this feature (User)\nexport interface UserState {\n  maskUserName: boolean;\n  currentUser: User;\n}\n\nconst initialState: UserState = {\n  maskUserName: true,\n  currentUser: new User(\n    0,\n    '',\n    false,\n  )\n};\n\n// Selector functions\nconst getProductFeatureState = createFeatureSelector<UserState>('users');\n\nexport const getMaskUserName = createSelector(\n  getProductFeatureState,\n  state => state.maskUserName\n);\n\nexport const getCurrentUser = createSelector(\n  getProductFeatureState,\n  state => state.currentUser\n);\n\nexport function reducer(state = initialState, action: UserActions): UserState {\n  switch (action.type) {\n    case UserActionTypes.MaskUserName:\n      return {\n        ...state,\n        maskUserName: action.payload\n      };\n      case UserActionTypes.SetCurrentUser:\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'csbc-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  user works!\n</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/* NgRx */\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './state/user.reducer';\n\n// import { AuthService } from './auth.service';\nimport { LoginComponent } from './login.component';\nimport { UserComponent } from './user.component';\nimport { AuthService } from '../auth.service';\n\n@NgModule({\n  exports: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('user', reducer)\n  ],\n  declarations: [\n    LoginComponent,\n    UserComponent\n  ],\n  providers: [AuthService]\n})\nexport class UserModule {}\n","export const environment = {\n  production: true,\n  apiUrl: 'https://csbchoopswebapi20210207173342.azurewebsites.net',\n  environment: 'production'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 74511,\n\t\"./af.js\": 74511,\n\t\"./ar\": 46371,\n\t\"./ar-dz\": 1586,\n\t\"./ar-dz.js\": 1586,\n\t\"./ar-kw\": 36674,\n\t\"./ar-kw.js\": 36674,\n\t\"./ar-ly\": 40234,\n\t\"./ar-ly.js\": 40234,\n\t\"./ar-ma\": 28280,\n\t\"./ar-ma.js\": 28280,\n\t\"./ar-sa\": 58961,\n\t\"./ar-sa.js\": 58961,\n\t\"./ar-tn\": 3579,\n\t\"./ar-tn.js\": 3579,\n\t\"./ar.js\": 46371,\n\t\"./az\": 46308,\n\t\"./az.js\": 46308,\n\t\"./be\": 28212,\n\t\"./be.js\": 28212,\n\t\"./bg\": 36850,\n\t\"./bg.js\": 36850,\n\t\"./bm\": 47231,\n\t\"./bm.js\": 47231,\n\t\"./bn\": 40968,\n\t\"./bn-bd\": 31848,\n\t\"./bn-bd.js\": 31848,\n\t\"./bn.js\": 40968,\n\t\"./bo\": 20977,\n\t\"./bo.js\": 20977,\n\t\"./br\": 65466,\n\t\"./br.js\": 65466,\n\t\"./bs\": 38481,\n\t\"./bs.js\": 38481,\n\t\"./ca\": 81598,\n\t\"./ca.js\": 81598,\n\t\"./cs\": 69192,\n\t\"./cs.js\": 69192,\n\t\"./cv\": 2744,\n\t\"./cv.js\": 2744,\n\t\"./cy\": 52387,\n\t\"./cy.js\": 52387,\n\t\"./da\": 56056,\n\t\"./da.js\": 56056,\n\t\"./de\": 97809,\n\t\"./de-at\": 15455,\n\t\"./de-at.js\": 15455,\n\t\"./de-ch\": 9938,\n\t\"./de-ch.js\": 9938,\n\t\"./de.js\": 97809,\n\t\"./dv\": 16389,\n\t\"./dv.js\": 16389,\n\t\"./el\": 69062,\n\t\"./el.js\": 69062,\n\t\"./en-au\": 52038,\n\t\"./en-au.js\": 52038,\n\t\"./en-ca\": 25418,\n\t\"./en-ca.js\": 25418,\n\t\"./en-gb\": 74204,\n\t\"./en-gb.js\": 74204,\n\t\"./en-ie\": 99882,\n\t\"./en-ie.js\": 99882,\n\t\"./en-il\": 20385,\n\t\"./en-il.js\": 20385,\n\t\"./en-in\": 46715,\n\t\"./en-in.js\": 46715,\n\t\"./en-nz\": 31629,\n\t\"./en-nz.js\": 31629,\n\t\"./en-sg\": 79478,\n\t\"./en-sg.js\": 79478,\n\t\"./eo\": 26069,\n\t\"./eo.js\": 26069,\n\t\"./es\": 41550,\n\t\"./es-do\": 1049,\n\t\"./es-do.js\": 1049,\n\t\"./es-mx\": 66750,\n\t\"./es-mx.js\": 66750,\n\t\"./es-us\": 57634,\n\t\"./es-us.js\": 57634,\n\t\"./es.js\": 41550,\n\t\"./et\": 87469,\n\t\"./et.js\": 87469,\n\t\"./eu\": 52481,\n\t\"./eu.js\": 52481,\n\t\"./fa\": 75539,\n\t\"./fa.js\": 75539,\n\t\"./fi\": 84220,\n\t\"./fi.js\": 84220,\n\t\"./fil\": 25743,\n\t\"./fil.js\": 25743,\n\t\"./fo\": 83610,\n\t\"./fo.js\": 83610,\n\t\"./fr\": 16981,\n\t\"./fr-ca\": 19572,\n\t\"./fr-ca.js\": 19572,\n\t\"./fr-ch\": 91067,\n\t\"./fr-ch.js\": 91067,\n\t\"./fr.js\": 16981,\n\t\"./fy\": 9556,\n\t\"./fy.js\": 9556,\n\t\"./ga\": 94798,\n\t\"./ga.js\": 94798,\n\t\"./gd\": 89058,\n\t\"./gd.js\": 89058,\n\t\"./gl\": 22457,\n\t\"./gl.js\": 22457,\n\t\"./gom-deva\": 39161,\n\t\"./gom-deva.js\": 39161,\n\t\"./gom-latn\": 22332,\n\t\"./gom-latn.js\": 22332,\n\t\"./gu\": 85223,\n\t\"./gu.js\": 85223,\n\t\"./he\": 85940,\n\t\"./he.js\": 85940,\n\t\"./hi\": 73902,\n\t\"./hi.js\": 73902,\n\t\"./hr\": 23801,\n\t\"./hr.js\": 23801,\n\t\"./hu\": 3521,\n\t\"./hu.js\": 3521,\n\t\"./hy-am\": 58614,\n\t\"./hy-am.js\": 58614,\n\t\"./id\": 32087,\n\t\"./id.js\": 32087,\n\t\"./is\": 77382,\n\t\"./is.js\": 77382,\n\t\"./it\": 68176,\n\t\"./it-ch\": 46489,\n\t\"./it-ch.js\": 46489,\n\t\"./it.js\": 68176,\n\t\"./ja\": 86925,\n\t\"./ja.js\": 86925,\n\t\"./jv\": 55237,\n\t\"./jv.js\": 55237,\n\t\"./ka\": 82353,\n\t\"./ka.js\": 82353,\n\t\"./kk\": 97336,\n\t\"./kk.js\": 97336,\n\t\"./km\": 71526,\n\t\"./km.js\": 71526,\n\t\"./kn\": 25523,\n\t\"./kn.js\": 25523,\n\t\"./ko\": 35731,\n\t\"./ko.js\": 35731,\n\t\"./ku\": 10604,\n\t\"./ku.js\": 10604,\n\t\"./ky\": 67227,\n\t\"./ky.js\": 67227,\n\t\"./lb\": 28976,\n\t\"./lb.js\": 28976,\n\t\"./lo\": 7629,\n\t\"./lo.js\": 7629,\n\t\"./lt\": 77082,\n\t\"./lt.js\": 77082,\n\t\"./lv\": 89795,\n\t\"./lv.js\": 89795,\n\t\"./me\": 74718,\n\t\"./me.js\": 74718,\n\t\"./mi\": 84604,\n\t\"./mi.js\": 84604,\n\t\"./mk\": 692,\n\t\"./mk.js\": 692,\n\t\"./ml\": 54971,\n\t\"./ml.js\": 54971,\n\t\"./mn\": 65202,\n\t\"./mn.js\": 65202,\n\t\"./mr\": 94512,\n\t\"./mr.js\": 94512,\n\t\"./ms\": 94471,\n\t\"./ms-my\": 72840,\n\t\"./ms-my.js\": 72840,\n\t\"./ms.js\": 94471,\n\t\"./mt\": 97438,\n\t\"./mt.js\": 97438,\n\t\"./my\": 37323,\n\t\"./my.js\": 37323,\n\t\"./nb\": 98782,\n\t\"./nb.js\": 98782,\n\t\"./ne\": 52842,\n\t\"./ne.js\": 52842,\n\t\"./nl\": 23419,\n\t\"./nl-be\": 83245,\n\t\"./nl-be.js\": 83245,\n\t\"./nl.js\": 23419,\n\t\"./nn\": 60219,\n\t\"./nn.js\": 60219,\n\t\"./oc-lnc\": 92717,\n\t\"./oc-lnc.js\": 92717,\n\t\"./pa-in\": 8301,\n\t\"./pa-in.js\": 8301,\n\t\"./pl\": 12568,\n\t\"./pl.js\": 12568,\n\t\"./pt\": 91318,\n\t\"./pt-br\": 96858,\n\t\"./pt-br.js\": 96858,\n\t\"./pt.js\": 91318,\n\t\"./ro\": 30490,\n\t\"./ro.js\": 30490,\n\t\"./ru\": 38520,\n\t\"./ru.js\": 38520,\n\t\"./sd\": 84467,\n\t\"./sd.js\": 84467,\n\t\"./se\": 75774,\n\t\"./se.js\": 75774,\n\t\"./si\": 29352,\n\t\"./si.js\": 29352,\n\t\"./sk\": 9639,\n\t\"./sk.js\": 9639,\n\t\"./sl\": 69767,\n\t\"./sl.js\": 69767,\n\t\"./sq\": 83421,\n\t\"./sq.js\": 83421,\n\t\"./sr\": 55443,\n\t\"./sr-cyrl\": 18228,\n\t\"./sr-cyrl.js\": 18228,\n\t\"./sr.js\": 55443,\n\t\"./ss\": 46985,\n\t\"./ss.js\": 46985,\n\t\"./sv\": 3060,\n\t\"./sv.js\": 3060,\n\t\"./sw\": 45093,\n\t\"./sw.js\": 45093,\n\t\"./ta\": 66988,\n\t\"./ta.js\": 66988,\n\t\"./te\": 8146,\n\t\"./te.js\": 8146,\n\t\"./tet\": 40839,\n\t\"./tet.js\": 40839,\n\t\"./tg\": 47386,\n\t\"./tg.js\": 47386,\n\t\"./th\": 93378,\n\t\"./th.js\": 93378,\n\t\"./tk\": 61924,\n\t\"./tk.js\": 61924,\n\t\"./tl-ph\": 75053,\n\t\"./tl-ph.js\": 75053,\n\t\"./tlh\": 29913,\n\t\"./tlh.js\": 29913,\n\t\"./tr\": 56594,\n\t\"./tr.js\": 56594,\n\t\"./tzl\": 59439,\n\t\"./tzl.js\": 59439,\n\t\"./tzm\": 89711,\n\t\"./tzm-latn\": 94166,\n\t\"./tzm-latn.js\": 94166,\n\t\"./tzm.js\": 89711,\n\t\"./ug-cn\": 81509,\n\t\"./ug-cn.js\": 81509,\n\t\"./uk\": 1485,\n\t\"./uk.js\": 1485,\n\t\"./ur\": 98955,\n\t\"./ur.js\": 98955,\n\t\"./uz\": 36067,\n\t\"./uz-latn\": 51527,\n\t\"./uz-latn.js\": 51527,\n\t\"./uz.js\": 36067,\n\t\"./vi\": 98501,\n\t\"./vi.js\": 98501,\n\t\"./x-pseudo\": 67666,\n\t\"./x-pseudo.js\": 67666,\n\t\"./yo\": 94031,\n\t\"./yo.js\": 94031,\n\t\"./zh-cn\": 74660,\n\t\"./zh-cn.js\": 74660,\n\t\"./zh-hk\": 46383,\n\t\"./zh-hk.js\": 46383,\n\t\"./zh-mo\": 86961,\n\t\"./zh-mo.js\": 86961,\n\t\"./zh-tw\": 58771,\n\t\"./zh-tw.js\": 58771\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"sourceRoot":"webpack:///"}